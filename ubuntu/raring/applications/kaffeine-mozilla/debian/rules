#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

DEB_DH_BUILDDEB_ARGS += -- -Z$(shell dpkg-deb --help | grep -q ":.* xz[,.]" \
                               && echo xz || echo bzip2)

DEB_CONFIGURE_INCLUDEDIR := /opt/trinity/include/tde
DEB_CONFIGURE_MANDIR := /opt/trinity/share/man
DEB_CONFIGURE_PREFIX := /opt/trinity
DEB_CONFIGURE_INFODIR := /opt/trinity/share/info

cdbs_configure_flags := --with-qt-dir=/usr/share/qt3 --disable-rpath --with-xinerama $(cdbs_kde_enable_final) $(cdbs_kde_enable_debug)

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

config.status:
	dh_testdir

	! [ -f /usr/share/libtool/ltmain.sh ] || \
	cp -f /usr/share/libtool/ltmain.sh ltmain.sh
	! [ -f /usr/share/libtool/config/ltmain.sh ] || \
	cp -f /usr/share/libtool/config/ltmain.sh ltmain.sh

	aclocal	
	autoconf
	automake

	# Apply Debian specific patches
	if test -d $(CURDIR)/debian/patches ;\
	then \
		for i in $(CURDIR)/debian/patches/*.diff.uu ;\
		do \
			cd $(CURDIR)/debian/patches ;\
			uudecode "$$i" ;\
			cd $(CURDIR) ;\
		done ;\
		patches=$$(find $(CURDIR)/debian/patches -name *.diff | sort);\
	fi ;\
	if test ! -f patch-stamp; then \
		for patch in $$patches ;\
		do \
			echo APPLYING PATCH\: "$${patch##*/}" ;\
			patch -p1 < "$$patch" ;\
		done ;\
		touch patch-stamp ;\
	fi
	
	# Add here commands to configure the package.
	CFLAGS="$(CFLAGS)" ./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/opt/trinity --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info
	


build: build-stamp

build-stamp: config.status
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE)
	#/usr/bin/docbook-to-man debian/kaffeine-mozilla.sgml > kaffeine-mozilla.1
	
	touch build-stamp

clean:
	dh_testdir
	dh_testroot

	! [ -f /usr/share/libtool/ltmain.sh ] || \
	cp -f /usr/share/libtool/ltmain.sh ltmain.sh
	! [ -f /usr/share/libtool/config/ltmain.sh ] || \
	cp -f /usr/share/libtool/config/ltmain.sh ltmain.sh

	aclocal
	automake

	rm -f build-stamp 

	# Add here commands to clean up after the build process.
	
	# Remove Debian specific patches
	if test -d $(CURDIR)/debian/patches ;\
	then \
		patches=$$(find $(CURDIR)/debian/patches -name *.diff | sort -r);\
	fi ;\
	if test -f patch-stamp; then \
		for patch in $$patches ;\
		do \
			echo REMOVING PATCH\: "$${patch##*/}" ;\
			patch -p1 -R < "$$patch" ;\
		done ;\
		for i in $(CURDIR)/debian/patches/*.diff.uu ;\
		do \
			 rm -f "$${i%%.uu}" ;\
		done ;\
		rm -f patch-stamp ;\
	fi
	
	-$(MAKE) distclean
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif


	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Add here commands to install the package into debian/kaffeine-mozilla.
	$(MAKE) install DESTDIR=$(CURDIR)/debian/kaffeine-mozilla-trinity

	mkdir -p debian/kaffeine-mozilla-trinity/opt/trinity/lib/mozilla/ && \
	mv -f debian/kaffeine-mozilla-trinity/opt/trinity/plugins/ \
		debian/kaffeine-mozilla-trinity/opt/trinity/lib/mozilla/
	mkdir -p debian/kaffeine-mozilla-trinity/usr/lib/mozilla/plugins/
	mv debian/kaffeine-mozilla-trinity/opt/trinity/lib/mozilla/plugins/kaffeineplugin.so debian/kaffeine-mozilla-trinity/usr/lib/mozilla/plugins/kaffeineplugin-trinity.so
	mv debian/kaffeine-mozilla-trinity/opt/trinity/lib/mozilla/plugins/kaffeineplugin.la debian/kaffeine-mozilla-trinity/usr/lib/mozilla/plugins/kaffeineplugin-trinity.la
	mv debian/kaffeine-mozilla-trinity/opt/trinity/lib/mozilla/plugins/kaffeineplugin.a debian/kaffeine-mozilla-trinity/usr/lib/mozilla/plugins/kaffeineplugin-trinity.a
	rm -rf debian/kaffeine-mozilla-trinity/opt


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress -X.bz2 -X.css -X.dcl -X.docbook -X-license -X.tag
	dh_fixperms
#	dh_perl
#	dh_python
	dh_makeshlibs -V
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb $(DEB_DH_BUILDDEB_ARGS)

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
