commit a24a8595fc6663038f6ce26cfed6276910eef984
Author: Darrell Anderson <humanreadable@yahoo.com>
Date:   1334302607 -0500

    Fix inadvertent "TQ" changes.

diff --git a/src/kvilib/config/kvi_defaults.h b/src/kvilib/config/kvi_defaults.h
index f7f9fd4..fc375b0 100644
--- a/src/kvilib/config/kvi_defaults.h
+++ b/src/kvilib/config/kvi_defaults.h
@@ -50,7 +50,7 @@
 #define KVI_DEFAULT_REALNAME "KVIrc " VERSION " '" KVI_RELEASE_NAME "' http://kvirc.net/"
 
 #define KVI_DEFAULT_PART_MESSAGE "No matter how dark the night, somehow the Sun rises once again"
-#define KVI_DEFAULT_TQUIT_MESSAGE "KVIrc $version $version(r) http://www.kvirc.net/"
+#define KVI_DEFAULT_QUIT_MESSAGE "KVIrc $version $version(r) http://www.kvirc.net/"
 #define KVI_DEFAULT_CTCP_USERINFO_REPLY "I'm too lazy to edit this field."
 #define KVI_DEFAULT_CTCP_PAGE_REPLY "Your message has been received and logged"
 #define KVI_DEFAULT_AWAY_MESSAGE "I'm off to see the wizard."
diff --git a/src/kvilib/ext/kvi_osinfo.cpp b/src/kvilib/ext/kvi_osinfo.cpp
index f2f39d2..5922e99 100644
--- a/src/kvilib/ext/kvi_osinfo.cpp
+++ b/src/kvilib/ext/kvi_osinfo.cpp
@@ -317,7 +317,7 @@ static TQString queryWinInfo( QueryInfo info)
 
 			lRet = RegOpenKeyEx( HKEY_LOCAL_MACHINE,
 				TEXT("SYSTEM\\CurrentControlSet\\Control\\ProductOptions"),
-				0, KEY_TQUERY_VALUE, &hKey );
+				0, KEY_QUERY_VALUE, &hKey );
 			if( lRet != ERROR_SUCCESS )
 				return FALSE;
 
@@ -348,7 +348,7 @@ static TQString queryWinInfo( QueryInfo info)
 			// Test for SP6 versus SP6a.
 			lRet = RegOpenKeyEx( HKEY_LOCAL_MACHINE,
 				TEXT("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix\\Q246009"),
-				0, KEY_TQUERY_VALUE, &hKey );
+				0, KEY_QUERY_VALUE, &hKey );
 			if( lRet == ERROR_SUCCESS )
 				szVersion+= TQString("Service Pack 6a (Build %1)").arg( osvi.dwBuildNumber & 0xFFFF );         
 			else // Windows NT 4.0 prior to SP6a
diff --git a/src/kvilib/irc/kvi_useridentity.cpp b/src/kvilib/irc/kvi_useridentity.cpp
index 4e3468d..5be98fa 100644
--- a/src/kvilib/irc/kvi_useridentity.cpp
+++ b/src/kvilib/irc/kvi_useridentity.cpp
@@ -172,7 +172,7 @@ const KviUserIdentity * KviUserIdentityManager::defaultIdentity()
 	ret->setUserName(KVI_DEFAULT_USERNAME);
 	ret->setRealName(KVI_DEFAULT_REALNAME);
 	ret->setPartMessage(KVI_DEFAULT_PART_MESSAGE);
-	ret->setQuitMessage(KVI_DEFAULT_TQUIT_MESSAGE);
+	ret->setQuitMessage(KVI_DEFAULT_QUIT_MESSAGE);
 	
 	m_pIdentityDict->replace(ret->id(),ret);
 	
diff --git a/src/kvilib/system/kvi_thread.cpp b/src/kvilib/system/kvi_thread.cpp
index 472486f..02dcdc0 100644
--- a/src/kvilib/system/kvi_thread.cpp
+++ b/src/kvilib/system/kvi_thread.cpp
@@ -152,7 +152,7 @@ static void kvi_threadInitialize()
 
 // the maximum length of the slave->master queue
 // over this length , the slave is forced to usleep()
-#define KVI_THREAD_MAX_EVENT_TQUEUE_LENGTH 50
+#define KVI_THREAD_MAX_EVENT_QUEUE_LENGTH 50
 
 static KviThreadManager * g_pThreadManager = 0;
 
@@ -319,7 +319,7 @@ void KviThreadManager::postSlaveEvent(TQObject *o,TQEvent *e)
 	// on the main application thread we also can't artificially process the events.
 	// So the solution is to skip this algorithm when at least one
 	// thread is in waiting state.
-	while((m_pEventQueue->count() > KVI_THREAD_MAX_EVENT_TQUEUE_LENGTH) && (m_iWaitingThreads < 1))
+	while((m_pEventQueue->count() > KVI_THREAD_MAX_EVENT_QUEUE_LENGTH) && (m_iWaitingThreads < 1))
 	{
 		// wait for the master to process the queue
 
diff --git a/src/kvirc/kernel/kvi_action.cpp b/src/kvirc/kernel/kvi_action.cpp
index 0c10f99..d27d69e 100644
--- a/src/kvirc/kernel/kvi_action.cpp
+++ b/src/kvirc/kernel/kvi_action.cpp
@@ -251,7 +251,7 @@ void KviAction::activeWindowChanged()
 				if(isEnabled())setEnabled(false);
 			}
 			break;
-		case KVI_WINDOW_TYPE_TQUERY:
+		case KVI_WINDOW_TYPE_QUERY:
 			if(m_uFlags & WindowQuery)
 			{
 				if(m_uFlags & WindowOnlyIfUsersSelected)
@@ -305,7 +305,7 @@ void KviAction::activeWindowSelectionStateChanged(bool bSelectedNow)
 				if(isEnabled())setEnabled(false);
 			}
 			break;
-		case KVI_WINDOW_TYPE_TQUERY:
+		case KVI_WINDOW_TYPE_QUERY:
 			if(m_uFlags & WindowQuery)
 			{
 				if(bSelectedNow != isEnabled())setEnabled(bSelectedNow);
diff --git a/src/kvirc/kernel/kvi_app_setup.cpp b/src/kvirc/kernel/kvi_app_setup.cpp
index c7ac426..b54760b 100644
--- a/src/kvirc/kernel/kvi_app_setup.cpp
+++ b/src/kvirc/kernel/kvi_app_setup.cpp
@@ -109,9 +109,9 @@ bool KviApp::checkLocalKvircDirectory(const TQString szDir)
 bool KviApp::checkFileAssociations()
 {
 #ifdef COMPILE_ON_WINDOWS
-#define TQUERY_BUFFER 2048
+#define QUERY_BUFFER 2048
 	char* buffer;
-	DWORD len = TQUERY_BUFFER;
+	DWORD len = QUERY_BUFFER;
 	DWORD err;
 	buffer = (char*)malloc(len*sizeof(char));
 	HKEY hKey;
@@ -130,7 +130,7 @@ bool KviApp::checkFileAssociations()
 		}
 	}
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,"KVIrcScript",0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
 
@@ -145,7 +145,7 @@ bool KviApp::checkFileAssociations()
 		}
 	}
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,"KVIrcScript\\DefaultIcon",0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
 
@@ -162,7 +162,7 @@ bool KviApp::checkFileAssociations()
 		}
 	}
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,"KVIrcScript\\Shell\\Parse",0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
 
@@ -177,7 +177,7 @@ bool KviApp::checkFileAssociations()
 		}
 	}
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,"KVIrcScript\\Shell\\Parse\\command",0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
 
@@ -210,7 +210,7 @@ bool KviApp::checkFileAssociations()
 		}
 	}
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,"KVIrcConfig",0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
 
@@ -229,7 +229,7 @@ bool KviApp::checkFileAssociations()
 		}
 	}
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,"KVIrcAddon",0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
 	//Theme
@@ -247,7 +247,7 @@ bool KviApp::checkFileAssociations()
 		}
 	}
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,"KVIrcTheme",0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
 
@@ -261,9 +261,9 @@ bool KviApp::checkFileAssociations()
 bool KviApp::checkUriAssociations(char * proto)
 {
 #ifdef COMPILE_ON_WINDOWS
-#define TQUERY_BUFFER 2048
+#define QUERY_BUFFER 2048
 	char* buffer;
-	DWORD len = TQUERY_BUFFER;
+	DWORD len = QUERY_BUFFER;
 	DWORD err;
 	buffer = (char*)malloc(len*sizeof(char));
 	HKEY hKey;
@@ -272,7 +272,7 @@ bool KviApp::checkUriAssociations(char * proto)
 
 	KviStr key=storedKey;
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,key,0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
 
@@ -287,7 +287,7 @@ bool KviApp::checkUriAssociations(char * proto)
 		}
 	}
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	if( (err=RegQueryValueEx( hKey,"URL Protocol",0,0,(LPBYTE)buffer,&len)) != ERROR_SUCCESS)
 	{
 		free(buffer);
@@ -295,7 +295,7 @@ bool KviApp::checkUriAssociations(char * proto)
 	}
 
 	key = storedKey+"\\DefaultIcon";
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,key,0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
 
@@ -312,7 +312,7 @@ bool KviApp::checkUriAssociations(char * proto)
 		}
 	}
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	key = storedKey+"\\Shell\\open";
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,key,0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
@@ -328,7 +328,7 @@ bool KviApp::checkUriAssociations(char * proto)
 		}
 	}
 
-	len = TQUERY_BUFFER;
+	len = QUERY_BUFFER;
 	key = storedKey+"\\Shell\\open\\command";
 	if(RegOpenKeyEx(HKEY_CLASSES_ROOT,key,0,KEY_READ,&hKey) != ERROR_SUCCESS )
 		return false;
diff --git a/src/kvirc/kernel/kvi_coreactionnames.h b/src/kvirc/kernel/kvi_coreactionnames.h
index 2c211ed..7309e28 100644
--- a/src/kvirc/kernel/kvi_coreactionnames.h
+++ b/src/kvirc/kernel/kvi_coreactionnames.h
@@ -45,7 +45,7 @@
 #define KVI_COREACTION_TILEWINDOWS (KVI_COREACTION_NAME_PREFIX "tilewindows")
 #define KVI_COREACTION_MINIMIZEALLWINDOWS (KVI_COREACTION_NAME_PREFIX "minimizeallwindows")
 #define KVI_COREACTION_NEWIRCCONTEXT (KVI_COREACTION_NAME_PREFIX "newirccontext")
-#define KVI_COREACTION_TQUITKVIRC (KVI_COREACTION_NAME_PREFIX "quitkvirc")
+#define KVI_COREACTION_QUITKVIRC (KVI_COREACTION_NAME_PREFIX "quitkvirc")
 #define KVI_COREACTION_IRCCONTEXTDISPLAY (KVI_COREACTION_NAME_PREFIX "irccontextdisplay")
 #define KVI_COREACTION_SEPARATOR (KVI_COREACTION_NAME_PREFIX "separator")
 #define KVI_COREACTION_CONNECT (KVI_COREACTION_NAME_PREFIX "connect")
diff --git a/src/kvirc/kernel/kvi_coreactions.cpp b/src/kvirc/kernel/kvi_coreactions.cpp
index fb6fa04..8a66430 100644
--- a/src/kvirc/kernel/kvi_coreactions.cpp
+++ b/src/kvirc/kernel/kvi_coreactions.cpp
@@ -427,14 +427,14 @@ void register_core_actions(KviActionManager * m)
 		"Ctrl+Alt+N");
 
 	SLOT_ACTION(
-		KVI_COREACTION_TQUITKVIRC,
+		KVI_COREACTION_QUITKVIRC,
 		g_pApp,
 		TQT_SLOT(quit()),
 		__tr2qs("Quit KVIrc"),
 		__tr2qs("Quits KVIrc closing all the current connections"),
 		KviActionManager::categoryGeneric(),
 		"kvi_bigicon_quit.png",
-		KVI_SMALLICON_TQUITAPP,
+		KVI_SMALLICON_QUITAPP,
 		0,
 		TQString());
 }
diff --git a/src/kvirc/kernel/kvi_iconmanager.h b/src/kvirc/kernel/kvi_iconmanager.h
index ef7f44f..9d1267c 100644
--- a/src/kvirc/kernel/kvi_iconmanager.h
+++ b/src/kvirc/kernel/kvi_iconmanager.h
@@ -45,7 +45,7 @@
 #define KVI_SMALLICON_DEFAULTICON 5
 #define KVI_SMALLICON_DOCK 6
 #define KVI_SMALLICON_UNDOCK 7
-#define KVI_SMALLICON_TQUITAPP 8
+#define KVI_SMALLICON_QUITAPP 8
 #define KVI_SMALLICON_CONSOLE 9
 #define KVI_SMALLICON_FLOPPY 10
 #define KVI_SMALLICON_PARSERERROR 11
@@ -84,8 +84,8 @@
 #define KVI_SMALLICON_DISCARD 44
 #define KVI_SMALLICON_OWNPRIVMSG 45
 #define KVI_SMALLICON_CHANPRIVMSG 46
-#define KVI_SMALLICON_TQUERY 47
-#define KVI_SMALLICON_TQUERYPRIVMSG 48
+#define KVI_SMALLICON_QUERY 47
+#define KVI_SMALLICON_QUERYPRIVMSG 48
 #define KVI_SMALLICON_HELP 49
 #define KVI_SMALLICON_MDIHELP 50
 #define KVI_SMALLICON_CTCPREPLY 51
@@ -95,9 +95,9 @@
 #define KVI_SMALLICON_CTCPREQUESTUNKNOWN 55
 #define KVI_SMALLICON_ACTION 56
 #define KVI_SMALLICON_AVATAR 57
-#define KVI_SMALLICON_TQUIT 58
+#define KVI_SMALLICON_QUIT 58
 #define KVI_SMALLICON_SPLIT 59
-#define KVI_SMALLICON_TQUITSPLIT 60
+#define KVI_SMALLICON_QUITSPLIT 60
 #define KVI_SMALLICON_NICK 61
 #define KVI_SMALLICON_DEOP 62
 #define KVI_SMALLICON_DEVOICE 63
@@ -139,7 +139,7 @@
 #define KVI_SMALLICON_UNLOCKEDOFF 99
 #define KVI_SMALLICON_OWNPRIVMSGCRYPTED 100
 #define KVI_SMALLICON_CHANPRIVMSGCRYPTED 101
-#define KVI_SMALLICON_TQUERYPRIVMSGCRYPTED 102
+#define KVI_SMALLICON_QUERYPRIVMSGCRYPTED 102
 #define KVI_SMALLICON_DCCCHATMSG 103
 #define KVI_SMALLICON_DCCCHATMSGCRYPTED 104
 #define KVI_SMALLICON_IRC 105
@@ -192,8 +192,8 @@
 #define KVI_SMALLICON_ALIAS 152
 #define KVI_SMALLICON_CHANNELNOTICE 153
 #define KVI_SMALLICON_CHANNELNOTICECRYPTED 154
-#define KVI_SMALLICON_TQUERYNOTICE 155
-#define KVI_SMALLICON_TQUERYNOTICECRYPTED 156
+#define KVI_SMALLICON_QUERYNOTICE 155
+#define KVI_SMALLICON_QUERYNOTICECRYPTED 156
 // FIXME: rename the icon 157: it was colliding with 141
 #define KVI_SMALLICON_SERVNOTICE 157
 #define KVI_SMALLICON_POPUP 158
@@ -219,7 +219,7 @@
 #define KVI_SMALLICON_LOOK 178
 #define KVI_SMALLICON_INPUT 179
 #define KVI_SMALLICON_MESSAGES 180
-#define KVI_SMALLICON_TQUERYTRACE 181
+#define KVI_SMALLICON_QUERYTRACE 181
 #define KVI_SMALLICON_NOCHANNEL 182
 #define KVI_SMALLICON_BROADCASTPRIVMSG 183
 #define KVI_SMALLICON_BROADCASTNOTICE 184
@@ -271,7 +271,7 @@
 #define KVI_SMALLICON_CRY 230
 #define KVI_SMALLICON_EYE 231
 #define KVI_SMALLICON_DEADCHANNEL 232
-#define KVI_SMALLICON_DEADTQUERY 233
+#define KVI_SMALLICON_DEADQUERY 233
 #define KVI_SMALLICON_SOUND 234
 #define KVI_SMALLICON_TOOLBAR 235
 #define KVI_SMALLICON_TEXTENCODING 236
diff --git a/src/kvirc/kernel/kvi_internalcmd.h b/src/kvirc/kernel/kvi_internalcmd.h
index 8ac0343..533dfc0 100644
--- a/src/kvirc/kernel/kvi_internalcmd.h
+++ b/src/kvirc/kernel/kvi_internalcmd.h
@@ -56,7 +56,7 @@
 #define KVI_INTERNALCOMMAND_POPUPEDITOR_OPEN 29
 #define KVI_INTERNALCOMMAND_EXECUTE_SCRIPT_FROM_DISK 30
 #define KVI_INTERNALCOMMAND_ACTIONEDITOR_OPEN 31
-#define KVI_INTERNALCOMMAND_TQUIT 32
+#define KVI_INTERNALCOMMAND_QUIT 32
 #define KVI_INTERNALCOMMAND_KVIRC_HOMEPAGE_RU 33
 #define KVI_INTERNALCOMMAND_OPENURL_KVIRC_ON_FREENODE 34
 #define KVI_INTERNALCOMMAND_OPENURL_KVIRC_ON_IRCNET 35
diff --git a/src/kvirc/kernel/kvi_ircconnection.cpp b/src/kvirc/kernel/kvi_ircconnection.cpp
index ec6085a..7f61e5d 100644
--- a/src/kvirc/kernel/kvi_ircconnection.cpp
+++ b/src/kvirc/kernel/kvi_ircconnection.cpp
@@ -697,7 +697,7 @@ void KviIrcConnection::resolveLocalHost()
 		}
 	} else {
 		m_pUserInfo->setLocalHostIp(szIp);
-		if(!_OUTPUT_TQUIET)
+		if(!_OUTPUT_QUIET)
 			m_pConsole->output(KVI_OUT_SYSTEMMESSAGE,__tr2qs("Local host address is %Q"),
 				&(m_pUserInfo->localHostIp()));
 	}
diff --git a/src/kvirc/kernel/kvi_ircconnectiontargetresolver.cpp b/src/kvirc/kernel/kvi_ircconnectiontargetresolver.cpp
index fa3ae79..7c8e12e 100644
--- a/src/kvirc/kernel/kvi_ircconnectiontargetresolver.cpp
+++ b/src/kvirc/kernel/kvi_ircconnectiontargetresolver.cpp
@@ -189,7 +189,7 @@ void KviIrcConnectionTargetResolver::lookupProxyHostname()
 
 	if(bValidIp)
 	{
-		if(!_OUTPUT_TQUIET)
+		if(!_OUTPUT_QUIET)
 			m_pConsole->output(KVI_OUT_SYSTEMMESSAGE,
 				__tr2qs("Using cached proxy IP address (%s)"),
 				m_pTarget->proxy()->m_szIp.ptr());
@@ -279,7 +279,7 @@ void KviIrcConnectionTargetResolver::proxyLookupTerminated(KviDns *)
 
 			for(TQString * addr = m_pProxyDns->hostnameList()->next();addr;addr = m_pProxyDns->hostnameList()->next())
 			{
-				if(!_OUTPUT_TQUIET)
+				if(!_OUTPUT_QUIET)
 					m_pConsole->output(KVI_OUT_SYSTEMMESSAGE,
 						__tr2qs("Proxy %Q has a nickname: %Q"),&szFirstHostname,addr);
 			}
@@ -317,7 +317,7 @@ void KviIrcConnectionTargetResolver::lookupServerHostname()
 
 	if(bValidIp && m_pTarget->server()->cacheIp())
 	{
-		if(!_OUTPUT_TQUIET)
+		if(!_OUTPUT_QUIET)
 			m_pConsole->output(KVI_OUT_SYSTEMMESSAGE,
 				__tr2qs("Using cached server IP address (%s)"),
 				m_pTarget->server()->m_szIp.utf8().data());
@@ -395,7 +395,7 @@ void KviIrcConnectionTargetResolver::serverLookupTerminated(KviDns *)
 
 	if(!KviTQString::equalCI(m_pTarget->server()->m_szHostname,m_pServerDns->firstHostname()))
 	{
-		if(!_OUTPUT_TQUIET)
+		if(!_OUTPUT_QUIET)
 			m_pConsole->output(KVI_OUT_SYSTEMMESSAGE,
 				__tr2qs("Real hostname for %Q is %Q"),
 				&(m_pTarget->server()->m_szHostname),
@@ -409,7 +409,7 @@ void KviIrcConnectionTargetResolver::serverLookupTerminated(KviDns *)
 	{
 		for(TQString * addr = m_pServerDns->hostnameList()->next();addr;addr = m_pServerDns->hostnameList()->next())
 		{
-			if(!_OUTPUT_TQUIET)
+			if(!_OUTPUT_QUIET)
 				m_pConsole->output(KVI_OUT_SYSTEMMESSAGE,
 					__tr2qs("Server %Q has a nickname: %Q"),
 					&szFirstHostname,addr);
diff --git a/src/kvirc/kernel/kvi_irccontext.cpp b/src/kvirc/kernel/kvi_irccontext.cpp
index 55c3998..183b46c 100644
--- a/src/kvirc/kernel/kvi_irccontext.cpp
+++ b/src/kvirc/kernel/kvi_irccontext.cpp
@@ -698,7 +698,7 @@ void KviIrcContext::connectionTerminated()
 	pInfo->m_bIsAway=connection()->userInfo()->isAway();
 	pInfo->m_szAwayReason=connection()->userInfo()->awayReason();
 
-	// we consider it unexpected when we haven't sent a TQUIT message and we're connected
+	// we consider it unexpected when we haven't sent a QUIT message and we're connected
 	// or alternatively when a simulation of such a termination is requested (this is used to keep the queries open etc..)
 	bool bUnexpectedDisconnect = (!(connection()->stateData()->sentQuit())) && (m_eState == KviIrcContext::Connected) ||
 									connection()->stateData()->simulateUnexpectedDisconnect();
@@ -871,7 +871,7 @@ void KviIrcContext::terminateConnectionRequest(bool bForce,const TQString &szQui
 				if(connection())connection()->abort();
 			} else {
 				if(!bWasSentQuit)
-					m_pConsole->outputNoFmt(KVI_OUT_SYSTEMMESSAGE,__tr2qs("Sent TQUIT, waiting for the server to close the connection..."));
+					m_pConsole->outputNoFmt(KVI_OUT_SYSTEMMESSAGE,__tr2qs("Sent QUIT, waiting for the server to close the connection..."));
 				// else it was already sent anyway
 			}
 		}
diff --git a/src/kvirc/kernel/kvi_ircsocket.cpp b/src/kvirc/kernel/kvi_ircsocket.cpp
index 4585276..cf312b2 100644
--- a/src/kvirc/kernel/kvi_ircsocket.cpp
+++ b/src/kvirc/kernel/kvi_ircsocket.cpp
@@ -273,7 +273,7 @@ int KviIrcSocket::startConnection(KviIrcServer *srv,KviProxy * prx,const char *
 		// check the proxy IP address
 		if(m_pProxy->isIpV6())
 		{
-			// IpV6 proxy :) (STILL TQUITE UNTESTED ?)
+			// IpV6 proxy :) (STILL QUITE UNTESTED ?)
 #ifdef COMPILE_IPV6_SUPPORT
 			bTargetIpV6 = true;
 			if(!kvi_isValidStringIp_V6(m_pProxy->ip()))return KviError_invalidProxyAddress;
@@ -743,7 +743,7 @@ void KviIrcSocket::proxyLoginV5()
 	// appear in the METHODS field.
 	// The values currently defined for TQT_METHOD are:
 	//
-	//      o  X'00' NO AUTHENTICATION RETQUIRED
+	//      o  X'00' NO AUTHENTICATION REQUIRED
 	//      o  X'01' GSSAPI
 	//      o  X'02' USERNAME/PASSWORD
 	//      o  X'03' CHAP
@@ -979,7 +979,7 @@ void KviIrcSocket::proxyHandleV5MethodReply(unsigned char reply)
 	//
 	// The values currently defined for TQT_METHOD are:
 	//
-	//      o  X'00' NO AUTHENTICATION RETQUIRED
+	//      o  X'00' NO AUTHENTICATION REQUIRED
 	//      o  X'01' GSSAPI
 	//      o  X'02' USERNAME/PASSWORD
 	//      o  X'03' CHAP
diff --git a/src/kvirc/kernel/kvi_options.cpp b/src/kvirc/kernel/kvi_options.cpp
index fce6137..6789f7e 100644
--- a/src/kvirc/kernel/kvi_options.cpp
+++ b/src/kvirc/kernel/kvi_options.cpp
@@ -338,7 +338,7 @@ KviStringOption g_stringOptionsTable[KVI_NUM_STRING_OPTIONS]=
 	STRING_OPTION("Realname",KVI_DEFAULT_REALNAME,KviOption_sectFlagUser),
 	STRING_OPTION("LocalHostIp","127.0.0.1",KviOption_sectFlagIrcSocket),
 	STRING_OPTION("PartMessage",KVI_DEFAULT_PART_MESSAGE,KviOption_sectFlagConnection),
-	STRING_OPTION("QuitMessage",KVI_DEFAULT_TQUIT_MESSAGE,KviOption_sectFlagConnection),
+	STRING_OPTION("QuitMessage",KVI_DEFAULT_QUIT_MESSAGE,KviOption_sectFlagConnection),
 	STRING_OPTION("UrlHttpCommand",RUN_THE_BROWSER,KviOption_sectFlagUrl),
 	STRING_OPTION("ExtendedPrivmsgPrefix","[",KviOption_sectFlagIrcView | KviOption_groupTheme),
 	STRING_OPTION("ExtendedPrivmsgPostfix","] ",KviOption_sectFlagIrcView | KviOption_groupTheme),
@@ -698,7 +698,7 @@ KviMsgTypeOption g_msgtypeOptionsTable[KVI_NUM_MSGTYPE_OPTIONS]=
 	MSGTYPE_OPTION("Topic",__tr_no_lookup("Topic message"),KVI_SMALLICON_TOPIC,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("OwnPrivateMessage",__tr_no_lookup("Own private message"),KVI_SMALLICON_OWNPRIVMSG,KVI_MSGTYPE_LEVEL_1),
 	MSGTYPE_OPTION("ChannelPrivateMessage",__tr_no_lookup("Channel private message"),KVI_SMALLICON_CHANPRIVMSG,KVI_MSGTYPE_LEVEL_4),
-	MSGTYPE_OPTION("QueryPrivateMessage",__tr_no_lookup("Query private message"),KVI_SMALLICON_TQUERYPRIVMSG,KVI_MSGTYPE_LEVEL_4),
+	MSGTYPE_OPTION("QueryPrivateMessage",__tr_no_lookup("Query private message"),KVI_SMALLICON_QUERYPRIVMSG,KVI_MSGTYPE_LEVEL_4),
 	MSGTYPE_OPTION("CtcpReply",__tr_no_lookup("CTCP reply"),KVI_SMALLICON_CTCPREPLY,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("CtcpRequestReplied",__tr_no_lookup("CTCP request replied"),KVI_SMALLICON_CTCPREQUESTREPLIED,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("CtcpRequestIgnored",__tr_no_lookup("CTCP request ignored"),KVI_SMALLICON_CTCPREQUESTIGNORED,KVI_MSGTYPE_LEVEL_3),
@@ -706,9 +706,9 @@ KviMsgTypeOption g_msgtypeOptionsTable[KVI_NUM_MSGTYPE_OPTIONS]=
 	MSGTYPE_OPTION("CtcpRequestUnknown",__tr_no_lookup("CTCP request unknown"),KVI_SMALLICON_CTCPREQUESTUNKNOWN,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("Action",__tr_no_lookup("User action"),KVI_SMALLICON_ACTION,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("AvatarChange",__tr_no_lookup("Avatar change"),KVI_SMALLICON_AVATAR,KVI_MSGTYPE_LEVEL_3),
-	MSGTYPE_OPTION("Quit",__tr_no_lookup("Quit message"),KVI_SMALLICON_TQUIT,KVI_MSGTYPE_LEVEL_1),
+	MSGTYPE_OPTION("Quit",__tr_no_lookup("Quit message"),KVI_SMALLICON_QUIT,KVI_MSGTYPE_LEVEL_1),
 	MSGTYPE_OPTION("Split",__tr_no_lookup("Split message"),KVI_SMALLICON_SPLIT,KVI_MSGTYPE_LEVEL_2),
-	MSGTYPE_OPTION("QuitSplit",__tr_no_lookup("Quit on netsplit message"),KVI_SMALLICON_TQUITSPLIT,KVI_MSGTYPE_LEVEL_2),
+	MSGTYPE_OPTION("QuitSplit",__tr_no_lookup("Quit on netsplit message"),KVI_SMALLICON_QUITSPLIT,KVI_MSGTYPE_LEVEL_2),
 	MSGTYPE_OPTION("Nick",__tr_no_lookup("Nick changes"),KVI_SMALLICON_NICK,KVI_MSGTYPE_LEVEL_2),
 	MSGTYPE_OPTION("Op",__tr_no_lookup("+o mode change"),KVI_SMALLICON_OP,KVI_MSGTYPE_LEVEL_2),
 	MSGTYPE_OPTION("Deop",__tr_no_lookup("-o mode change"),KVI_SMALLICON_DEOP,KVI_MSGTYPE_LEVEL_2),
@@ -739,7 +739,7 @@ KviMsgTypeOption g_msgtypeOptionsTable[KVI_NUM_MSGTYPE_OPTIONS]=
 	MSGTYPE_OPTION("NotifyOffLine",__tr_no_lookup("Notify list leaves"),KVI_SMALLICON_NOTIFYOFFLINE,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("OwnPrivmsgCrypted",__tr_no_lookup("Own encrypted private message"),KVI_SMALLICON_OWNPRIVMSGCRYPTED,KVI_MSGTYPE_LEVEL_1),
 	MSGTYPE_OPTION("ChanPrivmsgCrypted",__tr_no_lookup("Channel encrypted private message"),KVI_SMALLICON_CHANPRIVMSGCRYPTED,KVI_MSGTYPE_LEVEL_3),
-	MSGTYPE_OPTION("QueryPrivmsgCrypted",__tr_no_lookup("Query encrypted private message"),KVI_SMALLICON_TQUERYPRIVMSGCRYPTED,KVI_MSGTYPE_LEVEL_3),
+	MSGTYPE_OPTION("QueryPrivmsgCrypted",__tr_no_lookup("Query encrypted private message"),KVI_SMALLICON_QUERYPRIVMSGCRYPTED,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("DccChatMsg",__tr_no_lookup("DCC chat message"),KVI_SMALLICON_DCCCHATMSG,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("DccChatMsgCrypted",__tr_no_lookup("Encrypted DCC chat message"),KVI_SMALLICON_DCCCHATMSGCRYPTED,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("Irc",__tr_no_lookup("Login operations completed"),KVI_SMALLICON_IRC,KVI_MSGTYPE_LEVEL_1),
@@ -751,8 +751,8 @@ KviMsgTypeOption g_msgtypeOptionsTable[KVI_NUM_MSGTYPE_OPTIONS]=
 	MSGTYPE_OPTION("IcqMessageSent",__tr_no_lookup("Outgoing ICQ user-message"),KVI_SMALLICON_MESSAGESENT,KVI_MSGTYPE_LEVEL_1),
 	MSGTYPE_OPTION("ChannelNotice",__tr_no_lookup("Channel notice"),KVI_SMALLICON_CHANNELNOTICE,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("ChannelNoticeCrypted",__tr_no_lookup("Encrypted channel notice"),KVI_SMALLICON_CHANNELNOTICECRYPTED,KVI_MSGTYPE_LEVEL_3),
-	MSGTYPE_OPTION("QueryNotice",__tr_no_lookup("Query notice"),KVI_SMALLICON_TQUERYNOTICE,KVI_MSGTYPE_LEVEL_3),
-	MSGTYPE_OPTION("QueryNoticeCrypted",__tr_no_lookup("Encrypted query notice"),KVI_SMALLICON_TQUERYNOTICECRYPTED,KVI_MSGTYPE_LEVEL_3),
+	MSGTYPE_OPTION("QueryNotice",__tr_no_lookup("Query notice"),KVI_SMALLICON_QUERYNOTICE,KVI_MSGTYPE_LEVEL_3),
+	MSGTYPE_OPTION("QueryNoticeCrypted",__tr_no_lookup("Encrypted query notice"),KVI_SMALLICON_QUERYNOTICECRYPTED,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("ServerNotice",__tr_no_lookup("Server notice"),KVI_SMALLICON_SERVERNOTICE,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("HalfOp",__tr_no_lookup("Halfop mode change"),KVI_SMALLICON_HALFOP,KVI_MSGTYPE_LEVEL_2),
 	MSGTYPE_OPTION("CtcpReplyUnknown",__tr_no_lookup("Unknown CTCP reply"),KVI_SMALLICON_CTCPREPLYUNKNOWN,KVI_MSGTYPE_LEVEL_3),
@@ -764,7 +764,7 @@ KviMsgTypeOption g_msgtypeOptionsTable[KVI_NUM_MSGTYPE_OPTIONS]=
 	MSGTYPE_OPTION("HalfDeOp",__tr_no_lookup("Half-deop mode change"),KVI_SMALLICON_HALFDEOP,KVI_MSGTYPE_LEVEL_2),
 	MSGTYPE_OPTION("Invite",__tr_no_lookup("Invite message"),KVI_SMALLICON_INVITE,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("Multimedia",__tr_no_lookup("Multimedia message"),KVI_SMALLICON_MULTIMEDIA,KVI_MSGTYPE_LEVEL_2),
-	MSGTYPE_OPTION("QueryTrace",__tr_no_lookup("Query trace message"),KVI_SMALLICON_TQUERYTRACE,KVI_MSGTYPE_LEVEL_1),
+	MSGTYPE_OPTION("QueryTrace",__tr_no_lookup("Query trace message"),KVI_SMALLICON_QUERYTRACE,KVI_MSGTYPE_LEVEL_1),
 	MSGTYPE_OPTION("Wallops",__tr_no_lookup("Wallops message"),KVI_SMALLICON_WALLOPS,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("JoinError",__tr_no_lookup("Join error message"),KVI_SMALLICON_NOCHANNEL,KVI_MSGTYPE_LEVEL_3),
 	MSGTYPE_OPTION("BroadcastPrivmsg",__tr_no_lookup("Broadcast private message"),KVI_SMALLICON_BROADCASTPRIVMSG,KVI_MSGTYPE_LEVEL_3),
diff --git a/src/kvirc/kernel/kvi_options.h b/src/kvirc/kernel/kvi_options.h
index 1395aba..881042c 100644
--- a/src/kvirc/kernel/kvi_options.h
+++ b/src/kvirc/kernel/kvi_options.h
@@ -641,14 +641,14 @@ extern KVIRC_API KviStringListOption g_stringlistOptionsTable[KVI_NUM_STRINGLIST
 // Verbosity constants
 
 #define KVI_VERBOSITY_LEVEL_MUTE 0
-#define KVI_VERBOSITY_LEVEL_TQUIET 1
+#define KVI_VERBOSITY_LEVEL_QUIET 1
 #define KVI_VERBOSITY_LEVEL_NORMAL 2
 #define KVI_VERBOSITY_LEVEL_VERBOSE 3
 #define KVI_VERBOSITY_LEVEL_PARANOIC 4
 
 #define _OUTPUT_PARANOIC (KVI_OPTION_UINT(KviOption_uintOutputVerbosityLevel) >= KVI_VERBOSITY_LEVEL_PARANOIC)
 #define _OUTPUT_VERBOSE (KVI_OPTION_UINT(KviOption_uintOutputVerbosityLevel) >= KVI_VERBOSITY_LEVEL_VERBOSE)
-#define _OUTPUT_TQUIET (KVI_OPTION_UINT(KviOption_uintOutputVerbosityLevel) <= KVI_VERBOSITY_LEVEL_TQUIET)
+#define _OUTPUT_QUIET (KVI_OPTION_UINT(KviOption_uintOutputVerbosityLevel) <= KVI_VERBOSITY_LEVEL_QUIET)
 #define _OUTPUT_MUTE (KVI_OPTION_UINT(KviOption_uintOutputVerbosityLevel) <= KVI_VERBOSITY_LEVEL_MUTE)
 
 #ifdef COMPILE_USE_QT4
diff --git a/src/kvirc/kernel/kvi_out.h b/src/kvirc/kernel/kvi_out.h
index 9a5bdc0..7482906 100644
--- a/src/kvirc/kernel/kvi_out.h
+++ b/src/kvirc/kernel/kvi_out.h
@@ -50,7 +50,7 @@
 #define KVI_OUT_TOPIC 23
 #define KVI_OUT_OWNPRIVMSG 24
 #define KVI_OUT_CHANPRIVMSG 25
-#define KVI_OUT_TQUERYPRIVMSG 26
+#define KVI_OUT_QUERYPRIVMSG 26
 #define KVI_OUT_CTCPREPLY 27
 #define KVI_OUT_CTCPREQUESTREPLIED 28
 #define KVI_OUT_CTCPREQUESTIGNORED 29
@@ -58,9 +58,9 @@
 #define KVI_OUT_CTCPREQUESTUNKNOWN 31
 #define KVI_OUT_ACTION 32
 #define KVI_OUT_AVATAR 33
-#define KVI_OUT_TQUIT 34
+#define KVI_OUT_QUIT 34
 #define KVI_OUT_SPLIT 35
-#define KVI_OUT_TQUITSPLIT 36
+#define KVI_OUT_QUITSPLIT 36
 #define KVI_OUT_NICK 37
 #define KVI_OUT_OP 38
 #define KVI_OUT_DEOP 39
@@ -91,7 +91,7 @@
 #define KVI_OUT_NOTIFYOFFLINE 64
 #define KVI_OUT_OWNPRIVMSGCRYPTED 65
 #define KVI_OUT_CHANPRIVMSGCRYPTED 66
-#define KVI_OUT_TQUERYPRIVMSGCRYPTED 67
+#define KVI_OUT_QUERYPRIVMSGCRYPTED 67
 #define KVI_OUT_DCCCHATMSG 68
 #define KVI_OUT_DCCCHATMSGCRYPTED 69
 #define KVI_OUT_IRC 70
@@ -103,8 +103,8 @@
 #define KVI_OUT_ICTQMESSAGESENT 76
 #define KVI_OUT_CHANNELNOTICE 77
 #define KVI_OUT_CHANNELNOTICECRYPTED 78
-#define KVI_OUT_TQUERYNOTICE 79
-#define KVI_OUT_TQUERYNOTICECRYPTED 80
+#define KVI_OUT_QUERYNOTICE 79
+#define KVI_OUT_QUERYNOTICECRYPTED 80
 #define KVI_OUT_SERVERNOTICE 81
 #define KVI_OUT_HALFOP 82
 #define KVI_OUT_CTCPREPLYUNKNOWN 83
@@ -116,7 +116,7 @@
 #define KVI_OUT_HALFDEOP 89
 #define KVI_OUT_INVITE 90
 #define KVI_OUT_MULTIMEDIA 91
-#define KVI_OUT_TQUERYTRACE 92
+#define KVI_OUT_QUERYTRACE 92
 #define KVI_OUT_WALLOPS 93
 #define KVI_OUT_JOINERROR 94
 #define KVI_OUT_BROADCASTPRIVMSG 95
diff --git a/src/kvirc/kernel/kvi_userinput.cpp b/src/kvirc/kernel/kvi_userinput.cpp
index 0bf241d..3f4dbbc 100644
--- a/src/kvirc/kernel/kvi_userinput.cpp
+++ b/src/kvirc/kernel/kvi_userinput.cpp
@@ -127,7 +127,7 @@ namespace KviUserInput
 					pWindow->output(KVI_OUT_PARSERERROR,__tr2qs("You are not connected to a server"));
 				break;
 				case KVI_WINDOW_TYPE_CHANNEL:
-				case KVI_WINDOW_TYPE_TQUERY:
+				case KVI_WINDOW_TYPE_QUERY:
 					if(pWindow->connection())
 					{
 						if(KVI_OPTION_BOOL(KviOption_boolExitAwayOnInput)) 
diff --git a/src/kvirc/kvs/kvi_kvs_corecallbackcommands.cpp b/src/kvirc/kvs/kvi_kvs_corecallbackcommands.cpp
index 7a675d2..93880f5 100644
--- a/src/kvirc/kvs/kvi_kvs_corecallbackcommands.cpp
+++ b/src/kvirc/kvs/kvi_kvs_corecallbackcommands.cpp
@@ -347,7 +347,7 @@ namespace KviKvsCoreCallbackCommands
 			KVSCCC_PARAMETER("magic",KVS_PT_VARIANT,KVS_PF_OPTIONAL,pMagic)
 		KVSCCC_PARAMETERS_END
 
-		KVSCCC_RETQUIRE_CONNECTION
+		KVSCCC_REQUIRE_CONNECTION
 
 		KviTQCString szN = KVSCCC_pConnection->encodeText(szNick);
 
@@ -883,7 +883,7 @@ namespace KviKvsCoreCallbackCommands
 					{
 						[comment]# We don't wait anymore :)[/comment]
 						%:state++
-						echo "Sending TQUIT..."
+						echo "Sending QUIT..."
 						return "QUIT$cr$lf"
 					}
 					break;
diff --git a/src/kvirc/kvs/kvi_kvs_corecallbackcommands.h b/src/kvirc/kvs/kvi_kvs_corecallbackcommands.h
index 478358d..ce77ec6 100644
--- a/src/kvirc/kvs/kvi_kvs_corecallbackcommands.h
+++ b/src/kvirc/kvs/kvi_kvs_corecallbackcommands.h
@@ -48,7 +48,7 @@
 	KVS_PARAMETERS_END \
 	if(!KviKvsParameterProcessor::process(KVSCCC_pParams,KVSCCC_pContext,parameter_format_list))return false;
 
-#define KVSCCC_RETQUIRE_CONNECTION \
+#define KVSCCC_REQUIRE_CONNECTION \
 	if(!KVSCCC_pContext->window()->context())return KVSCCC_pContext->errorNoIrcContext(); \
 	if(!KVSCCC_pContext->window()->connection())return KVSCCC_pContext->warningNoIrcConnection();
 
diff --git a/src/kvirc/kvs/kvi_kvs_corefunctions_mr.cpp b/src/kvirc/kvs/kvi_kvs_corefunctions_mr.cpp
index 00d8d2d..6968c1e 100644
--- a/src/kvirc/kvs/kvi_kvs_corefunctions_mr.cpp
+++ b/src/kvirc/kvs/kvi_kvs_corefunctions_mr.cpp
@@ -496,7 +496,7 @@ namespace KviKvsCoreFunctions
 				}
 			}
 		} else {
-			if(KVSCF_pContext->window()->type() == KVI_WINDOW_TYPE_TQUERY)wnd = KVSCF_pContext->window();
+			if(KVSCF_pContext->window()->type() == KVI_WINDOW_TYPE_QUERY)wnd = KVSCF_pContext->window();
 		}
 
 		KVSCF_pRetBuffer->setInteger((kvs_int_t)(wnd ? wnd->numericId() : 0));
diff --git a/src/kvirc/kvs/kvi_kvs_corefunctions_sz.cpp b/src/kvirc/kvs/kvi_kvs_corefunctions_sz.cpp
index e56abbe..5b1c60d 100644
--- a/src/kvirc/kvs/kvi_kvs_corefunctions_sz.cpp
+++ b/src/kvirc/kvs/kvi_kvs_corefunctions_sz.cpp
@@ -73,7 +73,7 @@ namespace KviKvsCoreFunctions
 {
 	/////////////////////////////////////////////////////////////////////////////////////////
 
-	// FIXME: #warning "THIS HAS TO WORK FOR TQUERIES TOO!"
+	// FIXME: #warning "THIS HAS TO WORK FOR QUERIES TOO!"
 	/*
 		@doc: selected
 		@type:
diff --git a/src/kvirc/kvs/kvi_kvs_coresimplecommands.cpp b/src/kvirc/kvs/kvi_kvs_coresimplecommands.cpp
index 97a669f..c1cc418 100644
--- a/src/kvirc/kvs/kvi_kvs_coresimplecommands.cpp
+++ b/src/kvirc/kvs/kvi_kvs_coresimplecommands.cpp
@@ -146,7 +146,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("tokens",KVS_PT_STRING,KVS_PF_APPENDREMAINING,szTokens)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		if(KVSCSC_pWindow->type() != KVI_WINDOW_TYPE_CHANNEL)
 		{
@@ -222,7 +222,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("text",KVS_PT_STRING,KVS_PF_OPTIONAL | KVS_PF_APPENDREMAINING,szText)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		KviTQCString txt = KVSCSC_pConnection->encodeText(szText);
 		KviTQCString cmd = KVSCSC_pConnection->encodeText(((KviKvsTreeNodeCommand *)(KVSCSC_pContext->defaultReportLocation()))->commandName());
diff --git a/src/kvirc/kvs/kvi_kvs_coresimplecommands.h b/src/kvirc/kvs/kvi_kvs_coresimplecommands.h
index 9c773a9..94acbdc 100644
--- a/src/kvirc/kvs/kvi_kvs_coresimplecommands.h
+++ b/src/kvirc/kvs/kvi_kvs_coresimplecommands.h
@@ -46,7 +46,7 @@
 	KVS_PARAMETERS_END \
 	if(!KviKvsParameterProcessor::process(KVSCSC_pParams,KVSCSC_pContext,parameter_format_list))return false;
 
-#define KVSCSC_RETQUIRE_CONNECTION \
+#define KVSCSC_REQUIRE_CONNECTION \
 	if(!KVSCSC_pContext->window()->context())return KVSCSC_pContext->errorNoIrcContext(); \
 	if(!KVSCSC_pContext->window()->connection())return KVSCSC_pContext->warningNoIrcConnection();
 
diff --git a/src/kvirc/kvs/kvi_kvs_coresimplecommands_af.cpp b/src/kvirc/kvs/kvi_kvs_coresimplecommands_af.cpp
index 398b11c..6eb820e 100644
--- a/src/kvirc/kvs/kvi_kvs_coresimplecommands_af.cpp
+++ b/src/kvirc/kvs/kvi_kvs_coresimplecommands_af.cpp
@@ -118,7 +118,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("reason",KVS_PT_STRING,KVS_PF_OPTIONAL | KVS_PF_APPENDREMAINING,szReason)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		if(szReason.isEmpty())szReason = KVI_OPTION_STRING(KviOption_stringAwayMessage);
 	
@@ -190,7 +190,7 @@ namespace KviKvsCoreSimpleCommands
 				++it;
 			}
 		} else {
-			KVSCSC_RETQUIRE_CONNECTION
+			KVSCSC_REQUIRE_CONNECTION
 	
 			if(!(KVSCSC_pConnection->sendFmtData("AWAY")))
 				return KVSCSC_pContext->warningNoIrcConnection();
@@ -514,7 +514,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("ctcp_data",KVS_PT_STRING,KVS_PF_OPTIONAL | KVS_PF_APPENDREMAINING,szCtcpData)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 		
 		if(KviTQString::equalCI(szCtcpData,"PING"))
 		{
diff --git a/src/kvirc/kvs/kvi_kvs_coresimplecommands_gl.cpp b/src/kvirc/kvs/kvi_kvs_coresimplecommands_gl.cpp
index e787cf2..c46ecb2 100644
--- a/src/kvirc/kvs/kvi_kvs_coresimplecommands_gl.cpp
+++ b/src/kvirc/kvs/kvi_kvs_coresimplecommands_gl.cpp
@@ -389,7 +389,7 @@ try_again:
 			KVSCSC_PARAMETER("keys",KVS_PT_STRING,KVS_PF_OPTIONAL,szKeys)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		TQStringList slChans = TQStringList::split(",",szChans);
 
@@ -458,7 +458,7 @@ try_again:
 			KVSCSC_PARAMETER("reason",KVS_PT_STRING,KVS_PF_OPTIONAL | KVS_PF_APPENDREMAINING,szReason)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		if(KVSCSC_pWindow->type() != KVI_WINDOW_TYPE_CHANNEL)
 		{
diff --git a/src/kvirc/kvs/kvi_kvs_coresimplecommands_mr.cpp b/src/kvirc/kvs/kvi_kvs_coresimplecommands_mr.cpp
index e79fb9b..d398b18 100644
--- a/src/kvirc/kvs/kvi_kvs_coresimplecommands_mr.cpp
+++ b/src/kvirc/kvs/kvi_kvs_coresimplecommands_mr.cpp
@@ -83,12 +83,12 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("text",KVS_PT_STRING,KVS_PF_OPTIONAL | KVS_PF_APPENDREMAINING,szText)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		switch(KVSCSC_pWindow->type())
 		{
 			case KVI_WINDOW_TYPE_CHANNEL:
-			case KVI_WINDOW_TYPE_TQUERY:
+			case KVI_WINDOW_TYPE_QUERY:
 			case KVI_WINDOW_TYPE_DCCCHAT:
 				KVSCSC_pWindow->ownAction(szText);
 			break;
@@ -130,7 +130,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("text",KVS_PT_STRING,KVS_PF_APPENDREMAINING,szText)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		KviTQCString szTxt = KVSCSC_pConnection->encodeText(szText);
 
@@ -217,7 +217,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("nickname",KVS_PT_NONEMPTYSTRING,0,szNick)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		KviTQCString szData = KVSCSC_pConnection->encodeText(szNick);
 		if(!szData.data())szData = "";
@@ -265,7 +265,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("text",KVS_PT_STRING,KVS_PF_OPTIONAL | KVS_PF_APPENDREMAINING,szText)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		KviWindow * w = KVSCSC_pConnection->findChannel(szTarget);
 		if(!w)w = KVSCSC_pConnection->findQuery(szTarget);
@@ -705,7 +705,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("part_message",KVS_PT_STRING,KVS_PF_OPTIONAL | KVS_PF_APPENDREMAINING,szMsg)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		if(szChans.isEmpty())
 		{
@@ -940,7 +940,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("text",KVS_PT_STRING,KVS_PF_OPTIONAL | KVS_PF_APPENDREMAINING,szText)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		KviWindow * w = KVSCSC_pConnection->findChannel(szTarget);
 		if(!w)w = KVSCSC_pConnection->findQuery(szTarget);
@@ -1000,7 +1000,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("text",KVS_PT_STRING,KVS_PF_OPTIONAL | KVS_PF_APPENDREMAINING,szText)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		KviQuery * query;
 		
@@ -1053,21 +1053,21 @@ namespace KviKvsCoreSimpleCommands
 			!sw: -q | --quit
 			Terminates this KVIrc application instance
 			!sw: -f | --force
-			Forces the immediate termination of the current IRC session (The TQUIT message may be not sent)
+			Forces the immediate termination of the current IRC session (The QUIT message may be not sent)
 			!sw: -u | --unexpected
 			Simulates an "unexpected disconnection"
 		@description:
 			Terminates the current IRC session.[br]
-			By default this command sends a TQUIT message 
+			By default this command sends a QUIT message 
 			and waits for the server to close the connection.[br]
 			If you want to force KVIrc to close the connection 
-			immediately after sending the TQUIT message you must use the -f switch.[br]
+			immediately after sending the QUIT message you must use the -f switch.[br]
 			Forcing the connection may cause your quit message to not be 
 			displayed to the other IRC users: most likely it will be replaced 
 			by a 'Connection reset by peer' or a 'EOF from client'.[br]
 			If the -u switch is specified then an "unexpected disconnection" will be simulated
 			and all the related options will be applied (e.g. automatic reconnection,
-			channels and queries kept open etc..). The TQUIT message will be still sent unless
+			channels and queries kept open etc..). The QUIT message will be still sent unless
 			the -f switch is used. You can control all the "unexpected
 			disconnection" options in the options dialog.
 			If the -q switch is specified , this command terminates KVIrc immediately.[br]
@@ -1088,7 +1088,7 @@ namespace KviKvsCoreSimpleCommands
 		{
 			TQTimer::singleShot(0,g_pApp,TQT_SLOT(quit()));
 		} else {
-			KVSCSC_RETQUIRE_CONNECTION
+			KVSCSC_REQUIRE_CONNECTION
 			KVSCSC_pWindow->context()->terminateConnectionRequest(KVSCSC_pSwitches->find('f',"force"),szReason,KVSCSC_pSwitches->find('u',"unexpected"));
 		}	
 		return true;
@@ -1175,7 +1175,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("raw_command",KVS_PT_STRING,KVS_PF_APPENDREMAINING,szRawCommand)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		KviTQCString szData = KVSCSC_pConnection->encodeText(szRawCommand);
 		if(!szData.data())szData = "";
diff --git a/src/kvirc/kvs/kvi_kvs_coresimplecommands_sz.cpp b/src/kvirc/kvs/kvi_kvs_coresimplecommands_sz.cpp
index 85c6c5c..6bfa61a 100644
--- a/src/kvirc/kvs/kvi_kvs_coresimplecommands_sz.cpp
+++ b/src/kvirc/kvs/kvi_kvs_coresimplecommands_sz.cpp
@@ -595,7 +595,7 @@ namespace KviKvsCoreSimpleCommands
 			KVSCSC_PARAMETER("topic",KVS_PT_STRING,KVS_PF_OPTIONAL | KVS_PF_APPENDREMAINING,szTopic)
 		KVSCSC_PARAMETERS_END
 
-		KVSCSC_RETQUIRE_CONNECTION
+		KVSCSC_REQUIRE_CONNECTION
 
 		if(szChannel.isEmpty())
 		{
diff --git a/src/kvirc/kvs/kvi_kvs_eventtable.cpp b/src/kvirc/kvs/kvi_kvs_eventtable.cpp
index b2fc61b..4b8c8c9 100644
--- a/src/kvirc/kvs/kvi_kvs_eventtable.cpp
+++ b/src/kvirc/kvs/kvi_kvs_eventtable.cpp
@@ -842,7 +842,7 @@ KviKvsEvent KviKvsEventManager::m_appEventTable[KVI_NUM_SCRIPT_EVENTS]=
 			Console
 		@description:
 			Triggered when an user is quitting IRC.[br]
-			The TQUIT message has already been processed by the server , so
+			The QUIT message has already been processed by the server , so
 			the user is effectively no longer on IRC.
 			On the other side, it might be useful to access the user-related data from
 			this event, thus the handler is called effectively just BEFORE the
@@ -2797,11 +2797,11 @@ channel
 			Triggered when the user requests a disconnection from
 			a server by pressing the "disconnect", by closing
 			the console or closing KVIrc. It is your last chance
-			to send some meaningful data to the server before the TQUIT message
+			to send some meaningful data to the server before the QUIT message
 			is sent. You can't prevent the user from disconnecting: [cmd]halt [/cmd]does nothing here.[br]
 			This event is useful to either give a salute to all the users
 			you were talking with or maybe to send some commands to the
-			bouncer you're connected to. Note that you can override the TQUIT
+			bouncer you're connected to. Note that you can override the QUIT
 			message sent by KVIrc by sending it by youself first.[br]
 		@seealso:
 	*/
diff --git a/src/kvirc/kvs/kvi_kvs_moduleinterface.h b/src/kvirc/kvs/kvi_kvs_moduleinterface.h
index 0b47154..83f08ce 100644
--- a/src/kvirc/kvs/kvi_kvs_moduleinterface.h
+++ b/src/kvirc/kvs/kvi_kvs_moduleinterface.h
@@ -219,7 +219,7 @@ protected:
 	KVS_PARAMETERS_END \
 	if(!KviKvsParameterProcessor::process(pCall->params(),pCall->context(),parameter_format_list))return false;
 
-#define KVSM_RETQUIRE_CONNECTION(pCall) \
+#define KVSM_REQUIRE_CONNECTION(pCall) \
 	if(!pCall->window()->context())return c->context()->errorNoIrcContext(); \
 	if(!pCall->window()->connection())return c->context()->warningNoIrcConnection();
 
diff --git a/src/kvirc/kvs/kvi_kvs_object.cpp b/src/kvirc/kvs/kvi_kvs_object.cpp
index e5ff0a5..87f405f 100644
--- a/src/kvirc/kvs/kvi_kvs_object.cpp
+++ b/src/kvirc/kvs/kvi_kvs_object.cpp
@@ -85,7 +85,7 @@
 		by the programmer; the name is just a mnemonic expedient, and
 		you may also not need it.[br][br]
 
-		Each object is identified by an [b]OPAQUE UNITQUE ID[/b].
+		Each object is identified by an [b]OPAQUE UNIQUE ID[/b].
 		The ID is assigned by KVIrc and can be held in any variable.
 		You can think the object id as a "handle for the object" or the object's pointer.
 		Any action performed on the object will require its ID.[br][br]
diff --git a/src/kvirc/kvs/kvi_kvs_treenode_expression.cpp b/src/kvirc/kvs/kvi_kvs_treenode_expression.cpp
index 61a4151..67edb21 100644
--- a/src/kvirc/kvs/kvi_kvs_treenode_expression.cpp
+++ b/src/kvirc/kvs/kvi_kvs_treenode_expression.cpp
@@ -726,7 +726,7 @@ bool KviKvsTreeNodeExpressionBinaryOperatorGreaterThan::evaluateReadOnly(KviKvsR
 	return true;
 }
 
-PREIMPLEMENT_BINARY_OPERATOR(KviKvsTreeNodeExpressionBinaryOperatorLowerOrEqualTo,"ExpressionBinaryOperatorLowerOrEqualTo","Expression Binary Operator \"<=\"",PREC_OP_LOWERORETQUALTO)
+PREIMPLEMENT_BINARY_OPERATOR(KviKvsTreeNodeExpressionBinaryOperatorLowerOrEqualTo,"ExpressionBinaryOperatorLowerOrEqualTo","Expression Binary Operator \"<=\"",PREC_OP_LOWEROREQUALTO)
 
 bool KviKvsTreeNodeExpressionBinaryOperatorLowerOrEqualTo::evaluateReadOnly(KviKvsRunTimeContext * c,KviKvsVariant * pBuffer)
 {
@@ -738,7 +738,7 @@ bool KviKvsTreeNodeExpressionBinaryOperatorLowerOrEqualTo::evaluateReadOnly(KviK
 	return true;
 }
 
-PREIMPLEMENT_BINARY_OPERATOR(KviKvsTreeNodeExpressionBinaryOperatorGreaterOrEqualTo,"ExpressionBinaryOperatorGreaterOrEqualTo","Expression Binary Operator \">=\"",PREC_OP_GREATERORETQUALTO)
+PREIMPLEMENT_BINARY_OPERATOR(KviKvsTreeNodeExpressionBinaryOperatorGreaterOrEqualTo,"ExpressionBinaryOperatorGreaterOrEqualTo","Expression Binary Operator \">=\"",PREC_OP_GREATEROREQUALTO)
 
 bool KviKvsTreeNodeExpressionBinaryOperatorGreaterOrEqualTo::evaluateReadOnly(KviKvsRunTimeContext * c,KviKvsVariant * pBuffer)
 {
@@ -763,7 +763,7 @@ bool KviKvsTreeNodeExpressionBinaryOperatorEqualTo::evaluateReadOnly(KviKvsRunTi
 }
 
 
-PREIMPLEMENT_BINARY_OPERATOR(KviKvsTreeNodeExpressionBinaryOperatorNotEqualTo,"ExpressionBinaryOperatorNotEqualTo","Expression Binary Operator \"!=\"",PREC_OP_NOTETQUALTO)
+PREIMPLEMENT_BINARY_OPERATOR(KviKvsTreeNodeExpressionBinaryOperatorNotEqualTo,"ExpressionBinaryOperatorNotEqualTo","Expression Binary Operator \"!=\"",PREC_OP_NOTEQUALTO)
 
 bool KviKvsTreeNodeExpressionBinaryOperatorNotEqualTo::evaluateReadOnly(KviKvsRunTimeContext * c,KviKvsVariant * pBuffer)
 {
diff --git a/src/kvirc/kvs/kvi_kvs_treenode_expression.h b/src/kvirc/kvs/kvi_kvs_treenode_expression.h
index 6688f5b..d4fb355 100644
--- a/src/kvirc/kvs/kvi_kvs_treenode_expression.h
+++ b/src/kvirc/kvs/kvi_kvs_treenode_expression.h
@@ -56,10 +56,10 @@
 
 #define PREC_OP_EQUALTO 12              /* == */ /* Case sensitive comparison for strings or normal comp.fr numbers */
 
-#define PREC_OP_GREATERORETQUALTO 14     /* >= */ /* Case sensitive (normal for numbers) */
-#define PREC_OP_LOWERORETQUALTO 14       /* <= */ /* Case sensitive (normal for numbers) */
+#define PREC_OP_GREATEROREQUALTO 14     /* >= */ /* Case sensitive (normal for numbers) */
+#define PREC_OP_LOWEROREQUALTO 14       /* <= */ /* Case sensitive (normal for numbers) */
 
-#define PREC_OP_NOTETQUALTO 15           /* != */ /* Case sensitive (normal for numbers) */
+#define PREC_OP_NOTEQUALTO 15           /* != */ /* Case sensitive (normal for numbers) */
 
 #define PREC_OP_AND 16                  /* && */
 #define PREC_OP_OR 17                   /* || */
diff --git a/src/kvirc/sparser/kvi_antispam.cpp b/src/kvirc/sparser/kvi_antispam.cpp
index 9aafcfb..2dcfe33 100644
--- a/src/kvirc/sparser/kvi_antispam.cpp
+++ b/src/kvirc/sparser/kvi_antispam.cpp
@@ -56,7 +56,7 @@
 // Ideas:
 // - A spam message is generally a single PRIVMSG <mynick> :<text>
 //		so this function should be (and is) called when
-//		a PRIVMSG is received from a person that has no TQUERY
+//		a PRIVMSG is received from a person that has no QUERY
 //		window open yet.
 // - 95% of spam messages contain an URL inside (http,ftp,www) or a channel name.
 // - The other 5% contain words like auto-msg , msg me or query <nickname>
diff --git a/src/kvirc/sparser/kvi_numeric.h b/src/kvirc/sparser/kvi_numeric.h
index 0e05775..32e388d 100644
--- a/src/kvirc/sparser/kvi_numeric.h
+++ b/src/kvirc/sparser/kvi_numeric.h
@@ -280,7 +280,7 @@
 #define ERR_WILDTOPLEVEL     414 /* "%s :Wildcard in toplevel Domain" [I,E,U,D] */
 #define ERR_BADMASK          415 /* ??? [I] */
 //#define ERR_TOOMANYTARGETS 416 /* Can not understand this ... but I've found it in some docs [I] */
-#define ERR_TQUERYTOOLONG     416 /* "<target> <erroneous command> :Too many lines in the output, please restrict your query [U] */
+#define ERR_QUERYTOOLONG     416 /* "<target> <erroneous command> :Too many lines in the output, please restrict your query [U] */
 //      ERR_??????????   417-420
 #define ERR_UNKNOWNCOMMAND   421 /* "%s :Unknown command"                                [I,E,U,D] # */
 #define ERR_NOMOTD           422 /* ":MOTD File is missing" [I,E,U,D] */
diff --git a/src/kvirc/sparser/kvi_sp_ctcp.cpp b/src/kvirc/sparser/kvi_sp_ctcp.cpp
index df42662..93b1b2c 100644
--- a/src/kvirc/sparser/kvi_sp_ctcp.cpp
+++ b/src/kvirc/sparser/kvi_sp_ctcp.cpp
@@ -24,7 +24,7 @@
 
 #define __KVIRC__
 // FIXME: #warning "CTCP BEEP == WAKEUP == AWAKE"
-// FIXME: #warning "CTCP AVATARREQ or TQUERYAVATAR"
+// FIXME: #warning "CTCP AVATARREQ or QUERYAVATAR"
 
 #include "kvi_mirccntrl.h"
 #include "kvi_osinfo.h"
diff --git a/src/kvirc/sparser/kvi_sp_literal.cpp b/src/kvirc/sparser/kvi_sp_literal.cpp
index d488c8f..43efeb4 100644
--- a/src/kvirc/sparser/kvi_sp_literal.cpp
+++ b/src/kvirc/sparser/kvi_sp_literal.cpp
@@ -262,7 +262,7 @@ void KviServerParser::parseLiteralJoin(KviIrcMessage *msg)
 			}
 		}
 
-		// MODE %s b MUST BE THE LAST AUTOMATIC CHANNEL TQUERY
+		// MODE %s b MUST BE THE LAST AUTOMATIC CHANNEL QUERY
 		// so we get RPL_ENDOFBANLIST as the last reply
 		// and we know that the channel is in sync
 
@@ -326,7 +326,7 @@ void KviServerParser::parseLiteralJoin(KviIrcMessage *msg)
 	{
 		if(KVI_OPTION_BOOL(KviOption_boolEnableQueryTracing))
 		{
-			q->output(KVI_OUT_TQUERYTRACE,
+			q->output(KVI_OUT_QUERYTRACE,
 				__tr2qs("\r!n\r%Q\r [%Q@\r!h\r%Q\r] has just joined \r!c\r%Q\r"),&szNick,&szUser,
 				&szHost,&channel);
 			q->notifyCommonChannels(szNick,szUser,szHost,iChans,szChans);
@@ -422,11 +422,11 @@ void KviServerParser::parseLiteralPart(KviIrcMessage *msg)
 			if(q)
 			{
 				if(!partMsg.isEmpty())
-					q->output(KVI_OUT_TQUERYTRACE,
+					q->output(KVI_OUT_QUERYTRACE,
 						__tr2qs("\r!nc\r%Q\r [%Q@\r!h\r%Q\r] has just left \r!c\r%Q\r: %Q"),
 						&szNick,&szUser,&szHost,&szChan,&partMsg);
 				else
-					q->output(KVI_OUT_TQUERYTRACE,
+					q->output(KVI_OUT_QUERYTRACE,
 						__tr2qs("\r!nc\r%Q\r [%Q@\r!h\r%Q\r] has just left \r!c\r%Q\r"),
 						&szNick,&szUser,&szHost,&szChan);
 				q->notifyCommonChannels(szNick,szUser,szHost,iChans,szChans);
@@ -437,14 +437,14 @@ void KviServerParser::parseLiteralPart(KviIrcMessage *msg)
 
 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //
-// TQUIT
+// QUIT
 //
 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
 void KviServerParser::parseLiteralQuit(KviIrcMessage *msg)
 {
-	// TQUIT
-	// :<source_mask> TQUIT :<quit message>
+	// QUIT
+	// :<source_mask> QUIT :<quit message>
 	TQString szNick,szUser,szHost;
 	msg->decodeAndSplitPrefix(szNick,szUser,szHost);
 
@@ -548,7 +548,7 @@ void KviServerParser::parseLiteralQuit(KviIrcMessage *msg)
 					quitMsg.prepend("NETSPLIT ");
 				}
 
-				if(!msg->haltOutput())c->output(KVI_OUT_TQUIT,
+				if(!msg->haltOutput())c->output(KVI_OUT_QUIT,
 						__tr2qs("\r!n\r%Q\r [%Q@\r!h\r%Q\r] has quit IRC: %Q"),
 						&szNick,&szUser,&szHost,&quitMsg);
 			}
@@ -565,7 +565,7 @@ void KviServerParser::parseLiteralQuit(KviIrcMessage *msg)
 			{
 				quitMsg.prepend("NETSPLIT ");
 			}
-			q->output(KVI_OUT_TQUIT,__tr2qs("\r!n\r%Q\r [%Q@\r!h\r%Q\r] has quit IRC: %Q"),
+			q->output(KVI_OUT_QUIT,__tr2qs("\r!n\r%Q\r [%Q@\r!h\r%Q\r] has quit IRC: %Q"),
 					&szNick,&szUser,&szHost,&quitMsg);
 		}
 	}
@@ -684,7 +684,7 @@ void KviServerParser::parseLiteralKick(KviIrcMessage *msg)
 			{
 				TQString szChans;
 				int iChans = console->connection()->getCommonChannels(victim,szChans);
-				q->output(KVI_OUT_TQUERYTRACE,
+				q->output(KVI_OUT_QUERYTRACE,
 					__tr2qs("\r!n\r%Q\r [%Q@\r!h\r%Q\r] has just been kicked from \r!c\r%Q\r by \r!n\r%Q\r [%Q@\r!h\r%Q\r]: %Q"),
 					&victim,&szVUser,&szVHost,&szChan,
 					&szNick,&szUser,&szHost,&szKickMsg);
@@ -886,7 +886,7 @@ void KviServerParser::parseLiteralPrivmsg(KviIrcMessage *msg)
 			query->userAction(szNick,szUser,szHost,KVI_USERACTION_PRIVMSG);
 			// decrypt the message if needed
 			KviStr szBuffer; const char * txtptr; int msgtype;
-			DECRYPT_IF_NEEDED(query,msg->safeTrailing(),KVI_OUT_TQUERYPRIVMSG,KVI_OUT_TQUERYPRIVMSGCRYPTED,szBuffer,txtptr,msgtype)
+			DECRYPT_IF_NEEDED(query,msg->safeTrailing(),KVI_OUT_QUERYPRIVMSG,KVI_OUT_QUERYPRIVMSGCRYPTED,szBuffer,txtptr,msgtype)
 			// trigger the script event and eventually kill the output
 			TQString szMsgText = query->decodeText(txtptr);
 			if(KVS_TRIGGER_EVENT_4_HALTED(KviEvent_OnQueryMessage,query,szNick,szUser,szHost,szMsgText)) 
@@ -922,7 +922,7 @@ void KviServerParser::parseLiteralPrivmsg(KviIrcMessage *msg)
 							TQString szMsg = TQStyleSheet::escape(szMsgText);
 						#endif
 						//debug("kvi_sp_literal.cpp:908 debug: %s",szMsg.data());
-						g_pApp->notifierMessage(query,KVI_SMALLICON_TQUERYPRIVMSG,szMsg,1800);
+						g_pApp->notifierMessage(query,KVI_SMALLICON_QUERYPRIVMSG,szMsg,1800);
 					}
 				}
 				console->outputPrivmsg(query,msgtype,szNick,szUser,szHost,szMsgText,iFlags);
@@ -963,7 +963,7 @@ void KviServerParser::parseLiteralPrivmsg(KviIrcMessage *msg)
 					}
 				}
 
-				pOut->output(KVI_OUT_TQUERYPRIVMSG,"[PRIVMSG \r!nc\r%Q\r]: %Q",&szNick,&szMsgText);
+				pOut->output(KVI_OUT_QUERYPRIVMSG,"[PRIVMSG \r!nc\r%Q\r]: %Q",&szNick,&szMsgText);
 			}
 		}
 	} else {
@@ -1252,7 +1252,7 @@ void KviServerParser::parseLiteralNotice(KviIrcMessage *msg)
 			query->userAction(szNick,szUser,szHost,KVI_USERACTION_NOTICE);
 			// decrypt it if needed
 			KviStr szBuffer; const char * txtptr; int msgtype;
-			DECRYPT_IF_NEEDED(query,msg->safeTrailing(),KVI_OUT_TQUERYNOTICE,KVI_OUT_TQUERYNOTICECRYPTED,szBuffer,txtptr,msgtype)
+			DECRYPT_IF_NEEDED(query,msg->safeTrailing(),KVI_OUT_QUERYNOTICE,KVI_OUT_QUERYNOTICECRYPTED,szBuffer,txtptr,msgtype)
 			TQString szMsgText = query->decodeText(txtptr);
 			// trigger the script event and eventually kill the output
 			if(KVS_TRIGGER_EVENT_4_HALTED(KviEvent_OnQueryNotice,query,szNick,szUser,szHost,szMsgText)) 
@@ -1280,7 +1280,7 @@ void KviServerParser::parseLiteralNotice(KviIrcMessage *msg)
 							TQString szMsg = TQStyleSheet::escape(szMsgText);
 						#endif
 						//debug("kvi_sp_literal.cpp:908 debug: %s",szMsg.data());
-						g_pApp->notifierMessage(query,KVI_SMALLICON_TQUERYNOTICE,szMsg,1800);
+						g_pApp->notifierMessage(query,KVI_SMALLICON_QUERYNOTICE,szMsg,1800);
 					}
 				}
 
@@ -1313,7 +1313,7 @@ void KviServerParser::parseLiteralNotice(KviIrcMessage *msg)
 					}
 				}
 
-				pOut->output(KVI_OUT_TQUERYNOTICE,"*\r!n\r%Q\r* %Q",&szNick,&szMsgText);
+				pOut->output(KVI_OUT_QUERYNOTICE,"*\r!n\r%Q\r* %Q",&szNick,&szMsgText);
 			}
 		}
 		return;
@@ -1465,15 +1465,15 @@ void KviServerParser::parseLiteralNick(KviIrcMessage *msg)
 	}
 	KviQuery * q = console->connection()->findQuery(szNick);
 	// It CAN happen that szNewNick first queries us without being
-	// on any channel then he TQUITS , he reconnects , he joins
+	// on any channel then he QUITS , he reconnects , he joins
 	// a channel with szNick , queries us and changes nick to szNewNick : gotcha!
 	// should merge the queries!
 	KviQuery * old = console->connection()->findQuery(szNewNick);
 	if(old && (old != q))
 	{
-		if(KVI_OPTION_BOOL(KviOption_boolEnableQueryTracing) && (!_OUTPUT_TQUIET))
+		if(KVI_OPTION_BOOL(KviOption_boolEnableQueryTracing) && (!_OUTPUT_QUIET))
 		{
-		old->output(KVI_OUT_TQUERYTRACE,
+		old->output(KVI_OUT_QUERYTRACE,
 			__tr2qs("The target of this query was lost and has been found when \r!n\r%Q\r [%Q@\r!h\r%Q\r] changed his nickname to \r!n\r%Q\r"),
 			&szNick,&szUser,&szHost,&szNewNick);
 		}
diff --git a/src/kvirc/sparser/kvi_sp_numeric.cpp b/src/kvirc/sparser/kvi_sp_numeric.cpp
index efa5220..f3429d6 100644
--- a/src/kvirc/sparser/kvi_sp_numeric.cpp
+++ b/src/kvirc/sparser/kvi_sp_numeric.cpp
@@ -141,7 +141,7 @@ void KviServerParser::parseNumeric004(KviIrcMessage *msg)
 		(chanmodes.occurences('t') != 1) || (chanmodes.occurences('n') != 1) ||
 		(chanmodes.contains('.')) || (chanmodes.contains('-')) || (chanmodes.contains('(')))
 	{
-		if(!_OUTPUT_TQUIET)
+		if(!_OUTPUT_QUIET)
 		{
 			msg->console()->output(KVI_OUT_SYSTEMWARNING,__tr2qs(
 				"One or more standard mode flags are missing in the server available modes.\n" \
diff --git a/src/kvirc/ui/kvi_console.cpp b/src/kvirc/ui/kvi_console.cpp
index e9e560b..6769d00 100644
--- a/src/kvirc/ui/kvi_console.cpp
+++ b/src/kvirc/ui/kvi_console.cpp
@@ -200,7 +200,7 @@ bool KviConsole::connectionInProgress()
 
 KviConsole::~KviConsole()
 {
-	// FIXME: #warning "WARNING : THIS SHOULD BECOME A COMMAND /TQUIT $option() so the idents are parsed!"
+	// FIXME: #warning "WARNING : THIS SHOULD BECOME A COMMAND /QUIT $option() so the idents are parsed!"
 
 	// Force connection close: it will just return if no connection is present
 	context()->terminateConnectionRequest(true);
@@ -267,7 +267,7 @@ void KviConsole::fillContextPopup(KviTalPopupMenu * p)
 		p->insertSeparator();
 		id = p->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_CHANNEL)),__tr2qs("Part All Channels"),connection(),TQT_SLOT(partAllChannels()));
 		if(!cc)p->setItemEnabled(id,false);
-		id = p->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUERY)),__tr2qs("Close All Queries"),connection(),TQT_SLOT(closeAllQueries()));
+		id = p->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUERY)),__tr2qs("Close All Queries"),connection(),TQT_SLOT(closeAllQueries()));
 		if(!qc)p->setItemEnabled(id,false);
 	}
 
@@ -728,7 +728,7 @@ void KviConsole::outputPrivmsg(KviWindow *wnd,
 
 	bool bIsChan = (wnd->type() == KVI_WINDOW_TYPE_CHANNEL);
 	bool bIsNotice = ((type == KVI_OUT_CHANNELNOTICE)||(type == KVI_OUT_CHANNELNOTICECRYPTED) \
-		   ||(type == KVI_OUT_TQUERYNOTICE)||(type == KVI_OUT_TQUERYNOTICECRYPTED));
+		   ||(type == KVI_OUT_QUERYNOTICE)||(type == KVI_OUT_QUERYNOTICECRYPTED));
 
 	TQString nick = daNick; // not that beautiful.. :/
 	TQString user = daUser;
@@ -882,7 +882,7 @@ void KviConsole::avatarChangedUpdateWindows(const TQString &nick,const TQString
 	if(!connection())return; //ops...
 
 	// in quiet mode avoid bugging the user about avatar changes
-	bool bOut = ((!textLine.isEmpty()) && (!(_OUTPUT_TQUIET)));
+	bool bOut = ((!textLine.isEmpty()) && (!(_OUTPUT_QUIET)));
 
 	for(KviChannel * c = connection()->channelList()->first();c;c = connection()->channelList()->next())
 	{
diff --git a/src/kvirc/ui/kvi_input.cpp b/src/kvirc/ui/kvi_input.cpp
index 94afb59..1d5f12b 100644
--- a/src/kvirc/ui/kvi_input.cpp
+++ b/src/kvirc/ui/kvi_input.cpp
@@ -845,12 +845,12 @@ void KviInputEditor::mousePressEvent(TQMouseEvent *e)
 		id = g_pInputPopup->insertItem(__tr2qs("&Paste") + ACCEL_KEY(V),this,TQT_SLOT(pasteClipboardWithConfirmation()));
 		g_pInputPopup->setItemEnabled(id,!szClip.isEmpty() && !m_bReadOnly);
 		id = g_pInputPopup->insertItem(__tr2qs("Paste (Slowly)"),this,TQT_SLOT(pasteSlow()));
-		if ((type == KVI_WINDOW_TYPE_CHANNEL) || (type == KVI_WINDOW_TYPE_TQUERY) || (type == KVI_WINDOW_TYPE_DCCCHAT))
+		if ((type == KVI_WINDOW_TYPE_CHANNEL) || (type == KVI_WINDOW_TYPE_QUERY) || (type == KVI_WINDOW_TYPE_DCCCHAT))
 			g_pInputPopup->setItemEnabled(id,!szClip.isEmpty() && !m_bReadOnly);
 		else 
 			g_pInputPopup->setItemEnabled(id,false);
 		id = g_pInputPopup->insertItem(__tr2qs("Paste &File") + ACCEL_KEY(F),this,TQT_SLOT(pasteFile()));
-		if ((type != KVI_WINDOW_TYPE_CHANNEL) && (type != KVI_WINDOW_TYPE_TQUERY) && (type != KVI_WINDOW_TYPE_DCCCHAT))
+		if ((type != KVI_WINDOW_TYPE_CHANNEL) && (type != KVI_WINDOW_TYPE_QUERY) && (type != KVI_WINDOW_TYPE_DCCCHAT))
 			g_pInputPopup->setItemEnabled(id,false);
 		else
 			g_pInputPopup->setItemEnabled(id,!m_bReadOnly);
@@ -2353,7 +2353,7 @@ KviInput::KviInput(KviWindow *par,KviUserListView * view)
 	}
 	else
 	{
-		is1.setPixmap(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUITSPLIT)),TQIconSet::Small);
+		is1.setPixmap(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUITSPLIT)),TQIconSet::Small);
 		m_pHistoryButton->setIconSet(is1);
 		KviTalToolTip::add(m_pHistoryButton,__tr2qs("Input History Disabled"));
 	}
@@ -2639,7 +2639,7 @@ void KviInput::applyOptions()
 	if(KVI_OPTION_BOOL(KviOption_boolDisableInputHistory))//G&N mar 2005
 	{
 		TQIconSet is1;
-		is1.setPixmap(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUITSPLIT)),TQIconSet::Small);
+		is1.setPixmap(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUITSPLIT)),TQIconSet::Small);
 		m_pHistoryButton->setIconSet(is1);
 		KviTalToolTip::add(m_pHistoryButton,__tr2qs("Input History Disabled"));
 		m_pHistoryButton->disconnect(TQT_SIGNAL(clicked()));
diff --git a/src/kvirc/ui/kvi_ircview.cpp b/src/kvirc/ui/kvi_ircview.cpp
index 1ddf275..ec65b9c 100644
--- a/src/kvirc/ui/kvi_ircview.cpp
+++ b/src/kvirc/ui/kvi_ircview.cpp
@@ -2285,7 +2285,7 @@ found_command_escape:
 									}
 								}
 							}
-							else if(m_pKviWindow->type()==KVI_WINDOW_TYPE_TQUERY && m_pKviWindow && line_ptr->pChunks[iCurChunk].szPayload[1]=='c')
+							else if(m_pKviWindow->type()==KVI_WINDOW_TYPE_QUERY && m_pKviWindow && line_ptr->pChunks[iCurChunk].szPayload[1]=='c')
 							{
 								TQString m_szNick = TQString((TQChar*)next_cr,term_cr-next_cr);
 								if(m_szNick==m_pKviWindow->connection()->currentNickName()) {
@@ -2586,10 +2586,10 @@ check_emoticon_char:
 		case KVI_OUT_CHANPRIVMSG:
 		case KVI_OUT_ACTION:
 		case KVI_OUT_OWNPRIVMSG:
-		case KVI_OUT_TQUERYPRIVMSG:
-		case KVI_OUT_TQUERYPRIVMSGCRYPTED:
-		case KVI_OUT_TQUERYNOTICE:
-		case KVI_OUT_TQUERYNOTICECRYPTED:
+		case KVI_OUT_QUERYPRIVMSG:
+		case KVI_OUT_QUERYPRIVMSGCRYPTED:
+		case KVI_OUT_QUERYNOTICE:
+		case KVI_OUT_QUERYNOTICECRYPTED:
 		case KVI_OUT_CHANPRIVMSGCRYPTED:
 		case KVI_OUT_CHANNELNOTICE:
 		case KVI_OUT_CHANNELNOTICECRYPTED:
@@ -4492,7 +4492,7 @@ void KviIrcView::mouseDoubleClickEvent(TQMouseEvent *e)
 						KVS_TRIGGER_EVENT(KviEvent_OnChannelNickDefaultActionRequest,m_pKviWindow,pParams);
 					} else bTrigger = true;
 				break;
-				case KVI_WINDOW_TYPE_TQUERY:
+				case KVI_WINDOW_TYPE_QUERY:
 					if(KviTQString::equalCI(((KviQuery *)m_pKviWindow)->windowName(),linkText))
 					{
 						KVS_TRIGGER_EVENT(KviEvent_OnQueryNickDefaultActionRequest,m_pKviWindow,pParams);
@@ -4695,7 +4695,7 @@ void KviIrcView::mouseRealPressEvent(TQMouseEvent *e)
 									}
 								} else bTrigger = true;
 							break;
-							case KVI_WINDOW_TYPE_TQUERY:
+							case KVI_WINDOW_TYPE_QUERY:
 								if(KviTQString::equalCI(((KviQuery *)m_pKviWindow)->windowName(),linkText))
 								{
 									if(e->button() & Qt::RightButton)
diff --git a/src/kvirc/ui/kvi_menubar.cpp b/src/kvirc/ui/kvi_menubar.cpp
index 74bbbe7..d2104dd 100644
--- a/src/kvirc/ui/kvi_menubar.cpp
+++ b/src/kvirc/ui/kvi_menubar.cpp
@@ -222,8 +222,8 @@ void KviMenuBar::setupMainPopup()
 	if(m_pFrm->activeContext())
 		if(m_pFrm->activeContext()->state()==KviIrcContext::Connected)
 		{
-			int id = main->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUIT)),__tr2qs("Disconnect"),m_pFrm,TQT_SLOT(executeInternalCommand(int)));
-			main->setItemParameter(id,KVI_INTERNALCOMMAND_TQUIT);
+			int id = main->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUIT)),__tr2qs("Disconnect"),m_pFrm,TQT_SLOT(executeInternalCommand(int)));
+			main->setItemParameter(id,KVI_INTERNALCOMMAND_QUIT);
 		}
 	main->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_WORLD)),__tr2qs("New &Connection To"),m_pRecentServersPopup);
 
@@ -242,7 +242,7 @@ void KviMenuBar::setupMainPopup()
 #ifndef Q_OS_MACX
 	main->insertSeparator();
 
-	main->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUITAPP)),__tr2qs("&Quit"),g_pApp,TQT_SLOT(quit()));
+	main->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUITAPP)),__tr2qs("&Quit"),g_pApp,TQT_SLOT(quit()));
 #endif //Q_OS_MACX
 }
 
diff --git a/src/kvirc/ui/kvi_query.cpp b/src/kvirc/ui/kvi_query.cpp
index 0d133bd..2c1e1b8 100644
--- a/src/kvirc/ui/kvi_query.cpp
+++ b/src/kvirc/ui/kvi_query.cpp
@@ -63,7 +63,7 @@
 #include "kvi_valuelist.h"
 
 KviQuery::KviQuery(KviFrame * lpFrm,KviConsole * lpConsole,const TQString &nick)
-: KviWindow(KVI_WINDOW_TYPE_TQUERY,lpFrm,nick,lpConsole)
+: KviWindow(KVI_WINDOW_TYPE_QUERY,lpFrm,nick,lpConsole)
 {
 
 	m_iFlags = 0;
@@ -118,7 +118,7 @@ KviQuery::KviQuery(KviFrame * lpFrm,KviConsole * lpConsole,const TQString &nick)
 KviQuery::~KviQuery()
 {
 	m_pUserListView->partAll();
-	if(type() == KVI_WINDOW_TYPE_DEADTQUERY)
+	if(type() == KVI_WINDOW_TYPE_DEADQUERY)
 		context()->unregisterDeadQuery(this);
 	else
 		connection()->unregisterQuery(this);
@@ -316,7 +316,7 @@ void KviQuery::notifyTargetChange(const TQString &oldNick,const TQString &oldUse
 	TQString oldN = oldNick.isEmpty() ? TQString("*") : oldNick;
 	TQString oldU = oldUser.isEmpty() ? TQString("*") : oldUser;
 	TQString oldH = oldHost.isEmpty() ? TQString("*") : oldHost;
-	output(KVI_OUT_TQUERYTRACE,
+	output(KVI_OUT_QUERYTRACE,
 		__tr2qs("The target of this query has changed from \r!n\r%Q\r [%Q@\r!h\r%Q\r] to \r!n\r%Q\r [%Q@\r!h\r%Q\r]"),
 		&oldN,&oldU,&oldH,&nick,&user,&host);
 	updateLabelText();
@@ -386,10 +386,10 @@ void KviQuery::notifyCommonChannels(const TQString &nick,const TQString &user,co
 	static TQString star("*");
 	if(iChans > 0)
 	{
-		output(KVI_OUT_TQUERYTRACE,__tr2qs("Common channels for \r!n\r%Q\r [%Q@\r!h\r%Q\r]: %Q"),
+		output(KVI_OUT_QUERYTRACE,__tr2qs("Common channels for \r!n\r%Q\r [%Q@\r!h\r%Q\r]: %Q"),
 			&nick,user.isEmpty() ? &star : &user,host.isEmpty() ? &star : &host,&szChans);
 	} else {
-		output(KVI_OUT_TQUERYTRACE,__tr2qs("No common channels for \r!n\r%Q\r [%Q@\r!h\r%Q\r]"),
+		output(KVI_OUT_QUERYTRACE,__tr2qs("No common channels for \r!n\r%Q\r [%Q@\r!h\r%Q\r]"),
 			&nick,user.isEmpty() ? &star : &user,host.isEmpty() ? &star : &host);
 	}
 	updateLabelText();
@@ -514,7 +514,7 @@ void KviQuery::toggleListView()
 
 void KviQuery::setDeadQuery()
 {
-	m_iFlags |= KVI_TQUERY_FLAG_DEAD;
+	m_iFlags |= KVI_QUERY_FLAG_DEAD;
 
 	m_pUserListView->enableUpdates(false);
 	m_pUserListView->partAll();
@@ -522,7 +522,7 @@ void KviQuery::setDeadQuery()
 	m_pUserListView->setUserDataBase(0);
 	connection()->unregisterQuery(this);
 	context()->registerDeadQuery(this);
-	setType(KVI_WINDOW_TYPE_DEADTQUERY);
+	setType(KVI_WINDOW_TYPE_DEADQUERY);
 
 	updateIcon();
 	updateCaption();
@@ -531,9 +531,9 @@ void KviQuery::setDeadQuery()
 
 void KviQuery::setAliveQuery()
 {
-	m_iFlags &= ~KVI_TQUERY_FLAG_DEAD;
+	m_iFlags &= ~KVI_QUERY_FLAG_DEAD;
 	m_pUserListView->setUserDataBase(connection()->userDataBase());
-	setType(KVI_WINDOW_TYPE_TQUERY);
+	setType(KVI_WINDOW_TYPE_QUERY);
 	context()->unregisterDeadQuery(this);
 	connection()->registerQuery(this);
 	// Update log file name
@@ -553,7 +553,7 @@ void KviQuery::applyOptions()
 
 TQPixmap * KviQuery::myIconPtr()
 {
-	return g_pIconManager->getSmallIcon(isDeadQuery() ? KVI_SMALLICON_DEADTQUERY : KVI_SMALLICON_TQUERY);
+	return g_pIconManager->getSmallIcon(isDeadQuery() ? KVI_SMALLICON_DEADQUERY : KVI_SMALLICON_QUERY);
 }
 
 void KviQuery::resizeEvent(TQResizeEvent *e)
diff --git a/src/kvirc/ui/kvi_query.h b/src/kvirc/ui/kvi_query.h
index 0caa698..275ab65 100644
--- a/src/kvirc/ui/kvi_query.h
+++ b/src/kvirc/ui/kvi_query.h
@@ -1,5 +1,5 @@
-#ifndef _KVI_TQUERY_H_
-#define _KVI_TQUERY_H_
+#ifndef _KVI_QUERY_H_
+#define _KVI_QUERY_H_
 //=============================================================================
 //
 //   File : kvi_query.h
@@ -39,7 +39,7 @@ class KviConfig;
 class TQSplitter;
 class KviWindowToolPageButton;
 
-#define KVI_TQUERY_FLAG_DEAD 1
+#define KVI_QUERY_FLAG_DEAD 1
 
 class KVIRC_API KviQuery : public KviWindow
 {
@@ -65,7 +65,7 @@ protected:
 public:
 	void setDeadQuery();
 	void setAliveQuery();
-	bool isDeadQuery(){ return m_iFlags & KVI_TQUERY_FLAG_DEAD; };
+	bool isDeadQuery(){ return m_iFlags & KVI_QUERY_FLAG_DEAD; };
 	virtual TQSize sizeHint() const;
 	virtual const TQString & target(){ return windowName(); };
 	virtual void applyOptions();
diff --git a/src/kvirc/ui/kvi_statusbarapplet.h b/src/kvirc/ui/kvi_statusbarapplet.h
index f29351f..f8f26c4 100644
--- a/src/kvirc/ui/kvi_statusbarapplet.h
+++ b/src/kvirc/ui/kvi_statusbarapplet.h
@@ -54,7 +54,7 @@ class KVIRC_API KviStatusBarAppletDescriptor : public KviHeapObject
 	friend class KviStatusBarApplet;
 protected:
 	TQString                          m_szVisibleName;       // visible name of the applet
-	TQString                          m_szInternalName;      // UNITQUE name of the applet
+	TQString                          m_szInternalName;      // UNIQUE name of the applet
 	TQString                          m_szPreloadModule;     // name of the module that must be preloaded for this applet
 	CreateAppletCallback             m_pProc;               // creation callback
 	TQPixmap                        * m_pIcon;
diff --git a/src/kvirc/ui/kvi_taskbar.cpp b/src/kvirc/ui/kvi_taskbar.cpp
index 171e411..f4e8b4e 100644
--- a/src/kvirc/ui/kvi_taskbar.cpp
+++ b/src/kvirc/ui/kvi_taskbar.cpp
@@ -371,8 +371,8 @@ void KviTaskBarButton::drawButtonLabel(TQPainter * painter)
 		case KVI_WINDOW_TYPE_DEADCHANNEL:
 			szText = ((KviChannel *)m_pWindow)->nameWithUserFlag();
 		break;
-		case KVI_WINDOW_TYPE_TQUERY:
-		case KVI_WINDOW_TYPE_DEADTQUERY:
+		case KVI_WINDOW_TYPE_QUERY:
+		case KVI_WINDOW_TYPE_DEADQUERY:
 			szText = m_pWindow->windowName();
 		break;
 		default:
@@ -985,8 +985,8 @@ void KviTreeTaskBarItem::paintCell(TQPainter *painter,const TQColorGroup &cg,int
 				cRect.setLeft(cRect.left() + 17);
 			}
 		break;
-		case KVI_WINDOW_TYPE_TQUERY:
-		case KVI_WINDOW_TYPE_DEADTQUERY:
+		case KVI_WINDOW_TYPE_QUERY:
+		case KVI_WINDOW_TYPE_DEADQUERY:
 			szText = m_pWindow->windowName();
 			if(KVI_OPTION_BOOL(KviOption_boolUseTaskBarIcons))
 			{
diff --git a/src/kvirc/ui/kvi_userlistview.cpp b/src/kvirc/ui/kvi_userlistview.cpp
index a66156c..7aa3944 100644
--- a/src/kvirc/ui/kvi_userlistview.cpp
+++ b/src/kvirc/ui/kvi_userlistview.cpp
@@ -230,7 +230,7 @@ void KviUserListView::emitRightClick()
 	switch(m_pKviWindow->type())
 	{
 		case KVI_WINDOW_TYPE_CHANNEL: ev = KviEvent_OnChannelNickPopupRequest;  break;
-		case KVI_WINDOW_TYPE_TQUERY:   ev = KviEvent_OnQueryNickPopupRequest;    break;
+		case KVI_WINDOW_TYPE_QUERY:   ev = KviEvent_OnQueryNickPopupRequest;    break;
 		case KVI_WINDOW_TYPE_CONSOLE: ev = KviEvent_OnNotifyListPopupRequest;   break;
 		default:                      ev = KviEvent_OnNickLinkPopupRequest;     break; // this should actually never happen
 	}
@@ -255,7 +255,7 @@ void KviUserListView::emitDoubleClick()
 	switch(m_pKviWindow->type())
 	{
 		case KVI_WINDOW_TYPE_CHANNEL: ev = KviEvent_OnChannelNickDefaultActionRequest;  break;
-		case KVI_WINDOW_TYPE_TQUERY:   ev = KviEvent_OnQueryNickDefaultActionRequest;    break;
+		case KVI_WINDOW_TYPE_QUERY:   ev = KviEvent_OnQueryNickDefaultActionRequest;    break;
 		case KVI_WINDOW_TYPE_CONSOLE: ev = KviEvent_OnNotifyListDefaultActionRequest;   break;
 		default:                      ev = KviEvent_OnNickLinkDefaultActionRequest;     break; // this should actually never happen
 	}
diff --git a/src/kvirc/ui/kvi_window.cpp b/src/kvirc/ui/kvi_window.cpp
index e5dd8e8..98a1923 100644
--- a/src/kvirc/ui/kvi_window.cpp
+++ b/src/kvirc/ui/kvi_window.cpp
@@ -1377,8 +1377,8 @@ void KviWindow::internalOutput(KviIrcView * pView,int msg_type,const kvi_wchar_t
 					(
 						KVI_OPTION_BOOL(KviOption_boolHighlightOnlyNormalMsgQueryToo) &&
 						(
-							(msg_type == KVI_OUT_TQUERYPRIVMSG) || (msg_type == KVI_OUT_TQUERYTRACE) ||
-							(msg_type == KVI_OUT_TQUERYPRIVMSGCRYPTED) || (msg_type == KVI_OUT_TQUERYNOTICE) || (msg_type == KVI_OUT_TQUERYNOTICECRYPTED)
+							(msg_type == KVI_OUT_QUERYPRIVMSG) || (msg_type == KVI_OUT_QUERYTRACE) ||
+							(msg_type == KVI_OUT_QUERYPRIVMSGCRYPTED) || (msg_type == KVI_OUT_QUERYNOTICE) || (msg_type == KVI_OUT_QUERYNOTICECRYPTED)
 						)
 					)
 					||
diff --git a/src/kvirc/ui/kvi_window.h b/src/kvirc/ui/kvi_window.h
index d5c2251..fb97692 100644
--- a/src/kvirc/ui/kvi_window.h
+++ b/src/kvirc/ui/kvi_window.h
@@ -77,7 +77,7 @@ class KviTalWidgetStack;
 
 #define KVI_WINDOW_TYPE_CONSOLE 0
 #define KVI_WINDOW_TYPE_CHANNEL 1
-#define KVI_WINDOW_TYPE_TQUERY 2
+#define KVI_WINDOW_TYPE_QUERY 2
 #define KVI_WINDOW_TYPE_HELP 3
 #define KVI_WINDOW_TYPE_TERM 4
 #define KVI_WINDOW_TYPE_EDITOR 5
@@ -94,7 +94,7 @@ class KviTalWidgetStack;
 #define KVI_WINDOW_TYPE_OFFER 16
 #define KVI_WINDOW_TYPE_LOGVIEW 17
 #define KVI_WINDOW_TYPE_DEADCHANNEL 18
-#define KVI_WINDOW_TYPE_DEADTQUERY 19
+#define KVI_WINDOW_TYPE_DEADQUERY 19
 #define KVI_WINDOW_TYPE_SCRIPTEDITOR 20
 #define KVI_WINDOW_TYPE_SCRIPTOBJECT 21
 #define KVI_WINDOW_TYPE_USERWINDOW 22
diff --git a/src/modules/addon/libkviaddon.cpp b/src/modules/addon/libkviaddon.cpp
index 9d3b0eb..41b8289 100644
--- a/src/modules/addon/libkviaddon.cpp
+++ b/src/modules/addon/libkviaddon.cpp
@@ -429,7 +429,7 @@ static bool addon_kvs_cmd_sethelpcallback(KviKvsModuleCallbackCommandCall * c)
 		we will adhere to that naming in certain parts of the documentation too.
 		[/p]
 		[p]
-		Each script-based addon (a set of scripts) is identified by an UNITQUE
+		Each script-based addon (a set of scripts) is identified by an UNIQUE
 		<id>. Two addons with the same <id> can't co-exist in the same
 		KVIrc installation (so be sure to choose a token characteristic enough
 		to avoid collisions with others). The <id> itself is used only for
diff --git a/src/modules/aliaseditor/aliaseditor.cpp b/src/modules/aliaseditor/aliaseditor.cpp
index d020105..ce95e2c 100644
--- a/src/modules/aliaseditor/aliaseditor.cpp
+++ b/src/modules/aliaseditor/aliaseditor.cpp
@@ -436,7 +436,7 @@ void KviAliasEditor::itemPressed(KviTalListViewItem *it,const TQPoint &pnt,int c
 	m_pContextPopup->insertSeparator();
 	
 	id = m_pContextPopup->insertItem(
-			*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUIT)),
+			*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUIT)),
 			__tr2qs("Remove Selected"),
 			this,TQT_SLOT(removeSelectedItems()));
 	m_pContextPopup->setItemEnabled(id,bHasSelected);
diff --git a/src/modules/avatar/libkviavatar.cpp b/src/modules/avatar/libkviavatar.cpp
index 8386942..0ed81a5 100644
--- a/src/modules/avatar/libkviavatar.cpp
+++ b/src/modules/avatar/libkviavatar.cpp
@@ -186,7 +186,7 @@ static bool avatar_kvs_cmd_set(KviKvsModuleCommandCall * c)
 		KVSM_PARAMETER("avatar",KVS_PT_NONEMPTYSTRING,KVS_PF_OPTIONAL,szAvatar)
 	KVSM_PARAMETERS_END(c)
 
-	KVSM_RETQUIRE_CONNECTION(c)
+	KVSM_REQUIRE_CONNECTION(c)
 
 	TQString absPath;
 
@@ -275,7 +275,7 @@ static bool avatar_kvs_cmd_set(KviKvsModuleCommandCall * c)
 
 static bool avatar_kvs_cmd_unset(KviKvsModuleCommandCall * c)
 {
-	KVSM_RETQUIRE_CONNECTION(c)
+	KVSM_REQUIRE_CONNECTION(c)
 
 	KviIrcUserEntry * e = c->window()->connection()->userDataBase()->find(c->window()->connection()->currentNickName());
 	if(!e)
@@ -340,7 +340,7 @@ static bool avatar_kvs_cmd_notify(KviKvsModuleCommandCall * c)
 		KVSM_PARAMETER("target",KVS_PT_NONEMPTYSTRING,0,szTarget)
 	KVSM_PARAMETERS_END(c)
 
-	KVSM_RETQUIRE_CONNECTION(c)
+	KVSM_REQUIRE_CONNECTION(c)
 
 	kvs_int_t iTimeout = (kvs_int_t)KVI_OPTION_UINT(KviOption_uintAvatarOfferTimeoutInSecs);
 	if(KviKvsVariant * pTimeout = c->switches()->find('t',"timeout"))
@@ -450,7 +450,7 @@ static bool avatar_kvs_fnc_name(KviKvsModuleFunctionCall * c)
 		KVSM_PARAMETER("nick",KVS_PT_STRING,KVS_PF_OPTIONAL,szNick)
 	KVSM_PARAMETERS_END(c)
 	
-	KVSM_RETQUIRE_CONNECTION(c)
+	KVSM_REQUIRE_CONNECTION(c)
 
 	if(szNick.isEmpty())szNick = c->window()->connection()->currentNickName();
 
@@ -494,7 +494,7 @@ static bool avatar_kvs_fnc_path(KviKvsModuleFunctionCall * c)
 		KVSM_PARAMETER("path",KVS_PT_STRING,KVS_PF_OPTIONAL,szNick)
 	KVSM_PARAMETERS_END(c)
 	
-	KVSM_RETQUIRE_CONNECTION(c)
+	KVSM_REQUIRE_CONNECTION(c)
 
 	if(szNick.isEmpty())szNick = c->window()->connection()->currentNickName();
 
@@ -536,7 +536,7 @@ static bool avatar_kvs_cmd_query(KviKvsModuleCommandCall * c)
 		KVSM_PARAMETER("target",KVS_PT_NONEMPTYSTRING,0,szName)
 	KVSM_PARAMETERS_END(c)
 
-	KVSM_RETQUIRE_CONNECTION(c)
+	KVSM_REQUIRE_CONNECTION(c)
 
 	KviTQCString target = c->window()->connection()->encodeText(szName);
 	c->window()->connection()->sendFmtData("PRIVMSG %s :%cAVATAR%c",target.data(),0x01,0x01);
diff --git a/src/modules/dcc/libkvidcc.cpp b/src/modules/dcc/libkvidcc.cpp
index 03f5d30..de818ce 100644
--- a/src/modules/dcc/libkvidcc.cpp
+++ b/src/modules/dcc/libkvidcc.cpp
@@ -878,7 +878,7 @@ static bool dcc_kvs_cmd_rsend(KviKvsModuleCommandCall * c)
 		KVSM_PARAMETER("filename",KVS_PT_NONEMPTYSTRING,KVS_PF_OPTIONAL,szFileName)
 	KVSM_PARAMETERS_END(c)
 
-	KVSM_RETQUIRE_CONNECTION(c)
+	KVSM_REQUIRE_CONNECTION(c)
 
 	KviDccDescriptor * d = new KviDccDescriptor(c->window()->console());
 	d->szNick            = szTarget;
@@ -943,7 +943,7 @@ static bool dcc_kvs_cmd_get(KviKvsModuleCommandCall * c)
 		KVSM_PARAMETER("size",KVS_PT_UINT,KVS_PF_OPTIONAL,uSize)
 	KVSM_PARAMETERS_END(c)
 
-	KVSM_RETQUIRE_CONNECTION(c)
+	KVSM_REQUIRE_CONNECTION(c)
 
 	KviTQString::cutToLast(szFileName,'/');
 
diff --git a/src/modules/dockwidget/libkvidockwidget_qt3.cpp b/src/modules/dockwidget/libkvidockwidget_qt3.cpp
index d286d64..2820ce2 100644
--- a/src/modules/dockwidget/libkvidockwidget_qt3.cpp
+++ b/src/modules/dockwidget/libkvidockwidget_qt3.cpp
@@ -164,7 +164,7 @@ KviDockWidget::KviDockWidget(KviFrame * frm,const char * name)
 	m_pContextPopup->insertSeparator();
 	id = m_pContextPopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_DOCKWIDGET)),__tr2qs("Un&dock"),m_pFrm,TQT_SLOT(executeInternalCommand(int)));
 	m_pContextPopup->setItemParameter(id,KVI_INTERNALCOMMAND_DOCKWIDGET_HIDE);
-	id = m_pContextPopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUITAPP)),__tr2qs("&Quit"),g_pApp,TQT_SLOT(quit()));
+	id = m_pContextPopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUITAPP)),__tr2qs("&Quit"),g_pApp,TQT_SLOT(quit()));
 	m_pContextPopup->setAccel(__tr2qs("Ctrl+Q"),id);
 	connect(m_pContextPopup,TQT_SIGNAL(aboutToShow()),this,TQT_SLOT(fillContextPopup()));
 }
@@ -554,7 +554,7 @@ void KviDockWidget::grabActivityInfo()
 				case KVI_WINDOW_TYPE_CHANNEL:
 					if(m_iChannels < iLevel) m_iChannels = iLevel;
 				break;
-				case KVI_WINDOW_TYPE_TQUERY:
+				case KVI_WINDOW_TYPE_QUERY:
 					if(m_iQueries < iLevel) m_iQueries = iLevel;
 				break;
 				default:
@@ -581,7 +581,7 @@ void KviDockWidget::grabActivityInfo()
 					case KVI_WINDOW_TYPE_CHANNEL:
 						if(m_iChannels < iLevel) m_iChannels = iLevel;
 					break;
-					case KVI_WINDOW_TYPE_TQUERY:
+					case KVI_WINDOW_TYPE_QUERY:
 						if(m_iQueries < iLevel) m_iQueries = iLevel;
 					break;
 					default:
diff --git a/src/modules/dockwidget/libkvidockwidget_qt4.cpp b/src/modules/dockwidget/libkvidockwidget_qt4.cpp
index 54033af..48555c7 100644
--- a/src/modules/dockwidget/libkvidockwidget_qt4.cpp
+++ b/src/modules/dockwidget/libkvidockwidget_qt4.cpp
@@ -108,7 +108,7 @@ KviDockWidget::KviDockWidget(KviFrame * frm)
 	m_pContextPopup->insertSeparator();
 	id = m_pContextPopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_DOCKWIDGET)),__tr2qs("Un&dock"),m_pFrm,TQT_SLOT(executeInternalCommand(int)));
 	m_pContextPopup->setItemParameter(id,KVI_INTERNALCOMMAND_DOCKWIDGET_HIDE);
-	id = m_pContextPopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUITAPP)),__tr2qs("&Quit"),g_pApp,TQT_SLOT(quit()));
+	id = m_pContextPopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUITAPP)),__tr2qs("&Quit"),g_pApp,TQT_SLOT(quit()));
 	m_pContextPopup->setAccel(__tr2qs("Ctrl+Q"),id);
 	connect(m_pContextPopup,TQT_SIGNAL(aboutToShow()),this,TQT_SLOT(fillContextPopup()));
 	
@@ -412,7 +412,7 @@ void KviDockWidget::grabActivityInfo()
 				case KVI_WINDOW_TYPE_CHANNEL:
 					if(m_iChannels < iLevel) m_iChannels = iLevel;
 				break;
-				case KVI_WINDOW_TYPE_TQUERY:
+				case KVI_WINDOW_TYPE_QUERY:
 					if(m_iQueries < iLevel) m_iQueries = iLevel;
 				break;
 				default:
@@ -439,7 +439,7 @@ void KviDockWidget::grabActivityInfo()
 					case KVI_WINDOW_TYPE_CHANNEL:
 						if(m_iChannels < iLevel) m_iChannels = iLevel;
 					break;
-					case KVI_WINDOW_TYPE_TQUERY:
+					case KVI_WINDOW_TYPE_QUERY:
 						if(m_iQueries < iLevel) m_iQueries = iLevel;
 					break;
 					default:
diff --git a/src/modules/eventeditor/eventeditor.cpp b/src/modules/eventeditor/eventeditor.cpp
index 3a6b6b2..8c13eac 100644
--- a/src/modules/eventeditor/eventeditor.cpp
+++ b/src/modules/eventeditor/eventeditor.cpp
@@ -156,7 +156,7 @@ void KviEventEditor::itemPressed(KviTalListViewItem *it,const TQPoint &pnt,int c
 			//m_pContextPopup->setItemChecked(id,((KviEventHandlerListViewItem *)it)->m_bEnabled);
 
 			m_pContextPopup->insertItem(
-					*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUIT)),
+					*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUIT)),
 					__tr2qs("Re&move Handler"),
 					this,TQT_SLOT(removeCurrentHandler()));
 			m_pContextPopup->insertItem(
diff --git a/src/modules/logview/logviewmdiwindow.cpp b/src/modules/logview/logviewmdiwindow.cpp
index 84a6711..7efa17f 100644
--- a/src/modules/logview/logviewmdiwindow.cpp
+++ b/src/modules/logview/logviewmdiwindow.cpp
@@ -378,7 +378,7 @@ void KviLogViewMDIWindow::rightButtonClicked ( KviTalListViewItem * it, const TQ
 	if(!it) return;
 	if(((KviLogListViewItem *)it)->fileName(0).isEmpty()) return;
 	KviTalPopupMenu* popup = new KviTalPopupMenu(this);
-	popup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUIT)),__tr2qs_ctx("Remove file","logview"),this,TQT_SLOT(deleteCurrent()));
+	popup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUIT)),__tr2qs_ctx("Remove file","logview"),this,TQT_SLOT(deleteCurrent()));
 	popup->exec( TQCursor::pos() );
 }
 
diff --git a/src/modules/logview/logviewwidget.cpp b/src/modules/logview/logviewwidget.cpp
index 31da503..11070b5 100644
--- a/src/modules/logview/logviewwidget.cpp
+++ b/src/modules/logview/logviewwidget.cpp
@@ -45,7 +45,7 @@ const TQPixmap * KviLogListViewItemType::pixmap(int col) const
 		case KviLogFile::Channel:
 			return g_pIconManager->getSmallIcon(KVI_SMALLICON_CHANNEL);
 		case KviLogFile::Query:
-			return g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUERY);
+			return g_pIconManager->getSmallIcon(KVI_SMALLICON_QUERY);
 		case KviLogFile::DccChat:
 			return g_pIconManager->getSmallIcon(KVI_SMALLICON_DCCMSG);
 		case KviLogFile::Console:
diff --git a/src/modules/mediaplayer/mp_winampinterface.cpp b/src/modules/mediaplayer/mp_winampinterface.cpp
index 7820dbb..c41b1ba 100644
--- a/src/modules/mediaplayer/mp_winampinterface.cpp
+++ b/src/modules/mediaplayer/mp_winampinterface.cpp
@@ -156,7 +156,7 @@
 #define WINAMP_CMD_STOP WINAMP_BUTTON4
 #define WINAMP_CMD_NEXT WINAMP_BUTTON5
 
-#define WINAMP_CMD_TQUIT 40001
+#define WINAMP_CMD_QUIT 40001
 
 #define KVIRC_WM_USER 63112
 
@@ -237,7 +237,7 @@ MP_WINAMP_WM_COMMAND(stop,WINAMP_CMD_STOP)
 MP_WINAMP_WM_COMMAND(next,WINAMP_CMD_NEXT)
 MP_WINAMP_WM_COMMAND(prev,WINAMP_CMD_PREV)
 MP_WINAMP_WM_COMMAND(pause,WINAMP_CMD_PAUSE)
-MP_WINAMP_WM_COMMAND(quit,WINAMP_CMD_TQUIT)
+MP_WINAMP_WM_COMMAND(quit,WINAMP_CMD_QUIT)
 
 
 int KviWinampInterface::length()
diff --git a/src/modules/notifier/notifierwindow.cpp b/src/modules/notifier/notifierwindow.cpp
index bbc1298..6998912 100644
--- a/src/modules/notifier/notifierwindow.cpp
+++ b/src/modules/notifier/notifierwindow.cpp
@@ -1253,10 +1253,10 @@ void KviNotifierWindow::fillContextPopup()
 	m_pDisablePopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TIME)),__tr2qs_ctx("30 Minutes","notifier"),this,TQT_SLOT(disableFor30Minutes()));
 	m_pDisablePopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TIME)),__tr2qs_ctx("1 Hour","notifier"),this,TQT_SLOT(disableFor60Minutes()));
 	m_pDisablePopup->insertSeparator();
-	m_pDisablePopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUIT)),__tr2qs_ctx("Until KVIrc is Restarted","notifier"),this,TQT_SLOT(disableUntilKVIrcRestarted()));
-	m_pDisablePopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUIT)),__tr2qs_ctx("Permanently (Until Explicitly Enabled)","notifier"),this,TQT_SLOT(disablePermanently()));
+	m_pDisablePopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUIT)),__tr2qs_ctx("Until KVIrc is Restarted","notifier"),this,TQT_SLOT(disableUntilKVIrcRestarted()));
+	m_pDisablePopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUIT)),__tr2qs_ctx("Permanently (Until Explicitly Enabled)","notifier"),this,TQT_SLOT(disablePermanently()));
 
-	m_pContextPopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUIT)),__tr2qs_ctx("Disable","notifier"),m_pDisablePopup);
+	m_pContextPopup->insertItem(*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUIT)),__tr2qs_ctx("Disable","notifier"),m_pDisablePopup);
 }
 
 void KviNotifierWindow::disableFor15Minutes()
diff --git a/src/modules/options/optw_connection.cpp b/src/modules/options/optw_connection.cpp
index d6990c9..21c1192 100644
--- a/src/modules/options/optw_connection.cpp
+++ b/src/modules/options/optw_connection.cpp
@@ -76,11 +76,11 @@ KviConnectionOptionsWidget::KviConnectionOptionsWidget(TQWidget * parent)
 #ifdef COMPILE_INFO_TIPS
 	mergeTip(b,__tr2qs_ctx("<center>This option will enable auto-reconnecting after an unexpected disconnect. " \
 						"An unexpected disconnect is the <b>termination</b> of a <b>fully connected IRC session</b> " \
-						"that was <b>not requested by the user</b> by the means of the TQUIT message." \
-						"<p><b>Warning:</b> If you use /RAW to send a TQUIT message to the server, " \
+						"that was <b>not requested by the user</b> by the means of the QUIT message." \
+						"<p><b>Warning:</b> If you use /RAW to send a QUIT message to the server, " \
 						"this option will not behave correctly, since does not detect the outgoing " \
 						"QUIT message and will attempt to reconnect after the server has closed the connection. " \
-						"For this reason, always use the /TQUIT command to close your connections. " \
+						"For this reason, always use the /QUIT command to close your connections. " \
 						"This option may also behave incorrectly with bouncers that support " \
 						"detaching, in this case a solution could be to prepare an alias that sends the " \
 						"bouncer \"detach\" command immediately before the \"quit\" command.<br>" \
diff --git a/src/modules/options/optw_irc.cpp b/src/modules/options/optw_irc.cpp
index a6cee9d..71b6095 100644
--- a/src/modules/options/optw_irc.cpp
+++ b/src/modules/options/optw_irc.cpp
@@ -76,10 +76,10 @@ KviIrcAdvancedOptionsWidget::KviIrcAdvancedOptionsWidget(TQWidget * parent)
 #ifdef COMPILE_INFO_TIPS
 	mergeTip(b,
 		__tr2qs_ctx("<center>This option causes KVIrc to close " \
-		"the connection immediately after sending the TQUIT message.<br>" \
+		"the connection immediately after sending the QUIT message.<br>" \
 		"When this option is disabled, KVIrc will wait for the server " \
 		"to close the connection.<br>" \
-		"Note that if you use this, your TQUIT message may be not displayed.</center>","options"));
+		"Note that if you use this, your QUIT message may be not displayed.</center>","options"));
 #endif
 	addBoolSelector(0,1,0,1,__tr2qs_ctx("Prepend gender info to realname","options"),KviOption_boolPrependGenderInfoToRealname);    
 }
diff --git a/src/modules/options/optw_query.h b/src/modules/options/optw_query.h
index 215ba37..dde374f 100644
--- a/src/modules/options/optw_query.h
+++ b/src/modules/options/optw_query.h
@@ -1,5 +1,5 @@
-#ifndef _OPTW_TQUERY_H_
-#define _OPTW_TQUERY_H_
+#ifndef _OPTW_QUERY_H_
+#define _OPTW_QUERY_H_
 //
 //   File : optw_query.h
 //   Creation date : Tue Mar 05 22:31:18 2002 GMT by Szymon Stefanek
@@ -24,7 +24,7 @@
 
 #include "kvi_optionswidget.h"
 
-#define KVI_OPTIONS_WIDGET_ICON_KviQueryOptionsWidget KVI_SMALLICON_TQUERY
+#define KVI_OPTIONS_WIDGET_ICON_KviQueryOptionsWidget KVI_SMALLICON_QUERY
 #define KVI_OPTIONS_WIDGET_NAME_KviQueryOptionsWidget __tr2qs_no_lookup("Query")
 #define KVI_OPTIONS_WIDGET_PARENT_KviQueryOptionsWidget KviIrcOptionsWidget
 #define KVI_OPTIONS_WIDGET_KEYWORDS_KviQueryOptionsWidget __tr2qs_no_lookup("chat")
diff --git a/src/modules/popupeditor/popupeditor.cpp b/src/modules/popupeditor/popupeditor.cpp
index dd1cf24..3402681 100644
--- a/src/modules/popupeditor/popupeditor.cpp
+++ b/src/modules/popupeditor/popupeditor.cpp
@@ -1101,7 +1101,7 @@ void KviPopupEditor::itemPressed(KviTalListViewItem *it,const TQPoint &pnt,int c
 
 	m_pContextPopup->setItemEnabled(
 		m_pContextPopup->insertItem(
-				*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUIT)),
+				*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUIT)),
 				__tr2qs("Re&move Popup"),
 				this,TQT_SLOT(removeCurrentPopup())),
 	it);
diff --git a/src/modules/raweditor/raweditor.cpp b/src/modules/raweditor/raweditor.cpp
index 123675b..4978726 100644
--- a/src/modules/raweditor/raweditor.cpp
+++ b/src/modules/raweditor/raweditor.cpp
@@ -158,7 +158,7 @@ void KviRawEditor::itemPressed(KviTalListViewItem *it,const TQPoint &pnt,int col
 					__tr2qs("&Disable Handler"),this,TQT_SLOT(toggleCurrentHandlerEnabled()));
 		
 			m_pContextPopup->insertItem(
-					*(g_pIconManager->getSmallIcon(KVI_SMALLICON_TQUIT)),
+					*(g_pIconManager->getSmallIcon(KVI_SMALLICON_QUIT)),
 					__tr2qs("Re&move Handler"),
 					this,TQT_SLOT(removeCurrentHandler()));
 			m_pContextPopup->insertItem(
diff --git a/src/modules/setup/libkvisetup.cpp b/src/modules/setup/libkvisetup.cpp
index d5989c9..0fc0495 100644
--- a/src/modules/setup/libkvisetup.cpp
+++ b/src/modules/setup/libkvisetup.cpp
@@ -77,7 +77,7 @@ KVIMODULEEXPORTFUNC void setup_finish()
 		// Reset the quit message and the real name... if they contain the KVIrc version
 		// then probably the user hasn't even edited them.
 		if(KVI_OPTION_STRING(KviOption_stringQuitMessage).find("KVIrc",0,false) != -1)
-			KVI_OPTION_STRING(KviOption_stringQuitMessage) = KVI_DEFAULT_TQUIT_MESSAGE;
+			KVI_OPTION_STRING(KviOption_stringQuitMessage) = KVI_DEFAULT_QUIT_MESSAGE;
 		// We deserve to change the user's part message in something nice :)
 		KVI_OPTION_STRING(KviOption_stringPartMessage) = KVI_DEFAULT_PART_MESSAGE;
 	
diff --git a/src/modules/setup/setupwizard.cpp b/src/modules/setup/setupwizard.cpp
index dd0e8a9..20ca97b 100644
--- a/src/modules/setup/setupwizard.cpp
+++ b/src/modules/setup/setupwizard.cpp
@@ -588,9 +588,9 @@ KviSetupWizard::KviSetupWizard()
 	}
 
 	//mIRC import
-	#define TQUERY_BUFFER 2048
+	#define QUERY_BUFFER 2048
 	char* buffer;
-	DWORD len = TQUERY_BUFFER;
+	DWORD len = QUERY_BUFFER;
 	buffer = (char*)malloc(len*sizeof(char));
 	HKEY hKey;
 	TQString szMircDir;
@@ -796,7 +796,7 @@ void KviSetupWizard::makeLink()
 	// Dig in the registry looking up the Desktop path
     if(RegOpenKeyEx(HKEY_CURRENT_USER,
 		"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", 
-		0,KEY_TQUERY_VALUE,&hCU) == ERROR_SUCCESS)
+		0,KEY_QUERY_VALUE,&hCU) == ERROR_SUCCESS)
 	{
 		RegQueryValueEx(hCU,"Desktop",NULL,&lpType,
         (unsigned char *)&szLink,&ulSize);
diff --git a/src/modules/spaste/libkvispaste.cpp b/src/modules/spaste/libkvispaste.cpp
index d22fbb7..92a28a3 100644
--- a/src/modules/spaste/libkvispaste.cpp
+++ b/src/modules/spaste/libkvispaste.cpp
@@ -63,7 +63,7 @@ static KviWindow * spaste_kvs_find_window(TQString &win, KviKvsModuleCommandCall
 		c->warning(__tr("Window with ID '%Q' not found"),&win);
 		return 0;
 	}
-	if((w->type() == KVI_WINDOW_TYPE_CHANNEL) || (w->type() == KVI_WINDOW_TYPE_TQUERY) || (w->type() == KVI_WINDOW_TYPE_DCCCHAT))return w;
+	if((w->type() == KVI_WINDOW_TYPE_CHANNEL) || (w->type() == KVI_WINDOW_TYPE_QUERY) || (w->type() == KVI_WINDOW_TYPE_DCCCHAT))return w;
 	c->warning(__tr2qs("The specified window (%Q) is not a channel/query/DCC chat"),&win);
 	return 0;
 }
@@ -212,7 +212,7 @@ static bool spaste_kvs_cmd_stop(KviKvsModuleCommandCall * c)
         
 		if(!iId) //Delete all spaste's from the current window
 		{
-			if((c->window()->type() != KVI_WINDOW_TYPE_CHANNEL) && (c->window()->type() != KVI_WINDOW_TYPE_TQUERY) && (c->window()->type() != KVI_WINDOW_TYPE_DCCCHAT))
+			if((c->window()->type() != KVI_WINDOW_TYPE_CHANNEL) && (c->window()->type() != KVI_WINDOW_TYPE_QUERY) && (c->window()->type() != KVI_WINDOW_TYPE_DCCCHAT))
 			{
 				TQString szWinId = c->window()->id();
 				c->warning(__tr2qs("The specified window (%Q) is not a channel/query/dcc"),&szWinId);
