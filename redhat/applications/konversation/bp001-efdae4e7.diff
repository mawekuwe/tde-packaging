commit efdae4e712984b2932ca4a43942b7a93dcb8dbd3
Author: Timothy Pearson <kb9vqf@pearsoncomputing.net>
Date:   1324316340 -0600

    Remove additional unneeded tq method conversions

diff --git a/konversation/scripts/fortunes.dat b/konversation/scripts/fortunes.dat
index 7abf85d..240af34 100644
--- a/konversation/scripts/fortunes.dat
+++ b/konversation/scripts/fortunes.dat
@@ -419,7 +419,7 @@ Eric Youngdale: Err... is Richard Stallman here?
 Linux: The OS people choose without $200,000,000 of persuasion.
 	-- Mike Coleman
 %
-The memory management on the PowerPC can be used to frighten small tqchildren.
+The memory management on the PowerPC can be used to frighten small children.
 	-- Linus Torvalds
 %
 ... faster BogoMIPS calculations (yes, it now boots 2 seconds faster than
diff --git a/konversation/src/autoreplace_preferences.cpp b/konversation/src/autoreplace_preferences.cpp
index c77d01a..b66eb25 100644
--- a/konversation/src/autoreplace_preferences.cpp
+++ b/konversation/src/autoreplace_preferences.cpp
@@ -146,7 +146,7 @@ void Autoreplace_Config::saveSettings()
     for(unsigned int index=0;index<newList.count();index++)
     {
       // write the current entry's pattern and replacement (adds a "#" to preserve blanks at the end of the line)
-      config->writeEntry(TQString("Autoreplace%1").tqarg(index),newList[index]+'#');
+      config->writeEntry(TQString("Autoreplace%1").arg(index),newList[index]+'#');
     } // for
   }
   // if there were no entries at all, write a dummy entry to prevent KConfigXT from "optimizing"
diff --git a/konversation/src/channel.cpp b/konversation/src/channel.cpp
index 13e026e..b7063c0 100644
--- a/konversation/src/channel.cpp
+++ b/konversation/src/channel.cpp
@@ -569,7 +569,7 @@ void Channel::popupCommand(int id)
         case Konversation::Ping:
         {
             unsigned int time_t = TQDateTime::currentDateTime().toTime_t();
-            pattern=TQString(cc+"CTCP %u PING %1").tqarg(time_t);
+            pattern=TQString(cc+"CTCP %u PING %1").arg(time_t);
         }
         break;
         case Konversation::Kick:
@@ -617,7 +617,7 @@ void Channel::popupCommand(int id)
             break;
         case Konversation::IgnoreNick:
             if (nickList.size() == 1)
-                question=i18n("Do you want to ignore %1?").tqarg(nickList.first());
+                question=i18n("Do you want to ignore %1?").arg(nickList.first());
             else
                 question = i18n("Do you want to ignore the selected users?");
             if (KMessageBox::warningContinueCancel(this, question, i18n("Ignore"), i18n("Ignore"), "IgnoreNick") ==
@@ -635,7 +635,7 @@ void Channel::popupCommand(int id)
             }
 
             if (selectedIgnoredNicks.count() == 1)
-                question=i18n("Do you want to stop ignoring %1?").tqarg(selectedIgnoredNicks.first());
+                question=i18n("Do you want to stop ignoring %1?").arg(selectedIgnoredNicks.first());
             else
                 question = i18n("Do you want to stop ignoring the selected users?");
             if (KMessageBox::warningContinueCancel(this, question, i18n("Unignore"), i18n("Unignore"), "UnignoreNick") ==
@@ -776,7 +776,7 @@ void Channel::completeNick()
                     if(Preferences::nickCompletionMode() == 1)
                     {
                         TQString nicksFound = found.join(" ");
-                        appendServerMessage(i18n("Completion"), i18n("Possible completions: %1.").tqarg(nicksFound));
+                        appendServerMessage(i18n("Completion"), i18n("Possible completions: %1.").arg(nicksFound));
                     }
                     else
                     {
@@ -1174,7 +1174,7 @@ void Channel::modeButtonClicked(int id, bool on)
             args=limit->text();
     }
     // put together the mode command and send it to the server queue
-    m_server->queue(command.tqarg(getName()).tqarg((on) ? "+" : "-").tqarg(mode[id]).tqarg(args));
+    m_server->queue(command.arg(getName()).arg((on) ? "+" : "-").arg(mode[id]).arg(args));
 }
 
 void Channel::quickButtonClicked(const TQString &buttonText)
@@ -1247,12 +1247,12 @@ void Channel::nickRenamed(const TQString &oldNick, const NickInfo& nickInfo)
     if(newNick == m_server->getNickname()) /* Check newNick because  m_server->getNickname() is already updated to new nick */
     {
         setNickname(newNick);
-        appendCommandMessage(i18n("Nick"),i18n("You are now known as %1.").tqarg(newNick), false, true, true);
+        appendCommandMessage(i18n("Nick"),i18n("You are now known as %1.").arg(newNick), false, true, true);
     }
     else
     {
         /* No, must've been someone else */
-        appendCommandMessage(i18n("Nick"),i18n("%1 is now known as %2.").tqarg(oldNick).tqarg(newNick),false);
+        appendCommandMessage(i18n("Nick"),i18n("%1 is now known as %2.").arg(oldNick).arg(newNick),false);
     }
 
     nicknameListView->sort();
@@ -1266,7 +1266,7 @@ void Channel::joinNickname(ChannelNickPtr channelNick)
         m_joined = true;
         emit joined(this);
         appendCommandMessage(i18n("Join"),i18n("%1 is the channel and %2 is our hostmask",
-                             "You have joined the channel %1 (%2).").tqarg(getName()).tqarg(channelNick->getHostmask()),false, false, true);
+                             "You have joined the channel %1 (%2).").arg(getName()).arg(channelNick->getHostmask()),false, false, true);
         m_ownChannelNick = channelNick;
         connect(m_ownChannelNick, TQT_SIGNAL(channelNickChanged()), TQT_SLOT(refreshModeButtons()));
         refreshModeButtons();
@@ -1283,7 +1283,7 @@ void Channel::joinNickname(ChannelNickPtr channelNick)
         TQString nick = channelNick->getNickname();
         TQString hostname = channelNick->getHostmask();
         appendCommandMessage(i18n("Join"), i18n("%1 is the nick joining and %2 the hostmask of that nick",
-                             "%1 has joined this channel (%2).").tqarg(nick).tqarg(hostname),false, false);
+                             "%1 has joined this channel (%2).").arg(nick).arg(hostname),false, false);
         addNickname(channelNick);
     }
 }
@@ -1307,15 +1307,15 @@ void Channel::removeNick(ChannelNickPtr channelNick, const TQString &reason, boo
             if (displayReason.isEmpty())
                 appendCommandMessage(i18n("Quit"), i18n("You have left this server."), false);
             else
-                appendCommandMessage(i18n("Quit"), i18n("%1 adds the reason", "You have left this server (%1).").tqarg(displayReason), false);
+                appendCommandMessage(i18n("Quit"), i18n("%1 adds the reason", "You have left this server (%1).").arg(displayReason), false);
         }
         else
         {
             if (displayReason.isEmpty())
-                appendCommandMessage(i18n("Part"), i18n("You have left channel %1.").tqarg(getName()), false);
+                appendCommandMessage(i18n("Part"), i18n("You have left channel %1.").arg(getName()), false);
             else
                 appendCommandMessage(i18n("Part"), i18n("%1 adds the channel and %2 the reason",
-                                     "You have left channel %1 (%2).").tqarg(getName()).tqarg(displayReason), false);
+                                     "You have left channel %1 (%2).").arg(getName()).arg(displayReason), false);
 
         }
 
@@ -1326,18 +1326,18 @@ void Channel::removeNick(ChannelNickPtr channelNick, const TQString &reason, boo
         if (quit)
         {
             if (displayReason.isEmpty())
-                appendCommandMessage(i18n("Quit"), i18n("%1 has left this server.").tqarg(channelNick->getNickname()), false);
+                appendCommandMessage(i18n("Quit"), i18n("%1 has left this server.").arg(channelNick->getNickname()), false);
             else
                 appendCommandMessage(i18n("Quit"), i18n("%1 adds the nick and %2 the reason",
-                                     "%1 has left this server (%2).").tqarg(channelNick->getNickname()).tqarg(displayReason), false);
+                                     "%1 has left this server (%2).").arg(channelNick->getNickname()).arg(displayReason), false);
         }
         else
         {
             if (displayReason.isEmpty())
-                appendCommandMessage(i18n("Part"), i18n("%1 has left this channel.").tqarg(channelNick->getNickname()), false);
+                appendCommandMessage(i18n("Part"), i18n("%1 has left this channel.").arg(channelNick->getNickname()), false);
             else
                 appendCommandMessage(i18n("Part"), i18n("%1 adds the nick and %2 the reason",
-                                     "%1 has left this channel (%2).").tqarg(channelNick->getNickname()).tqarg(displayReason), false);
+                                     "%1 has left this channel (%2).").arg(channelNick->getNickname()).arg(displayReason), false);
         }
 
         if(channelNick->isAnyTypeOfOp())
@@ -1375,10 +1375,10 @@ void Channel::kickNick(ChannelNickPtr channelNick, const TQString &kicker, const
         if(kicker == m_server->getNickname())
         {
             if (displayReason.isEmpty())
-                appendCommandMessage(i18n("Kick"), i18n("You have kicked yourself from channel %1.").tqarg(getName()));
+                appendCommandMessage(i18n("Kick"), i18n("You have kicked yourself from channel %1.").arg(getName()));
             else
                 appendCommandMessage(i18n("Kick"), i18n("%1 adds the channel and %2 the reason",
-                                              "You have kicked yourself from channel %1 (%2).").tqarg(getName()).tqarg(displayReason));
+                                              "You have kicked yourself from channel %1 (%2).").arg(getName()).arg(displayReason));
         }
         else
         {
@@ -1386,13 +1386,13 @@ void Channel::kickNick(ChannelNickPtr channelNick, const TQString &kicker, const
             {
                 appendCommandMessage(i18n("Kick"), i18n("%1 adds the channel, %2 adds the kicker",
                                               "You have been kicked from channel %1 by %2.")
-                                              .tqarg(getName()).tqarg(kicker), true);
+                                              .arg(getName()).arg(kicker), true);
             }
             else
             {
                 appendCommandMessage(i18n("Kick"), i18n("%1 adds the channel, %2 the kicker and %3 the reason",
                                               "You have been kicked from channel %1 by %2 (%3).")
-                                              .tqarg(getName()).tqarg(kicker).tqarg(displayReason), true);
+                                              .arg(getName()).arg(kicker).arg(displayReason), true);
             }
 
             KonversationApplication::instance()->notificationHandler()->kick(this,getName(), kicker);
@@ -1412,10 +1412,10 @@ void Channel::kickNick(ChannelNickPtr channelNick, const TQString &kicker, const
         if(kicker == m_server->getNickname())
         {
             if (displayReason.isEmpty())
-                appendCommandMessage(i18n("Kick"), i18n("You have kicked %1 from the channel.").tqarg(channelNick->getNickname()));
+                appendCommandMessage(i18n("Kick"), i18n("You have kicked %1 from the channel.").arg(channelNick->getNickname()));
             else
                 appendCommandMessage(i18n("Kick"), i18n("%1 adds the kicked nick and %2 the reason",
-                                     "You have kicked %1 from the channel (%2).").tqarg(channelNick->getNickname()).tqarg(displayReason), true);
+                                     "You have kicked %1 from the channel (%2).").arg(channelNick->getNickname()).arg(displayReason), true);
         }
         else
         {
@@ -1423,13 +1423,13 @@ void Channel::kickNick(ChannelNickPtr channelNick, const TQString &kicker, const
             {
                 appendCommandMessage(i18n("Kick"), i18n("%1 adds the kicked nick, %2 adds the kicker",
                                      "%1 has been kicked from the channel by %2.")
-                                     .tqarg(channelNick->getNickname()).tqarg(kicker), true);
+                                     .arg(channelNick->getNickname()).arg(kicker), true);
             }
             else
             {
                 appendCommandMessage(i18n("Kick"), i18n("%1 adds the kicked nick, %2 the kicker and %3 the reason",
                                      "%1 has been kicked from the channel by %2 (%3).")
-                                     .tqarg(channelNick->getNickname()).tqarg(kicker).tqarg(displayReason), true);
+                                     .arg(channelNick->getNickname()).arg(kicker).arg(displayReason), true);
             }
         }
 
@@ -1511,7 +1511,7 @@ void Channel::emitUpdateInfo()
 
 void Channel::setTopic(const TQString &newTopic)
 {
-    appendCommandMessage(i18n("Topic"), i18n("The channel topic is \"%1\".").tqarg(newTopic));
+    appendCommandMessage(i18n("Topic"), i18n("The channel topic is \"%1\".").arg(newTopic));
     TQString topic = Konversation::removeIrcMarkup(newTopic);
     topicLine->setText(topic);
     topicAuthorUnknown=true; // if we only get called with a topic, it was a 332, which usually has a 333 next
@@ -1521,7 +1521,7 @@ void Channel::setTopic(const TQString &newTopic)
 
     if(m_topicHistory.first().section(' ', 2) != newTopic)
     {
-        m_topicHistory.prepend(TQString("%1 "+i18n("unknown")+" %2").tqarg(TQDateTime::currentDateTime().toTime_t()).tqarg(newTopic));
+        m_topicHistory.prepend(TQString("%1 "+i18n("unknown")+" %2").arg(TQDateTime::currentDateTime().toTime_t()).arg(newTopic));
         emit topicHistoryChanged();
     }
 }
@@ -1530,14 +1530,14 @@ void Channel::setTopic(const TQString &nickname, const TQString &newTopic) // Ov
 {
     if(nickname == m_server->getNickname())
     {
-        appendCommandMessage(i18n("Topic"), i18n("You set the channel topic to \"%1\".").tqarg(newTopic));
+        appendCommandMessage(i18n("Topic"), i18n("You set the channel topic to \"%1\".").arg(newTopic));
     }
     else
     {
-        appendCommandMessage(i18n("Topic"), i18n("%1 sets the channel topic to \"%2\".").tqarg(nickname).tqarg(newTopic));
+        appendCommandMessage(i18n("Topic"), i18n("%1 sets the channel topic to \"%2\".").arg(nickname).arg(newTopic));
     }
 
-    m_topicHistory.prepend(TQString("%1 %2 %3").tqarg(TQDateTime::currentDateTime().toTime_t()).tqarg(nickname).tqarg(newTopic));
+    m_topicHistory.prepend(TQString("%1 %2 %3").arg(TQDateTime::currentDateTime().toTime_t()).arg(nickname).arg(newTopic));
     TQString topic = Konversation::removeIrcMarkup(newTopic);
     topicLine->setText(topic);
 
@@ -1561,7 +1561,7 @@ void Channel::setTopicAuthor(const TQString& newAuthor, TQDateTime time)
 
     if(topicAuthorUnknown)
     {
-        m_topicHistory[0] =  TQString("%1").tqarg(time.toTime_t()) + ' ' + newAuthor + ' ' + m_topicHistory[0].section(' ', 2);
+        m_topicHistory[0] =  TQString("%1").arg(time.toTime_t()) + ' ' + newAuthor + ' ' + m_topicHistory[0].section(' ', 2);
         topicAuthorUnknown = false;
 
         emit topicHistoryChanged();
@@ -1599,14 +1599,14 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
                     if(toMe)
                         message=i18n("You give channel owner privileges to yourself.");
                     else
-                        message=i18n("You give channel owner privileges to %1.").tqarg(parameter);
+                        message=i18n("You give channel owner privileges to %1.").arg(parameter);
                 }
                 else
                 {
                     if(toMe)
-                        message=i18n("%1 gives channel owner privileges to you.").tqarg(sourceNick);
+                        message=i18n("%1 gives channel owner privileges to you.").arg(sourceNick);
                     else
-                        message=i18n("%1 gives channel owner privileges to %2.").tqarg(sourceNick).tqarg(parameter);
+                        message=i18n("%1 gives channel owner privileges to %2.").arg(sourceNick).arg(parameter);
                 }
             }
             else
@@ -1616,14 +1616,14 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
                     if(toMe)
                         message=i18n("You take channel owner privileges from yourself.");
                     else
-                        message=i18n("You take channel owner privileges from %1.").tqarg(parameter);
+                        message=i18n("You take channel owner privileges from %1.").arg(parameter);
                 }
                 else
                 {
                     if(toMe)
-                        message=i18n("%1 takes channel owner privileges from you.").tqarg(sourceNick);
+                        message=i18n("%1 takes channel owner privileges from you.").arg(sourceNick);
                     else
-                        message=i18n("%1 takes channel owner privileges from %2.").tqarg(sourceNick).tqarg(parameter);
+                        message=i18n("%1 takes channel owner privileges from %2.").arg(sourceNick).arg(parameter);
                 }
             }
             if(parameterChannelNick)
@@ -1642,14 +1642,14 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
                     if(toMe)
                         message=i18n("You give channel admin privileges to yourself.");
                     else
-                        message=i18n("You give channel admin privileges to %1.").tqarg(parameter);
+                        message=i18n("You give channel admin privileges to %1.").arg(parameter);
                 }
                 else
                 {
                     if(toMe)
-                        message=i18n("%1 gives channel admin privileges to you.").tqarg(sourceNick);
+                        message=i18n("%1 gives channel admin privileges to you.").arg(sourceNick);
                     else
-                        message=i18n("%1 gives channel admin privileges to %2.").tqarg(sourceNick).tqarg(parameter);
+                        message=i18n("%1 gives channel admin privileges to %2.").arg(sourceNick).arg(parameter);
                 }
             }
             else
@@ -1659,14 +1659,14 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
                     if(toMe)
                         message=i18n("You take channel admin privileges from yourself.");
                     else
-                        message=i18n("You take channel admin privileges from %1.").tqarg(parameter);
+                        message=i18n("You take channel admin privileges from %1.").arg(parameter);
                 }
                 else
                 {
                     if(toMe)
-                        message=i18n("%1 takes channel admin privileges from you.").tqarg(sourceNick);
+                        message=i18n("%1 takes channel admin privileges from you.").arg(sourceNick);
                     else
-                        message=i18n("%1 takes channel admin privileges from %2.").tqarg(sourceNick).tqarg(parameter);
+                        message=i18n("%1 takes channel admin privileges from %2.").arg(sourceNick).arg(parameter);
                 }
             }
             if(parameterChannelNick)
@@ -1685,14 +1685,14 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
                     if(toMe)
                         message=i18n("You give channel operator privileges to yourself.");
                     else
-                        message=i18n("You give channel operator privileges to %1.").tqarg(parameter);
+                        message=i18n("You give channel operator privileges to %1.").arg(parameter);
                 }
                 else
                 {
                     if(toMe)
-                        message=i18n("%1 gives channel operator privileges to you.").tqarg(sourceNick);
+                        message=i18n("%1 gives channel operator privileges to you.").arg(sourceNick);
                     else
-                        message=i18n("%1 gives channel operator privileges to %2.").tqarg(sourceNick).tqarg(parameter);
+                        message=i18n("%1 gives channel operator privileges to %2.").arg(sourceNick).arg(parameter);
                 }
             }
             else
@@ -1702,14 +1702,14 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
                     if(toMe)
                         message=i18n("You take channel operator privileges from yourself.");
                     else
-                        message=i18n("You take channel operator privileges from %1.").tqarg(parameter);
+                        message=i18n("You take channel operator privileges from %1.").arg(parameter);
                 }
                 else
                 {
                     if(toMe)
-                        message=i18n("%1 takes channel operator privileges from you.").tqarg(sourceNick);
+                        message=i18n("%1 takes channel operator privileges from you.").arg(sourceNick);
                     else
-                        message=i18n("%1 takes channel operator privileges from %2.").tqarg(sourceNick).tqarg(parameter);
+                        message=i18n("%1 takes channel operator privileges from %2.").arg(sourceNick).arg(parameter);
                 }
             }
             if(parameterChannelNick)
@@ -1728,14 +1728,14 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
                     if(toMe)
                         message=i18n("You give channel halfop privileges to yourself.");
                     else
-                        message=i18n("You give channel halfop privileges to %1.").tqarg(parameter);
+                        message=i18n("You give channel halfop privileges to %1.").arg(parameter);
                 }
                 else
                 {
                     if(toMe)
-                        message=i18n("%1 gives channel halfop privileges to you.").tqarg(sourceNick);
+                        message=i18n("%1 gives channel halfop privileges to you.").arg(sourceNick);
                     else
-                        message=i18n("%1 gives channel halfop privileges to %2.").tqarg(sourceNick).tqarg(parameter);
+                        message=i18n("%1 gives channel halfop privileges to %2.").arg(sourceNick).arg(parameter);
                 }
             }
             else
@@ -1745,14 +1745,14 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
                     if(toMe)
                         message=i18n("You take channel halfop privileges from yourself.");
                     else
-                        message=i18n("You take channel halfop privileges from %1.").tqarg(parameter);
+                        message=i18n("You take channel halfop privileges from %1.").arg(parameter);
                 }
                 else
                 {
                     if(toMe)
-                        message=i18n("%1 takes channel halfop privileges from you.").tqarg(sourceNick);
+                        message=i18n("%1 takes channel halfop privileges from you.").arg(sourceNick);
                     else
-                        message=i18n("%1 takes channel halfop privileges from %2.").tqarg(sourceNick).tqarg(parameter);
+                        message=i18n("%1 takes channel halfop privileges from %2.").arg(sourceNick).arg(parameter);
                 }
             }
             if(parameterChannelNick)
@@ -1771,12 +1771,12 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
                 if(fromMe)
                 {
                     if(toMe) message=i18n("You give yourself permission to talk.");
-                    else     message=i18n("You give %1  permission to talk.").tqarg(parameter);
+                    else     message=i18n("You give %1  permission to talk.").arg(parameter);
                 }
                 else
                 {
-                    if(toMe) message=i18n("%1 gives you permission to talk.").tqarg(sourceNick);
-                    else     message=i18n("%1 gives %2 permission to talk.").tqarg(sourceNick).tqarg(parameter);
+                    if(toMe) message=i18n("%1 gives you permission to talk.").arg(sourceNick);
+                    else     message=i18n("%1 gives %2 permission to talk.").arg(sourceNick).arg(parameter);
                 }
             }
             else
@@ -1784,12 +1784,12 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
                 if(fromMe)
                 {
                     if(toMe) message=i18n("You take the permission to talk from yourself.");
-                    else     message=i18n("You take the permission to talk from %1.").tqarg(parameter);
+                    else     message=i18n("You take the permission to talk from %1.").arg(parameter);
                 }
                 else
                 {
-                    if(toMe) message=i18n("%1 takes the permission to talk from you.").tqarg(sourceNick);
-                    else     message=i18n("%1 takes the permission to talk from %2.").tqarg(sourceNick).tqarg(parameter);
+                    if(toMe) message=i18n("%1 takes the permission to talk from you.").arg(sourceNick);
+                    else     message=i18n("%1 takes the permission to talk from %2.").arg(sourceNick).arg(parameter);
                 }
             }
             if(parameterChannelNick)
@@ -1803,12 +1803,12 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
             if(plus)
             {
                 if(fromMe) message=i18n("You set the channel mode to 'no colors allowed'.");
-                else message=i18n("%1 sets the channel mode to 'no colors allowed'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'no colors allowed'.").arg(sourceNick);
             }
             else
             {
                 if(fromMe) message=i18n("You set the channel mode to 'allow color codes'.");
-                else message=i18n("%1 sets the channel mode to 'allow color codes'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'allow color codes'.").arg(sourceNick);
             }
             break;
 
@@ -1816,12 +1816,12 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
             if(plus)
             {
                 if(fromMe) message=i18n("You set the channel mode to 'invite only'.");
-                else message=i18n("%1 sets the channel mode to 'invite only'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'invite only'.").arg(sourceNick);
             }
             else
             {
                 if(fromMe) message=i18n("You remove the 'invite only' mode from the channel.");
-                else message=i18n("%1 removes the 'invite only' mode from the channel.").tqarg(sourceNick);
+                else message=i18n("%1 removes the 'invite only' mode from the channel.").arg(sourceNick);
             }
             modeI->setDown(plus);
             break;
@@ -1830,12 +1830,12 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
             if(plus)
             {
                 if(fromMe) message=i18n("You set the channel mode to 'moderated'.");
-                else message=i18n("%1 sets the channel mode to 'moderated'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'moderated'.").arg(sourceNick);
             }
             else
             {
                 if(fromMe) message=i18n("You set the channel mode to 'unmoderated'.");
-                else message=i18n("%1 sets the channel mode to 'unmoderated'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'unmoderated'.").arg(sourceNick);
             }
             modeM->setDown(plus);
             break;
@@ -1844,12 +1844,12 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
             if(plus)
             {
                 if(fromMe) message=i18n("You set the channel mode to 'no messages from outside'.");
-                else message=i18n("%1 sets the channel mode to 'no messages from outside'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'no messages from outside'.").arg(sourceNick);
             }
             else
             {
                 if(fromMe) message=i18n("You set the channel mode to 'allow messages from outside'.");
-                else message=i18n("%1 sets the channel mode to 'allow messages from outside'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'allow messages from outside'.").arg(sourceNick);
             }
             modeN->setDown(plus);
             break;
@@ -1858,12 +1858,12 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
             if(plus)
             {
                 if(fromMe) message=i18n("You set the channel mode to 'private'.");
-                else message=i18n("%1 sets the channel mode to 'private'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'private'.").arg(sourceNick);
             }
             else
             {
                 if(fromMe) message=i18n("You set the channel mode to 'public'.");
-                else message=i18n("%1 sets the channel mode to 'public'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'public'.").arg(sourceNick);
             }
             modeP->setDown(plus);
             if(plus) modeS->setDown(false);
@@ -1873,12 +1873,12 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
             if(plus)
             {
                 if(fromMe) message=i18n("You set the channel mode to 'secret'.");
-                else message=i18n("%1 sets the channel mode to 'secret'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'secret'.").arg(sourceNick);
             }
             else
             {
                 if(fromMe) message=i18n("You set the channel mode to 'visible'.");
-                else message=i18n("%1 sets the channel mode to 'visible'.").tqarg(sourceNick);
+                else message=i18n("%1 sets the channel mode to 'visible'.").arg(sourceNick);
             }
             modeS->setDown(plus);
             if(plus) modeP->setDown(false);
@@ -1890,12 +1890,12 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
             if(plus)
             {
                 if(fromMe) message=i18n("You switch on 'topic protection'.");
-                else message=i18n("%1 switches on 'topic protection'.").tqarg(sourceNick);
+                else message=i18n("%1 switches on 'topic protection'.").arg(sourceNick);
             }
             else
             {
                 if(fromMe) message=i18n("You switch off 'topic protection'.");
-                else message=i18n("%1 switches off 'topic protection'.").tqarg(sourceNick);
+                else message=i18n("%1 switches off 'topic protection'.").arg(sourceNick);
             }
             modeT->setDown(plus);
             break;
@@ -1903,13 +1903,13 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
         case 'k':
             if(plus)
             {
-                if(fromMe) message=i18n("You set the channel key to '%1'.").tqarg(parameter);
-                else message=i18n("%1 sets the channel key to '%2'.").tqarg(sourceNick).tqarg(parameter);
+                if(fromMe) message=i18n("You set the channel key to '%1'.").arg(parameter);
+                else message=i18n("%1 sets the channel key to '%2'.").arg(sourceNick).arg(parameter);
             }
             else
             {
                 if(fromMe) message=i18n("You remove the channel key.");
-                else message=i18n("%1 removes the channel key.").tqarg(sourceNick);
+                else message=i18n("%1 removes the channel key.").arg(sourceNick);
             }
             modeK->setDown(plus);
             break;
@@ -1917,13 +1917,13 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
         case 'l':
             if(plus)
             {
-                if(fromMe) message=i18n("You set the channel limit to %1 nicks.").tqarg(parameter);
-                else message=i18n("%1 sets the channel limit to %2 nicks.").tqarg(sourceNick).tqarg(parameter);
+                if(fromMe) message=i18n("You set the channel limit to %1 nicks.").arg(parameter);
+                else message=i18n("%1 sets the channel limit to %2 nicks.").arg(sourceNick).arg(parameter);
             }
             else
             {
                 if(fromMe) message=i18n("You remove the channel limit.");
-                else message=i18n("%1 removes the channel limit.").tqarg(sourceNick);
+                else message=i18n("%1 removes the channel limit.").arg(sourceNick);
             }
             modeL->setDown(plus);
             if(plus) limit->setText(parameter);
@@ -1933,51 +1933,51 @@ void Channel::updateMode(const TQString& sourceNick, char mode, bool plus, const
         case 'b':
             if(plus)
             {
-                if(fromMe) message=i18n("You set a ban on %1.").tqarg(parameter);
-                else message=i18n("%1 sets a ban on %2.").tqarg(sourceNick).tqarg(parameter);
+                if(fromMe) message=i18n("You set a ban on %1.").arg(parameter);
+                else message=i18n("%1 sets a ban on %2.").arg(sourceNick).arg(parameter);
             }
             else
             {
-                if(fromMe) message=i18n("You remove the ban on %1.").tqarg(parameter);
-                else message=i18n("%1 removes the ban on %2.").tqarg(sourceNick).tqarg(parameter);
+                if(fromMe) message=i18n("You remove the ban on %1.").arg(parameter);
+                else message=i18n("%1 removes the ban on %2.").arg(sourceNick).arg(parameter);
             }
             break;
 
         case 'e':
             if(plus)
             {
-                if(fromMe) message=i18n("You set a ban exception on %1.").tqarg(parameter);
-                else message=i18n("%1 sets a ban exception on %2.").tqarg(sourceNick).tqarg(parameter);
+                if(fromMe) message=i18n("You set a ban exception on %1.").arg(parameter);
+                else message=i18n("%1 sets a ban exception on %2.").arg(sourceNick).arg(parameter);
             }
             else
             {
-                if(fromMe) message=i18n("You remove the ban exception on %1.").tqarg(parameter);
-                else message=i18n("%1 removes the ban exception on %2.").tqarg(sourceNick).tqarg(parameter);
+                if(fromMe) message=i18n("You remove the ban exception on %1.").arg(parameter);
+                else message=i18n("%1 removes the ban exception on %2.").arg(sourceNick).arg(parameter);
             }
             break;
 
         case 'I':
             if(plus)
             {
-                if(fromMe) message=i18n("You set invitation mask %1.").tqarg(parameter);
-                else message=i18n("%1 sets invitation mask %2.").tqarg(sourceNick).tqarg(parameter);
+                if(fromMe) message=i18n("You set invitation mask %1.").arg(parameter);
+                else message=i18n("%1 sets invitation mask %2.").arg(sourceNick).arg(parameter);
             }
             else
             {
-                if(fromMe) message=i18n("You remove the invitation mask %1.").tqarg(parameter);
-                else message=i18n("%1 removes the invitation mask %2.").tqarg(sourceNick).tqarg(parameter);
+                if(fromMe) message=i18n("You remove the invitation mask %1.").arg(parameter);
+                else message=i18n("%1 removes the invitation mask %2.").arg(sourceNick).arg(parameter);
             }
             break;
         default:
 	    if(plus)
 	    {
-	        if(fromMe) message=i18n("You set channel mode +%1").tqarg(mode);
-		else message=i18n("%1 sets channel mode +%2").tqarg(sourceNick).tqarg(mode);
+	        if(fromMe) message=i18n("You set channel mode +%1").arg(mode);
+		else message=i18n("%1 sets channel mode +%2").arg(sourceNick).arg(mode);
 	    }
 	    else
 	    {
-	        if (fromMe) message=i18n("You set channel mode -%1").tqarg(mode);
-		else message= i18n("%1 sets channel mode -%2").tqarg(sourceNick).tqarg(mode);
+	        if (fromMe) message=i18n("You set channel mode -%1").arg(mode);
+		else message= i18n("%1 sets channel mode -%2").arg(sourceNick).arg(mode);
 	    }
     }
 
@@ -2067,7 +2067,7 @@ void Channel::updateModeWidgets(char mode, bool plus, const TQString &parameter)
     }
     else
     {
-        TQStringList removable = m_modeList.grep(TQRegExp(TQString("^%1.*").tqarg(mode)));
+        TQStringList removable = m_modeList.grep(TQRegExp(TQString("^%1.*").arg(mode)));
 
         for(TQStringList::iterator it = removable.begin(); it != removable.end(); ++it)
         {
@@ -2393,12 +2393,12 @@ void Channel::refreshModeButtons()
     TQString opOnly;
     if(!enable) opOnly = i18n("You have to be an operator to change this.");
 
-    TQToolTip::add(modeT, i18n("Topic can be changed by channel operator only.  %1").tqarg(opOnly));
-    TQToolTip::add(modeN, i18n("No messages to channel from clients on the outside.  %1").tqarg(opOnly));
-    TQToolTip::add(modeS, i18n("Secret channel.  %1").tqarg(opOnly));
-    TQToolTip::add(modeI, i18n("Invite only channel.  %1").tqarg(opOnly));
-    TQToolTip::add(modeP, i18n("Private channel.  %1").tqarg(opOnly));
-    TQToolTip::add(modeM, i18n("Moderated channel.  %1").tqarg(opOnly));
+    TQToolTip::add(modeT, i18n("Topic can be changed by channel operator only.  %1").arg(opOnly));
+    TQToolTip::add(modeN, i18n("No messages to channel from clients on the outside.  %1").arg(opOnly));
+    TQToolTip::add(modeS, i18n("Secret channel.  %1").arg(opOnly));
+    TQToolTip::add(modeI, i18n("Invite only channel.  %1").arg(opOnly));
+    TQToolTip::add(modeP, i18n("Private channel.  %1").arg(opOnly));
+    TQToolTip::add(modeM, i18n("Moderated channel.  %1").arg(opOnly));
     TQToolTip::add(modeK, i18n("Protect channel with a password."));
     TQToolTip::add(modeL, i18n("Set user limit to channel."));
 
@@ -2538,7 +2538,7 @@ bool Channel::closeYourself(bool confirm)
 {
     int result=KMessageBox::Continue;
     if (confirm)
-        result = KMessageBox::warningContinueCancel(this, i18n("Do you want to leave %1?").tqarg(getName()),
+        result = KMessageBox::warningContinueCancel(this, i18n("Do you want to leave %1?").arg(getName()),
             i18n("Leave Channel"), i18n("Leave"), "QuitChannelTab");
 
     if (result==KMessageBox::Continue)
@@ -2668,7 +2668,7 @@ TQString Channel::getChannelEncoding() // virtual
 
 TQString Channel::getChannelEncodingDefaultDesc()  // virtual
 {
-    return i18n("Identity Default ( %1 )").tqarg(getServer()->getIdentity()->getCodecName());
+    return i18n("Identity Default ( %1 )").arg(getServer()->getIdentity()->getCodecName());
 }
 
 void Channel::showNicknameBox(bool show)
diff --git a/konversation/src/channellistpanel.cpp b/konversation/src/channellistpanel.cpp
index 79a9168..165a177 100644
--- a/konversation/src/channellistpanel.cpp
+++ b/konversation/src/channellistpanel.cpp
@@ -222,8 +222,8 @@ void ChannelListPanel::saveList()
         TQTextStream stream(&listFile);
 
         TQString header(i18n("Konversation Channel List: %1 - %2\n\n")
-            .tqarg(m_server->getServerName())
-            .tqarg(TQDateTime::currentDateTime().toString()));
+            .arg(m_server->getServerName())
+            .arg(TQDateTime::currentDateTime().toString()));
 
         // send header to stream
         stream << header;
@@ -483,8 +483,8 @@ void ChannelListPanel::applyFilterClicked()
 
 void ChannelListPanel::updateUsersChannels()
 {
-    emit updateNumChannels(i18n("Channels: %1 (%2 shown)").tqarg(getNumChannels()).tqarg(getVisibleChannels()));
-    emit updateNumUsers(i18n("Non-unique users: %1 (%2 shown)").tqarg(getNumUsers()).tqarg(getVisibleUsers()));
+    emit updateNumChannels(i18n("Channels: %1 (%2 shown)").arg(getNumChannels()).arg(getVisibleChannels()));
+    emit updateNumUsers(i18n("Non-unique users: %1 (%2 shown)").arg(getNumUsers()).arg(getVisibleUsers()));
 }
 
 bool ChannelListPanel::closeYourself()
@@ -585,7 +585,7 @@ void ChannelListPanel::serverOnline(bool online)
 void ChannelListPanel::emitUpdateInfo()
 {
     TQString info;
-    info = i18n("Channel List for %1").tqarg(m_server->getDisplayName());
+    info = i18n("Channel List for %1").arg(m_server->getDisplayName());
     emit updateInfo(info);
 }
 
diff --git a/konversation/src/channeloptionsdialog.cpp b/konversation/src/channeloptionsdialog.cpp
index 27e5f7f..7cb34cd 100644
--- a/konversation/src/channeloptionsdialog.cpp
+++ b/konversation/src/channeloptionsdialog.cpp
@@ -35,7 +35,7 @@ namespace Konversation
 {
 
     ChannelOptionsDialog::ChannelOptionsDialog(Channel *channel)
-        : KDialogBase(channel, "channelOptions", false, i18n("Channel Settings for %1").tqarg(channel->getName()), Ok|Cancel, Ok)
+        : KDialogBase(channel, "channelOptions", false, i18n("Channel Settings for %1").arg(channel->getName()), Ok|Cancel, Ok)
     {
         Q_ASSERT(channel);
         m_widget = new ChannelOptionsUI(this);
@@ -124,16 +124,16 @@ namespace Konversation
 
             if(tmp.isEmpty() && plus)
             {
-                m_channel->getServer()->queue(command.tqarg(m_channel->getName()).tqarg("+").tqarg(modeString[0]).tqarg(modeString.mid(1)));
+                m_channel->getServer()->queue(command.arg(m_channel->getName()).arg("+").arg(modeString[0]).arg(modeString.mid(1)));
             }
             else if(!tmp.isEmpty() && !plus)
             {
                 //FIXME: Bahamuth requires the key parameter for -k, but ircd breaks on -l with limit number.
                 //Hence two versions of this.
                 if (modeString[0] == 'k')
-                    m_channel->getServer()->queue(command.tqarg(m_channel->getName()).tqarg("-").tqarg(modeString[0]).tqarg(modeString.mid(1)));
+                    m_channel->getServer()->queue(command.arg(m_channel->getName()).arg("-").arg(modeString[0]).arg(modeString.mid(1)));
                 else
-                    m_channel->getServer()->queue(command.tqarg(m_channel->getName()).tqarg("-").tqarg(modeString[0]).tqarg(""));
+                    m_channel->getServer()->queue(command.arg(m_channel->getName()).arg("-").arg(modeString[0]).arg(""));
             }
         }
         hide();
diff --git a/konversation/src/chatwindow.cpp b/konversation/src/chatwindow.cpp
index 9e37d92..ab7c6ad 100644
--- a/konversation/src/chatwindow.cpp
+++ b/konversation/src/chatwindow.cpp
@@ -247,9 +247,9 @@ void ChatWindow::setLogfileName(const TQString& name)
                 TQStringList firstColumns;
                 TQStringList messages;
                 int offset = 0;
-                unsigned int lastPacketHeadPosition = backlog.tqdevice()->size();
+                unsigned int lastPacketHeadPosition = backlog.device()->size();
                 const unsigned int packetSize = 4096;
-                while(messages.count() < (unsigned int)Preferences::backlogLines() && backlog.tqdevice()->size() > packetSize * offset)
+                while(messages.count() < (unsigned int)Preferences::backlogLines() && backlog.device()->size() > packetSize * offset)
                 {
                     TQStringList firstColumnsInPacket;
                     TQStringList messagesInPacket;
@@ -257,30 +257,30 @@ void ChatWindow::setLogfileName(const TQString& name)
                     // packetSize * offset < size <= packetSize * ( offset + 1 )
 
                     // Check if the log is bigger than packetSize * ( offset + 1 )
-                    if(backlog.tqdevice()->size() > packetSize * ( offset + 1 ))
+                    if(backlog.device()->size() > packetSize * ( offset + 1 ))
                     {
                         // Set file pointer to the packet size above the offset
-                        backlog.tqdevice()->at(backlog.tqdevice()->size() - packetSize * ( offset + 1 ));
+                        backlog.device()->at(backlog.device()->size() - packetSize * ( offset + 1 ));
                         // Skip first line, since it may be incomplete
                         backlog.readLine();
                     }
                     else
                     {
                         // Set file pointer to the head
-                        backlog.tqdevice()->reset();
+                        backlog.device()->reset();
                     }
 
-                    unsigned int currentPacketHeadPosition = backlog.tqdevice()->at();
+                    unsigned int currentPacketHeadPosition = backlog.device()->at();
 
                     // Loop until end of file reached
-                    while(!backlog.atEnd() && backlog.tqdevice()->at() < lastPacketHeadPosition)
+                    while(!backlog.atEnd() && backlog.device()->at() < lastPacketHeadPosition)
                     {
                         // remember actual file position to check for deadlocks
-                        filePosition = backlog.tqdevice()->at();
+                        filePosition = backlog.device()->at();
                         backlogLine = backlog.readLine();
 
                         // check for deadlocks
-                        if(backlog.tqdevice()->at() == filePosition) backlog.tqdevice()->at(filePosition + 1);
+                        if(backlog.device()->at() == filePosition) backlog.device()->at(filePosition + 1);
 
                         // if a tab character is present in the line
                         if(backlogLine.find('\t') != -1)
@@ -343,14 +343,14 @@ void ChatWindow::logText(const TQString& text)
 
             if(firstLog)
             {
-                TQString intro(i18n("\n*** Logfile started\n*** on %1\n\n").tqarg(TQDateTime::currentDateTime().toString()));
+                TQString intro(i18n("\n*** Logfile started\n*** on %1\n\n").arg(TQDateTime::currentDateTime().toString()));
                 logStream << intro;
                 firstLog=false;
             }
 
             TQTime time=TQTime::currentTime();
-            TQString logLine(TQString("[%1] [%2] %3\n").tqarg(TQDate::currentDate(Qt::LocalTime).toString()).
-                tqarg(time.toString("hh:mm:ss")).tqarg(text));
+            TQString logLine(TQString("[%1] [%2] %3\n").arg(TQDate::currentDate(Qt::LocalTime).toString()).
+                arg(time.toString("hh:mm:ss")).arg(text));
 
             logStream << logLine;
 
diff --git a/konversation/src/chatwindow.h b/konversation/src/chatwindow.h
index d77f5d1..840a815 100644
--- a/konversation/src/chatwindow.h
+++ b/konversation/src/chatwindow.h
@@ -165,7 +165,7 @@ class ChatWindow : public TQVBox
 
     protected:
 
-        /** Some tqchildren may handle the name themselves, and not want this public.
+        /** Some children may handle the name themselves, and not want this public.
          *  Increase the visibility in the subclass if you want outsiders to call this.
          *  The name is the string that is shown in the tab.
          *  @param newName The name to show in the tab
diff --git a/konversation/src/common.cpp b/konversation/src/common.cpp
index eba7508..d3449fc 100644
--- a/konversation/src/common.cpp
+++ b/konversation/src/common.cpp
@@ -78,7 +78,7 @@ namespace Konversation
                 pos += chanExp.cap(1).length();
 
                 // HACK:Use space as a placeholder for \ as TQt tries to be clever and does a replace to / in urls in TQTextEdit
-                insertText = link.tqarg(TQString(href).replace('\\', " "), href);
+                insertText = link.arg(TQString(href).replace('\\', " "), href);
                 filteredLine.replace(pos, urlLen, insertText);
                 pos += insertText.length();
             }
@@ -151,7 +151,7 @@ namespace Konversation
 
             // Use \x0b as a placeholder for & so we can readd them after changing all & in the normal text to &amp;
             // HACK Replace % with \x03 in the url to keep TQt from doing stupid things
-            insertText = link.tqarg(protocol, TQString(href).replace('&', "\x0b").replace('%', "\x03"), href) + append;
+            insertText = link.arg(protocol, TQString(href).replace('&', "\x0b").replace('%', "\x03"), href) + append;
             filteredLine.replace(pos, urlLen, insertText);
             pos += insertText.length();
             KonversationApplication::instance()->storeUrl(fromNick, href);
diff --git a/konversation/src/connectionmanager.cpp b/konversation/src/connectionmanager.cpp
index 763f191..294adec 100644
--- a/konversation/src/connectionmanager.cpp
+++ b/konversation/src/connectionmanager.cpp
@@ -203,15 +203,15 @@ void ConnectionManager::handleReconnect(Server* server)
 
             server->getStatusView()->appendServerMessage(i18n("Info"),
                 i18n("Trying to connect to %1 in %2 seconds.")
-                .tqarg(settings.server().host())
-                .tqarg(Preferences::reconnectDelay()));
+                .arg(settings.server().host())
+                .arg(Preferences::reconnectDelay()));
         }
         else
         {
             server->getStatusView()->appendServerMessage(i18n("Info"),
                 i18n("Trying to reconnect to %1 in %2 seconds.")
-                .tqarg(settings.server().host())
-                .tqarg(Preferences::reconnectDelay()));
+                .arg(settings.server().host())
+                .arg(Preferences::reconnectDelay()));
         }
 
         server->getConnectionSettings().incrementReconnectCount();
@@ -437,8 +437,8 @@ bool ConnectionManager::reuseExistingConnection(ConnectionSettings& settings, bo
         int result = KMessageBox::warningContinueCancel(
             mainWindow,
             i18n("You are already connected to %1. Do you want to open another connection?")
-                .tqarg(dupe->getDisplayName()),
-            i18n("Already connected to %1").tqarg(dupe->getDisplayName()),
+                .arg(dupe->getDisplayName()),
+            i18n("Already connected to %1").arg(dupe->getDisplayName()),
             i18n("Create connection"),
             "ReuseExistingConnection");
 
@@ -453,12 +453,12 @@ bool ConnectionManager::reuseExistingConnection(ConnectionSettings& settings, bo
             int result = KMessageBox::warningContinueCancel(
                 mainWindow,
                 i18n("You are presently connected to %1 via '%2' (port %3). Do you want to switch to '%4' (port %5) instead?")
-                    .tqarg(dupe->getDisplayName())
-                    .tqarg(dupe->getServerName())
-                    .tqarg(dupe->getPort())
-                    .tqarg(settings.server().host())
-                    .tqarg(settings.server().port()),
-                i18n("Already connected to %1").tqarg(dupe->getDisplayName()),
+                    .arg(dupe->getDisplayName())
+                    .arg(dupe->getServerName())
+                    .arg(dupe->getPort())
+                    .arg(settings.server().host())
+                    .arg(settings.server().port()),
+                i18n("Already connected to %1").arg(dupe->getDisplayName()),
                 i18n("Switch Server"),
                 "ReconnectWithDifferentServer");
 
@@ -513,7 +513,7 @@ bool ConnectionManager::validateIdentity(IdentityPtr identity, bool interactive)
         {
             int result = KMessageBox::warningContinueCancel(mainWindow,
                             i18n("<qt>Your identity \"%1\" is not set up correctly:<br>%2</qt>")
-                                .tqarg(identity->getName()).tqarg(errors),
+                                .arg(identity->getName()).arg(errors),
                             i18n("Identity Settings"),
                             i18n("Edit Identity..."));
 
diff --git a/konversation/src/dcc_preferencesui.ui b/konversation/src/dcc_preferencesui.ui
index ccff213..a1a4da2 100644
--- a/konversation/src/dcc_preferencesui.ui
+++ b/konversation/src/dcc_preferencesui.ui
@@ -360,7 +360,7 @@ the Free Software Foundation; either version 2 of the License, or
                     <property name="text">
                         <string>to</string>
                     </property>
-                    <property name="tqalignment">
+                    <property name="alignment">
                         <set>AlignCenter</set>
                     </property>
                 </widget>
@@ -427,7 +427,7 @@ the Free Software Foundation; either version 2 of the License, or
                     <property name="text">
                         <string>to</string>
                     </property>
-                    <property name="tqalignment">
+                    <property name="alignment">
                         <set>AlignCenter</set>
                     </property>
                 </widget>
diff --git a/konversation/src/dccchat.cpp b/konversation/src/dccchat.cpp
index f40d1ae..15eb235 100644
--- a/konversation/src/dccchat.cpp
+++ b/konversation/src/dccchat.cpp
@@ -134,7 +134,7 @@ void DccChat::listenForPartner()
         m_listenSocket = DccCommon::createServerSocketAndListen( TQT_TQOBJECT(this), &failedReason );
     if ( !m_listenSocket )
     {
-        getTextView()->appendServerMessage( i18n( "DCC" ), i18n( "Could not open a socket for listening: %1" ).tqarg( failedReason ) );
+        getTextView()->appendServerMessage( i18n( "DCC" ), i18n( "Could not open a socket for listening: %1" ).arg( failedReason ) );
         return;
     }
 
@@ -144,8 +144,8 @@ void DccChat::listenForPartner()
     m_ownPort = DccCommon::getServerSocketPort( m_listenSocket );
     kdDebug() << "DccChat::listenForPartner(): using port " << m_ownPort << endl;
 
-    getTextView()->appendServerMessage( i18n("DCC"), i18n("Offering DCC Chat connection to %1 on port %2...").tqarg( m_partnerNick ).tqarg( m_ownPort ) );
-    m_sourceLine->setText(i18n( "DCC chat with %1 on port %2." ).tqarg( m_partnerNick ).tqarg( m_ownPort ) );
+    getTextView()->appendServerMessage( i18n("DCC"), i18n("Offering DCC Chat connection to %1 on port %2...").arg( m_partnerNick ).arg( m_ownPort ) );
+    m_sourceLine->setText(i18n( "DCC chat with %1 on port %2." ).arg( m_partnerNick ).arg( m_ownPort ) );
     kdDebug() << "DccChat::listenForPartner() [END]" << endl;
 }
 
@@ -157,9 +157,9 @@ void DccChat::connectToPartner()
     m_partnerHost=ip.toString();
 
     getTextView()->appendServerMessage( i18n( "DCC" ), i18n( "%1 = nickname, %2 = IP, %3 = port",
-        "Establishing DCC Chat connection to %1 (%2:%3)..." ).tqarg( m_partnerNick ).tqarg( m_partnerHost ).tqarg( m_partnerPort ) );
+        "Establishing DCC Chat connection to %1 (%2:%3)..." ).arg( m_partnerNick ).arg( m_partnerHost ).arg( m_partnerPort ) );
 
-    m_sourceLine->setText( i18n( "%1 = nickname, %2 = IP, %3 = port", "DCC chat with %1 on %2:%3." ).tqarg( m_partnerNick ).tqarg( host ).tqarg( m_partnerPort ) );
+    m_sourceLine->setText( i18n( "%1 = nickname, %2 = IP, %3 = port", "DCC chat with %1 on %2:%3." ).arg( m_partnerNick ).arg( host ).arg( m_partnerPort ) );
 
     m_dccSocket = new KNetwork::KStreamSocket( m_partnerHost, TQString::number( m_partnerPort ), TQT_TQOBJECT(this) );
 
@@ -179,7 +179,7 @@ void DccChat::connectToPartner()
     m_dccSocket->connect();
     
 #if 0
-    //getTextView()->appendServerMessage(i18n("DCC"),i18n("Looking for host %1...").tqarg(host));
+    //getTextView()->appendServerMessage(i18n("DCC"),i18n("Looking for host %1...").arg(host));
 #endif
 
 }
@@ -195,14 +195,14 @@ void DccChat::lookupFinished()
 
 void DccChat::dccChatConnectionSuccess()
 {
-    getTextView()->appendServerMessage( i18n( "DCC" ), i18n( "Established DCC Chat connection to %1." ).tqarg( m_partnerNick ) );
+    getTextView()->appendServerMessage( i18n( "DCC" ), i18n( "Established DCC Chat connection to %1." ).arg( m_partnerNick ) );
     m_dccSocket->enableRead(true);
     m_dccChatInput->setEnabled(true);
 }
 
 void DccChat::dccChatBroken(int error)
 {
-    getTextView()->appendServerMessage(i18n("Error"),i18n("Connection broken, error code %1.").tqarg(error));
+    getTextView()->appendServerMessage(i18n("Error"),i18n("Connection broken, error code %1.").arg(error));
     m_dccSocket->enableRead(false);
     m_dccSocket->blockSignals(true);
     m_dccSocket->close();
@@ -241,7 +241,7 @@ void DccChat::readData()
                 if( ctcpCommand.lower() == "action" )
                     appendAction( m_partnerNick, ctcpArgument );
                 else
-                    getTextView()->appendServerMessage( i18n( "CTCP" ), i18n( "Received unknown CTCP-%1 request from %2" ).tqarg( ctcp ).tqarg( m_partnerNick ) );
+                    getTextView()->appendServerMessage( i18n( "CTCP" ), i18n( "Received unknown CTCP-%1 request from %2" ).arg( ctcp ).arg( m_partnerNick ) );
             }
             else getTextView()->append( m_partnerNick, *itLine );
         }                                         // endfor
@@ -295,7 +295,7 @@ void DccChat::sendDccChatText(const TQString& sendLine)
             if (cmd == cc+"me")
             {
                 appendAction( m_ownNick, line.section( " ", 1 ) );
-                line=TQString("\x01%1 %2\x01").tqarg("ACTION").tqarg(line.section(" ",1));
+                line=TQString("\x01%1 %2\x01").arg("ACTION").arg(line.section(" ",1));
             }
             else if (cmd == cc+"close")
             {
@@ -336,7 +336,7 @@ void DccChat::heardPartner()
     m_dccSocket->enableRead(true);
     m_dccChatInput->setEnabled(true);
 
-    getTextView()->appendServerMessage( i18n( "DCC" ), i18n( "Established DCC Chat connection to %1." ).tqarg( m_partnerNick ) );
+    getTextView()->appendServerMessage( i18n( "DCC" ), i18n( "Established DCC Chat connection to %1." ).arg( m_partnerNick ) );
 }
 
 void DccChat::socketClosed()
@@ -410,7 +410,7 @@ TQString DccChat::getChannelEncoding() // virtual
 
 TQString DccChat::getChannelEncodingDefaultDesc()  // virtual
 {
-    return i18n("Default ( %1 )").tqarg(Konversation::IRCCharsets::self()->encodingForLocale());
+    return i18n("Default ( %1 )").arg(Konversation::IRCCharsets::self()->encodingForLocale());
 }
 
 void DccChat::showEvent(TQShowEvent* /* event */)
diff --git a/konversation/src/dcctransferdetailedinfopanel.cpp b/konversation/src/dcctransferdetailedinfopanel.cpp
index 6bd6961..8aec7d0 100644
--- a/konversation/src/dcctransferdetailedinfopanel.cpp
+++ b/konversation/src/dcctransferdetailedinfopanel.cpp
@@ -98,17 +98,17 @@ void DccTransferDetailedInfoPanel::updateView()
     else
         partnerInfoServerName = i18n( "Unknown server" );
     TQString partnerInfo( i18n( "%1 on %2" )
-        .tqarg( transfer->getPartnerNick().isEmpty() ? "?" : transfer->getPartnerNick() )
-        .tqarg( partnerInfoServerName ) );
+        .arg( transfer->getPartnerNick().isEmpty() ? "?" : transfer->getPartnerNick() )
+        .arg( partnerInfoServerName ) );
     if ( !transfer->getPartnerIp().isEmpty() )
-        partnerInfo += i18n( ", %1 (port %2)" ).tqarg( transfer->getPartnerIp() ).tqarg( transfer->getPartnerPort() );
+        partnerInfo += i18n( ", %1 (port %2)" ).arg( transfer->getPartnerIp() ).arg( transfer->getPartnerPort() );
     m_labelPartner->setText( partnerInfo );
 
     // Self:
     if ( transfer->getOwnIp().isEmpty() )
         m_labelSelf->setText( "" );
     else
-        m_labelSelf->setText( i18n( "%1 (port %2)" ).tqarg( transfer->getOwnIp() ).tqarg( transfer->getOwnPort() ) );
+        m_labelSelf->setText( i18n( "%1 (port %2)" ).arg( transfer->getOwnIp() ).arg( transfer->getOwnPort() ) );
 
     // Status:
     if ( transfer->getStatus() == DccTransfer::Transferring )
@@ -133,7 +133,7 @@ void DccTransferDetailedInfoPanel::updateView()
 
     // Resumed:
     if ( transfer->isResumed() )
-        m_labelIsResumed->setText( i18n( "Yes, %1" ).tqarg( KGlobal::locale()->formatNumber( transfer->getTransferStartPosition(), 0 ) ) );
+        m_labelIsResumed->setText( i18n( "Yes, %1" ).arg( KGlobal::locale()->formatNumber( transfer->getTransferStartPosition(), 0 ) ) );
     else
         m_labelIsResumed->setText( i18n( "No" ) );
 
diff --git a/konversation/src/dcctransferdetailedinfopanelui.ui b/konversation/src/dcctransferdetailedinfopanelui.ui
index b11b2e1..967b1ae 100644
--- a/konversation/src/dcctransferdetailedinfopanelui.ui
+++ b/konversation/src/dcctransferdetailedinfopanelui.ui
@@ -194,7 +194,7 @@
                                     <height>0</height>
                                 </size>
                             </property>
-                            <property name="tqalignment">
+                            <property name="alignment">
                                 <set>AlignVCenter|AlignRight</set>
                             </property>
                         </widget>
@@ -224,7 +224,7 @@
                                     <height>0</height>
                                 </size>
                             </property>
-                            <property name="tqalignment">
+                            <property name="alignment">
                                 <set>AlignVCenter|AlignRight</set>
                             </property>
                         </widget>
@@ -246,7 +246,7 @@
                                     <height>0</height>
                                 </size>
                             </property>
-                            <property name="tqalignment">
+                            <property name="alignment">
                                 <set>AlignVCenter|AlignRight</set>
                             </property>
                         </widget>
@@ -284,7 +284,7 @@
                                     <height>0</height>
                                 </size>
                             </property>
-                            <property name="tqalignment">
+                            <property name="alignment">
                                 <set>AlignVCenter|AlignRight</set>
                             </property>
                         </widget>
@@ -322,7 +322,7 @@
                                     <height>0</height>
                                 </size>
                             </property>
-                            <property name="tqalignment">
+                            <property name="alignment">
                                 <set>AlignVCenter|AlignRight</set>
                             </property>
                         </widget>
@@ -370,7 +370,7 @@
                             <property name="name">
                                 <cstring>m_labelTimeFinished</cstring>
                             </property>
-                            <property name="tqalignment">
+                            <property name="alignment">
                                 <set>AlignVCenter|AlignRight</set>
                             </property>
                         </widget>
@@ -392,7 +392,7 @@
                                     <height>0</height>
                                 </size>
                             </property>
-                            <property name="tqalignment">
+                            <property name="alignment">
                                 <set>AlignVCenter|AlignRight</set>
                             </property>
                         </widget>
@@ -430,7 +430,7 @@
                                     <height>0</height>
                                 </size>
                             </property>
-                            <property name="tqalignment">
+                            <property name="alignment">
                                 <set>AlignVCenter|AlignRight</set>
                             </property>
                         </widget>
@@ -438,7 +438,7 @@
                             <property name="name">
                                 <cstring>m_labelTimeOffered</cstring>
                             </property>
-                            <property name="tqalignment">
+                            <property name="alignment">
                                 <set>AlignVCenter|AlignRight</set>
                             </property>
                         </widget>
@@ -454,7 +454,7 @@
                             <property name="name">
                                 <cstring>m_labelTimeStarted</cstring>
                             </property>
-                            <property name="tqalignment">
+                            <property name="alignment">
                                 <set>AlignVCenter|AlignRight</set>
                             </property>
                         </widget>
diff --git a/konversation/src/dcctransferpanelitem.cpp b/konversation/src/dcctransferpanelitem.cpp
index d2cb9ee..e0ebc49 100644
--- a/konversation/src/dcctransferpanelitem.cpp
+++ b/konversation/src/dcctransferpanelitem.cpp
@@ -156,9 +156,9 @@ void DccTransferPanelItem::stopAutoViewUpdate()
     }
 }
 
-void DccTransferPanelItem::paintCell( TQPainter* painter, const TQColorGroup& colorgroup, int column, int width, int tqalignment ) // virtual public
+void DccTransferPanelItem::paintCell( TQPainter* painter, const TQColorGroup& colorgroup, int column, int width, int alignment ) // virtual public
 {
-    KListViewItem::paintCell( painter, colorgroup, column, width, tqalignment );
+    KListViewItem::paintCell( painter, colorgroup, column, width, alignment );
     if ( column == DccTransferPanel::Column::Progress )
         showProgressBar();
 }
@@ -229,7 +229,7 @@ void DccTransferPanelItem::openFileInfoDialog()
                 #ifdef USE_INFOLIST
                 KMessageBox::informationList(
                     listView(),
-                    i18n("Available information for file %1:").tqarg(path),
+                    i18n("Available information for file %1:").arg(path),
                     infoList,
                     i18n("File Information")
                     );
@@ -372,9 +372,9 @@ TQString DccTransferPanelItem::getCurrentSpeedPrettyText() const
 TQString DccTransferPanelItem::getSenderAddressPrettyText() const
 {
     if ( m_transfer->getType() == DccTransfer::Send )
-        return TQString( "%1:%2" ).tqarg( m_transfer->getOwnIp() ).tqarg( m_transfer->getOwnPort() );
+        return TQString( "%1:%2" ).arg( m_transfer->getOwnIp() ).arg( m_transfer->getOwnPort() );
     else
-        return TQString( "%1:%2" ).tqarg( m_transfer->getPartnerIp() ).tqarg( m_transfer->getPartnerPort() );
+        return TQString( "%1:%2" ).arg( m_transfer->getPartnerIp() ).arg( m_transfer->getPartnerPort() );
 }
 
 TQString DccTransferPanelItem::getSpeedPrettyText( transferspeed_t speed )
@@ -384,7 +384,7 @@ TQString DccTransferPanelItem::getSpeedPrettyText( transferspeed_t speed )
     else if ( speed == DccTransfer::NotInTransfer )
         return TQString();
     else
-        return i18n("%1/sec").tqarg( KIO::convertSize( (KIO::fileoffset_t)speed ) );
+        return i18n("%1/sec").arg( KIO::convertSize( (KIO::fileoffset_t)speed ) );
 }
 
 TQString DccTransferPanelItem::secToHMS( long sec )
@@ -395,9 +395,9 @@ TQString DccTransferPanelItem::secToHMS( long sec )
 
         // remHour can be more than 25, so we can't use TQTime here.
         return TQString( "%1:%2:%3" )
-            .tqarg( TQString::number( remHour ).rightJustify( 2, '0', false ) )
-            .tqarg( TQString::number( remMin ).rightJustify( 2, '0' ) )
-            .tqarg( TQString::number( remSec ).rightJustify( 2, '0' ) );
+            .arg( TQString::number( remHour ).rightJustify( 2, '0', false ) )
+            .arg( TQString::number( remMin ).rightJustify( 2, '0' ) )
+            .arg( TQString::number( remSec ).rightJustify( 2, '0' ) );
 }
 
 #include "dcctransferpanelitem.moc"
diff --git a/konversation/src/dcctransferpanelitem.h b/konversation/src/dcctransferpanelitem.h
index eef6305..5a50f61 100644
--- a/konversation/src/dcctransferpanelitem.h
+++ b/konversation/src/dcctransferpanelitem.h
@@ -46,7 +46,7 @@ class DccTransferPanelItem : public TQObject, public KListViewItem
         DccTransferPanelItem( DccTransferPanel* panel, DccTransfer* transfer );
         virtual ~DccTransferPanelItem();
 
-        virtual void paintCell( TQPainter* painter, const TQColorGroup& colorgroup, int column, int width, int tqalignment );
+        virtual void paintCell( TQPainter* painter, const TQColorGroup& colorgroup, int column, int width, int alignment );
 
         virtual int compare( TQListViewItem* i, int col, bool ascending ) const;
 
diff --git a/konversation/src/dcctransferrecv.cpp b/konversation/src/dcctransferrecv.cpp
index 9922bbb..9134a8d 100644
--- a/konversation/src/dcctransferrecv.cpp
+++ b/konversation/src/dcctransferrecv.cpp
@@ -182,7 +182,7 @@ bool DccTransferRecv::queue()
     // check if the sender IP is valid
     if ( m_partnerIp == "0.0.0.0" )
     {
-        failed( i18n( "Invalid sender address (%1)" ).tqarg( m_partnerIp ) );
+        failed( i18n( "Invalid sender address (%1)" ).arg( m_partnerIp ) );
         return false;
     }
 
@@ -270,7 +270,7 @@ void DccTransferRecv::prepareLocalKio( bool overwrite, bool resume, KIO::fileoff
     {
         askAndPrepareLocalKio( i18n( "<b>Cannot create the folder.</b><br>"
             "Folder: %1<br>" )
-            .tqarg( m_fileURL.upURL().prettyURL() ),
+            .arg( m_fileURL.upURL().prettyURL() ),
             DccResumeDialog::RA_Rename | DccResumeDialog::RA_Cancel,
             DccResumeDialog::RA_Rename );
         return;
@@ -352,7 +352,7 @@ void DccTransferRecv::slotLocalCanResume( KIO::Job* job, KIO::filesize_t size )
         {
             askAndPrepareLocalKio( i18n( "<b>The file is used by another transfer.</b><br>"
                 "%1<br>" )
-                .tqarg( m_fileURL.prettyURL() ),
+                .arg( m_fileURL.prettyURL() ),
                 DccResumeDialog::RA_Rename | DccResumeDialog::RA_Cancel,
                 DccResumeDialog::RA_Rename );
         }
@@ -365,8 +365,8 @@ void DccTransferRecv::slotLocalCanResume( KIO::Job* job, KIO::filesize_t size )
             askAndPrepareLocalKio( i18n( "<b>A partial file exists.</b><br>"
                 "%1<br>"
                 "Size of the partial file: %2 bytes<br>" )
-                .tqarg( m_fileURL.prettyURL() )
-                .tqarg( KGlobal::locale()->formatNumber( size, 0 ) ),
+                .arg( m_fileURL.prettyURL() )
+                .arg( KGlobal::locale()->formatNumber( size, 0 ) ),
                 DccResumeDialog::RA_Resume | DccResumeDialog::RA_Overwrite | DccResumeDialog::RA_Rename | DccResumeDialog::RA_Cancel,
                 DccResumeDialog::RA_Resume,
                 size );
@@ -392,7 +392,7 @@ void DccTransferRecv::slotLocalGotResult( KIO::Job* job )
         case KIO::ERR_FILE_ALREADY_EXIST:
             askAndPrepareLocalKio( i18n( "<b>The file already exists.</b><br>"
                 "%1<br>" )
-                .tqarg( m_fileURL.prettyURL() ),
+                .arg( m_fileURL.prettyURL() ),
                 DccResumeDialog::RA_Overwrite | DccResumeDialog::RA_Rename | DccResumeDialog::RA_Cancel,
                 DccResumeDialog::RA_Overwrite );
             break;
@@ -400,8 +400,8 @@ void DccTransferRecv::slotLocalGotResult( KIO::Job* job )
             askAndPrepareLocalKio( i18n( "<b>Could not open the file.<br>"
                 "Error: %1</b><br>"
                 "%2<br>" )
-                .tqarg( transferJob->error() )
-                .tqarg( m_fileURL.prettyURL() ),
+                .arg( transferJob->error() )
+                .arg( m_fileURL.prettyURL() ),
                 DccResumeDialog::RA_Rename | DccResumeDialog::RA_Cancel,
                 DccResumeDialog::RA_Rename );
     }
@@ -564,7 +564,7 @@ void DccTransferRecv::slotServerSocketReadyAccept()
 
 void DccTransferRecv::slotServerSocketGotError( int /* errorCode*/ )
 {
-    failed( i18n( "Socket error: %1" ).tqarg( m_serverSocket->errorString() ) );
+    failed( i18n( "Socket error: %1" ).arg( m_serverSocket->errorString() ) );
 }
 
 void DccTransferRecv::startReceiving()
@@ -591,7 +591,7 @@ void DccTransferRecv::startReceiving()
 void DccTransferRecv::connectionFailed( int errorCode )
 {
     kdDebug() << "DccTransferRecv::connectionFailed(): code = " << errorCode << ", string = " << m_recvSocket->KSocketBase::errorString() << endl;
-    failed( i18n( "Connection failure: %1" ).tqarg( m_recvSocket->KSocketBase::errorString() ) );
+    failed( i18n( "Connection failure: %1" ).arg( m_recvSocket->KSocketBase::errorString() ) );
 }
 
 void DccTransferRecv::readData()                  // slot
@@ -642,7 +642,7 @@ void DccTransferRecv::slotLocalWriteDone()        // <-WriteCacheHandler::done()
 void DccTransferRecv::slotLocalGotWriteError( const TQString& errorString )
 {
     kdDebug() << "DccTransferRecv::slotLocalGotWriteError()" << endl;
-    failed( i18n( "KIO error: %1" ).tqarg( errorString ) );
+    failed( i18n( "KIO error: %1" ).arg( errorString ) );
 }
 
 void DccTransferRecv::startConnectionTimer( int sec )
diff --git a/konversation/src/dcctransfersend.cpp b/konversation/src/dcctransfersend.cpp
index db0bad2..1ed371f 100644
--- a/konversation/src/dcctransfersend.cpp
+++ b/konversation/src/dcctransfersend.cpp
@@ -170,7 +170,7 @@ bool DccTransferSend::queue()
     //Check the file exists
     if ( !KIO::NetAccess::exists( m_fileURL, true, NULL ) )
     {
-        failed( i18n( "The url \"%1\" does not exist" ).tqarg( m_fileURL.prettyURL() ) );
+        failed( i18n( "The url \"%1\" does not exist" ).arg( m_fileURL.prettyURL() ) );
         return false;
     }
 
@@ -178,7 +178,7 @@ bool DccTransferSend::queue()
     //Download the file.  Does nothing if it's local (file:/)
     if ( !KIO::NetAccess::download( m_fileURL, m_tmpFile, NULL ) )
     {
-        failed( i18n( "Could not retrieve \"%1\"" ).tqarg( m_fileURL.prettyURL() ) );
+        failed( i18n( "Could not retrieve \"%1\"" ).arg( m_fileURL.prettyURL() ) );
         kdDebug() << "DccTransferSend::DccTransferSend(): KIO::NetAccess::download() failed. reason: " << KIO::NetAccess::lastErrorString() << endl;
         return false;
     }
@@ -187,7 +187,7 @@ bool DccTransferSend::queue()
     if ( m_fileName.isEmpty() )
     {
         bool pressedOk;
-        m_fileName = KInputDialog::getText( i18n( "Enter Filename" ), i18n( "<qt>The file that you are sending to <i>%1</i> does not have a filename.<br>Please enter a filename to be presented to the receiver, or cancel the dcc transfer</qt>" ).tqarg( getPartnerNick() ), "unknown", &pressedOk, NULL );
+        m_fileName = KInputDialog::getText( i18n( "Enter Filename" ), i18n( "<qt>The file that you are sending to <i>%1</i> does not have a filename.<br>Please enter a filename to be presented to the receiver, or cancel the dcc transfer</qt>" ).arg( getPartnerNick() ), "unknown", &pressedOk, NULL );
 
         if ( !pressedOk )
         {
@@ -365,7 +365,7 @@ void DccTransferSend::startSending()
         startTransferLogger();                      // initialize CPS counter, ETA counter, etc...
     }
     else
-        failed( i18n( "Could not open the file: %1" ).tqarg( getTQFileErrorString( m_file.status() ) ) );
+        failed( i18n( "Could not open the file: %1" ).arg( getTQFileErrorString( m_file.status() ) ) );
 }
 
 void DccTransferSend::writeData()                 // slot
@@ -418,7 +418,7 @@ void DccTransferSend::getAck()                    // slot
 void DccTransferSend::slotGotSocketError( int errorCode )
 {
     kdDebug() << "DccTransferSend::slotGotSocketError(): code =  " << errorCode << " string = " << m_serverSocket->errorString() << endl;
-    failed( i18n( "Socket error: %1" ).tqarg( m_serverSocket->errorString() ) );
+    failed( i18n( "Socket error: %1" ).arg( m_serverSocket->errorString() ) );
 }
 
 void DccTransferSend::startConnectionTimer( int sec )
@@ -445,7 +445,7 @@ void DccTransferSend::slotConnectionTimeout()         // slot
 
 void DccTransferSend::slotConnectionFailed( int /* errorCode */ )
 {
-    failed( i18n( "Connection failure: %1" ).tqarg( m_sendSocket->KSocketBase::errorString() ) );
+    failed( i18n( "Connection failure: %1" ).arg( m_sendSocket->KSocketBase::errorString() ) );
 }
 
 void DccTransferSend::slotServerSocketClosed()
@@ -472,16 +472,16 @@ TQString DccTransferSend::getTQFileErrorString( int code )
             errorString=i18n("The operation was successful. Should never happen in an error dialog.");
             break;
         case IO_ReadError:
-            errorString=i18n("Could not read from file \"%1\".").tqarg( m_fileName );
+            errorString=i18n("Could not read from file \"%1\".").arg( m_fileName );
             break;
         case IO_WriteError:
-            errorString=i18n("Could not write to file \"%1\".").tqarg( m_fileName );
+            errorString=i18n("Could not write to file \"%1\".").arg( m_fileName );
             break;
         case IO_FatalError:
             errorString=i18n("A fatal unrecoverable error occurred.");
             break;
         case IO_OpenError:
-            errorString=i18n("Could not open file \"%1\".").tqarg( m_fileName );
+            errorString=i18n("Could not open file \"%1\".").arg( m_fileName );
             break;
 
             // Same case value? Damn!
@@ -499,7 +499,7 @@ TQString DccTransferSend::getTQFileErrorString( int code )
             errorString=i18n("An unspecified error happened on close.");
             break;
         default:
-            errorString=i18n("Unknown error. Code %1").tqarg(code);
+            errorString=i18n("Unknown error. Code %1").arg(code);
             break;
     }
 
diff --git a/konversation/src/emoticon.cpp b/konversation/src/emoticon.cpp
index c1fe023..96e967f 100644
--- a/konversation/src/emoticon.cpp
+++ b/konversation/src/emoticon.cpp
@@ -159,7 +159,7 @@ namespace Konversation
 
         for(EmotIconMap::iterator it = self()->m_emotIconMap.begin(); it != self()->m_emotIconMap.end(); ++it)
         {
-            TQRegExp regExp(TQString("(^|\\s)%1($|\\s)").tqarg(it.data()));
+            TQRegExp regExp(TQString("(^|\\s)%1($|\\s)").arg(it.data()));
             filteredTxt.replace(regExp, " <img width=\"" + TQString::number(fm.height()) + "\" height=\"" + TQString::number(fm.height())
                 + "\" src=\"" + it.key() + "\" alt=\"" + it.data() + "\">&nbsp;");
         }
diff --git a/konversation/src/highlight_preferences.cpp b/konversation/src/highlight_preferences.cpp
index 3b72fda..c59a545 100644
--- a/konversation/src/highlight_preferences.cpp
+++ b/konversation/src/highlight_preferences.cpp
@@ -228,7 +228,7 @@ void Highlight_Config::highlightColorChanged(const TQColor& newColor)
   if(!newItemSelected && item)
   {
     item->setColor(newColor);
-    item->tqrepaint();
+    item->repaint();
     emit modified();
   }
 }
@@ -327,7 +327,7 @@ void Highlight_Config::saveSettings()
   int i = 0;
   for(Highlight* hl = hiList.first(); hl; hl = hiList.next())
   {
-    config->setGroup(TQString("Highlight%1").tqarg(i));
+    config->setGroup(TQString("Highlight%1").arg(i));
     config->writeEntry("Pattern", hl->getPattern());
     config->writeEntry("RegExp", hl->getRegExp());
     config->writeEntry("Color", hl->getColor());
@@ -339,9 +339,9 @@ void Highlight_Config::saveSettings()
   Preferences::setHighlightList(hiList);
 
   // Remove unused entries...
-  while(config->hasGroup(TQString("Highlight%1").tqarg(i)))
+  while(config->hasGroup(TQString("Highlight%1").arg(i)))
   {
-    config->deleteGroup(TQString("Highlight%1").tqarg(i));
+    config->deleteGroup(TQString("Highlight%1").arg(i));
     i++;
   }
 
diff --git a/konversation/src/highlightviewitem.cpp b/konversation/src/highlightviewitem.cpp
index 138ca2f..f6784a6 100644
--- a/konversation/src/highlightviewitem.cpp
+++ b/konversation/src/highlightviewitem.cpp
@@ -35,12 +35,12 @@ HighlightViewItem::~HighlightViewItem()
 {
 }
 
-void HighlightViewItem::paintCell(TQPainter* p, const TQColorGroup &cg, int column, int width, int tqalignment)
+void HighlightViewItem::paintCell(TQPainter* p, const TQColorGroup &cg, int column, int width, int alignment)
 {
     // copy all colors from cg and only then change needed colors
     itemColorGroup=cg;
     itemColorGroup.setColor(TQColorGroup::Text, itemColor);
-    TQCheckListItem::paintCell(p, itemColorGroup, column, width, tqalignment);
+    TQCheckListItem::paintCell(p, itemColorGroup, column, width, alignment);
 }
 
 HighlightViewItem* HighlightViewItem::itemBelow()
diff --git a/konversation/src/highlightviewitem.h b/konversation/src/highlightviewitem.h
index 805f806..d2d15dc 100644
--- a/konversation/src/highlightviewitem.h
+++ b/konversation/src/highlightviewitem.h
@@ -67,6 +67,6 @@ class HighlightViewItem : public TQCheckListItem
         bool m_changed;  // true if the checkbox has been changed
 
         void stateChange(bool newState);  // reimplemented to store changed value
-        void paintCell(TQPainter* p, const TQColorGroup &cg, int column, int width, int tqalignment);
+        void paintCell(TQPainter* p, const TQColorGroup &cg, int column, int width, int alignment);
 };
 #endif
diff --git a/konversation/src/inputfilter.cpp b/konversation/src/inputfilter.cpp
index f2e78ec..e1fb804 100644
--- a/konversation/src/inputfilter.cpp
+++ b/konversation/src/inputfilter.cpp
@@ -201,17 +201,17 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                     {
                         server->appendMessageToFrontmost(i18n("CTCP"),
                             i18n("Received CTCP-PING request from %1 to channel %2, sending answer.")
-                            .tqarg(sourceNick).tqarg(parameterList[0])
+                            .arg(sourceNick).arg(parameterList[0])
                             );
                     }
                     else
                     {
                         server->appendMessageToFrontmost(i18n("CTCP"),
                             i18n("Received CTCP-%1 request from %2, sending answer.")
-                            .tqarg("PING").tqarg(sourceNick)
+                            .arg("PING").arg(sourceNick)
                             );
                     }
-                    server->ctcpReply(sourceNick,TQString("PING %1").tqarg(ctcpArgument));
+                    server->ctcpReply(sourceNick,TQString("PING %1").arg(ctcpArgument));
                 }
             }
 
@@ -224,14 +224,14 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                     {
                         server->appendMessageToFrontmost(i18n("CTCP"),
                             i18n("Received Version request from %1 to channel %2.")
-                            .tqarg(sourceNick).tqarg(parameterList[0])
+                            .arg(sourceNick).arg(parameterList[0])
                             );
                     }
                     else
                     {
                         server->appendMessageToFrontmost(i18n("CTCP"),
                             i18n("Received Version request from %1.")
-                            .tqarg(sourceNick)
+                            .arg(sourceNick)
                             );
                     }
 
@@ -244,7 +244,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                     {
                         // Do not internationalize the below version string
                         reply = TQString("Konversation %1 (C) 2002-2008 by the Konversation team")
-                            .tqarg(TQString(KONVI_VERSION));
+                            .arg(TQString(KONVI_VERSION));
                     }
                     server->ctcpReply(sourceNick,"VERSION "+reply);
                 }
@@ -298,7 +298,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                         {
                             server->appendMessageToFrontmost(i18n("DCC"),
                                 i18n("Received invalid DCC SEND request from %1.")
-                                .tqarg(sourceNick)
+                                .arg(sourceNick)
                                 );
                         }
                     }
@@ -313,7 +313,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                         {
                             server->appendMessageToFrontmost(i18n("DCC"),
                                 i18n("Received invalid DCC ACCEPT request from %1.")
-                                .tqarg(sourceNick)
+                                .arg(sourceNick)
                                 );
                         }
                     }
@@ -328,7 +328,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                         {
                             server->appendMessageToFrontmost(i18n("DCC"),
                                 i18n("Received invalid DCC RESUME request from %1.")
-                                .tqarg(sourceNick)
+                                .arg(sourceNick)
                                 );
                         }
                     }
@@ -344,7 +344,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                         {
                             server->appendMessageToFrontmost(i18n("DCC"),
                                 i18n("Received invalid DCC CHAT request from %1.")
-                                .tqarg(sourceNick)
+                                .arg(sourceNick)
                                 );
                         }
                     }
@@ -352,7 +352,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                     {
                         server->appendMessageToFrontmost(i18n("DCC"),
                             i18n("Unknown DCC command %1 received from %2.")
-                            .tqarg(ctcpArgument).tqarg(sourceNick)
+                            .arg(ctcpArgument).arg(sourceNick)
                             );
                     }
                 }
@@ -361,7 +361,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
             {
                 server->appendMessageToFrontmost(i18n("CTCP"),
                     i18n("Received CTCP-%1 request from %2, sending answer.")
-                    .tqarg("CLIENTINFO").tqarg(sourceNick)
+                    .arg("CLIENTINFO").arg(sourceNick)
                     );
                 server->ctcpReply(sourceNick,TQString("CLIENTINFO ACTION CLIENTINFO DCC PING TIME VERSION"));
             }
@@ -369,7 +369,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
             {
                 server->appendMessageToFrontmost(i18n("CTCP"),
                     i18n("Received CTCP-%1 request from %2, sending answer.")
-                    .tqarg("TIME").tqarg(sourceNick)
+                    .arg("TIME").arg(sourceNick)
                     );
                 server->ctcpReply(sourceNick,TQString("TIME ")+TQDateTime::currentDateTime().toString());
             }
@@ -384,12 +384,12 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                             parameterList[0],
                             "CTCP",
                             i18n("Received unknown CTCP-%1 request from %2 to Channel %3.")
-                            .tqarg(ctcp).tqarg(sourceNick).tqarg(parameterList[0])
+                            .arg(ctcp).arg(sourceNick).arg(parameterList[0])
                             );
                     else
                         server->appendMessageToFrontmost(i18n("CTCP"),
                             i18n("Received unknown CTCP-%1 request from %2.")
-                            .tqarg(ctcp).tqarg(sourceNick)
+                            .arg(ctcp).arg(sourceNick)
                             );
                 }
             }
@@ -414,7 +414,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
 
                 server->appendServerMessageToChannel(parameterList[0], i18n("Notice"),
                     i18n("-%1 to %2- %3")
-                    .tqarg(sourceNick).tqarg(parameterList[0]).tqarg(trailing)
+                    .arg(sourceNick).arg(parameterList[0]).arg(trailing)
                     );
             }
             // Private notice
@@ -441,9 +441,9 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
 
                         server->appendMessageToFrontmost(i18n("CTCP"),
                             i18n("Received CTCP-PING reply from %1: %2 %3.")
-                            .tqarg(sourceNick)
-                            .tqarg(time)
-                            .tqarg(unit)
+                            .arg(sourceNick)
+                            .arg(time)
+                            .arg(unit)
                             );
                     }
                     // all other ctcp replies get a general message
@@ -451,7 +451,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                     {
                         server->appendMessageToFrontmost(i18n("CTCP"),
                             i18n("Received CTCP-%1 reply from %2: %3.")
-                            .tqarg(replyReason).tqarg(sourceNick).tqarg(reply)
+                            .arg(replyReason).arg(sourceNick).arg(reply)
                             );
                     }
                 }
@@ -474,7 +474,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
                         if(nickInfo)
                             nickInfo->setIdentified(true);
                     }
-                    server->appendMessageToFrontmost(i18n("Notice"), i18n("-%1- %2").tqarg(sourceNick).tqarg(trailing));
+                    server->appendMessageToFrontmost(i18n("Notice"), i18n("-%1- %2").arg(sourceNick).arg(trailing));
                 }
             }
         }
@@ -608,7 +608,7 @@ void InputFilter::parseClientCommand(const TQString &prefix, const TQString &com
 
         server->appendMessageToFrontmost(i18n("Invite"),
             i18n("%1 invited you to channel %2.")
-            .tqarg(sourceNick).tqarg(channel)
+            .arg(sourceNick).arg(channel)
             );
         emit invitation(sourceNick,channel);
     }
@@ -668,7 +668,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
         }
         else if(command=="notice")
         {
-            server->appendStatusMessage(i18n("Notice"),i18n("-%1- %2").tqarg(prefix).tqarg(trailing));
+            server->appendStatusMessage(i18n("Notice"),i18n("-%1- %2").arg(prefix).arg(trailing));
         }
         else if(command=="kick")
         {
@@ -714,10 +714,10 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
             {
                 server->appendStatusMessage(i18n("Welcome"),
                     i18n("Server %1 (Version %2), User modes: %3, Channel modes: %4")
-                    .tqarg(parameterList[1])
-                    .tqarg(parameterList[2])
-                    .tqarg(parameterList[3])
-                    .tqarg(parameterList[4])
+                    .arg(parameterList[1])
+                    .arg(parameterList[2])
+                    .arg(parameterList[3])
+                    .arg(parameterList[4])
                     );
                 server->setAllowedChannelModes(parameterList[4]);
                 break;
@@ -781,7 +781,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
             }
             case RPL_UMODEIS:
             {
-                TQString message=TQString("%1 %2").tqarg(i18n("Your personal modes are:")).tqarg(parameterList.join(" ").section(' ',1) + ' '+trailing);
+                TQString message=TQString("%1 %2").arg(i18n("Your personal modes are:")).arg(parameterList.join(" ").section(' ',1) + ' '+trailing);
                 server->appendMessageToFrontmost("Info", message);
                 break;
             }
@@ -853,7 +853,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
             case RPL_CHANNELURLIS:
             {// :niven.freenode.net 328 argonel #channel :http://www.buggeroff.com/
                 server->appendCommandMessageToChannel(parameterList[1], i18n("URL"),
-                    i18n("Channel URL: %1").tqarg(trailing));
+                    i18n("Channel URL: %1").arg(trailing));
                 break;
             }
             case RPL_CHANNELCREATED:
@@ -862,7 +862,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 when.setTime_t(parameterList[2].toUInt());
                 server->appendCommandMessageToChannel(parameterList[1],i18n("Created"),
                     i18n("This channel was created on %1.")
-                    .tqarg(when.toString(Qt::LocalDate))
+                    .arg(when.toString(Qt::LocalDate))
                     );
 
                 if(Preferences::autoWhoContinuousEnabled())
@@ -877,7 +877,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 // Display message only if this was not an automatic request.
                 if(getAutomaticRequest("WHOIS",parameterList[1])==0)
                 {
-                    server->appendMessageToFrontmost(i18n("Whois"),i18n("%1 is logged in as %2.").tqarg(parameterList[1]).tqarg(parameterList[2]));
+                    server->appendMessageToFrontmost(i18n("Whois"),i18n("%1 is logged in as %2.").arg(parameterList[1]).arg(parameterList[2]));
                 }
                 break;
             }
@@ -927,7 +927,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
             // Topic set messages
             case RPL_NOTOPIC:
             {
-                server->appendMessageToFrontmost(i18n("TOPIC"),i18n("The channel %1 has no topic set.").tqarg(parameterList[1]) /*.tqarg(parameterList[2])*/); //FIXME ok, whats the second parameter supposed to be?
+                server->appendMessageToFrontmost(i18n("TOPIC"),i18n("The channel %1 has no topic set.").arg(parameterList[1]) /*.arg(parameterList[2])*/); //FIXME ok, whats the second parameter supposed to be?
 
                 break;
             }
@@ -946,7 +946,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 }
                 else
                 {
-                    server->appendMessageToFrontmost(i18n("Topic"),i18n("The channel topic for %1 is: \"%2\"").tqarg(parameterList[1]).tqarg(topic));
+                    server->appendMessageToFrontmost(i18n("Topic"),i18n("The channel topic for %1 is: \"%2\"").arg(parameterList[1]).arg(topic));
                 }
 
                 break;
@@ -962,15 +962,15 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 {
                     server->appendCommandMessageToChannel(parameterList[1],i18n("Topic"),
                         i18n("The topic was set by %1 on %2.")
-                        .tqarg(parameterList[2]).tqarg(when.toString(Qt::LocalDate)),
+                        .arg(parameterList[2]).arg(when.toString(Qt::LocalDate)),
                         false);
                 }
                 else
                 {
                     server->appendMessageToFrontmost(i18n("Topic"),i18n("The topic for %1 was set by %2 on %3.")
-                        .tqarg(parameterList[1])
-                        .tqarg(parameterList[2])
-                        .tqarg(when.toString(Qt::LocalDate))
+                        .arg(parameterList[1])
+                        .arg(parameterList[2])
+                        .arg(when.toString(Qt::LocalDate))
                         );
                     setAutomaticRequest("TOPIC",parameterList[1],false);
                 }
@@ -983,7 +983,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 // Display message only if this was not an automatic request.
                 if(getAutomaticRequest("WHOIS",parameterList[1])==0)
                 {
-                    server->appendMessageToFrontmost(i18n("Whois"),i18n("%1 is actually using the host %2.").tqarg(parameterList[1]).tqarg(parameterList[2]));
+                    server->appendMessageToFrontmost(i18n("Whois"),i18n("%1 is actually using the host %2.").arg(parameterList[1]).arg(parameterList[2]));
                 }
                 break;
             }
@@ -993,11 +993,11 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 // IP resolve purposes, and clear it from the automaticRequest list
                 if(getAutomaticRequest("DNS",parameterList[1])==0)
                 {
-                    server->appendMessageToFrontmost(i18n("Error"),i18n("%1: No such nick/channel.").tqarg(parameterList[1]));
+                    server->appendMessageToFrontmost(i18n("Error"),i18n("%1: No such nick/channel.").arg(parameterList[1]));
                 }
                 else if(getAutomaticRequest("WHOIS",parameterList[1])==0) //Display message only if this was not an automatic request.
                 {
-                    server->appendMessageToFrontmost(i18n("Error"),i18n("No such nick: %1.").tqarg(parameterList[1]));
+                    server->appendMessageToFrontmost(i18n("Error"),i18n("No such nick: %1.").arg(parameterList[1]));
                     setAutomaticRequest("DNS", parameterList[1], false);
                 }
 
@@ -1008,7 +1008,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 // Display message only if this was not an automatic request.
                 if(getAutomaticRequest("WHOIS",parameterList[1])==0)
                 {
-                    server->appendMessageToFrontmost(i18n("Error"),i18n("%1: No such channel.").tqarg(parameterList[1]));
+                    server->appendMessageToFrontmost(i18n("Error"),i18n("%1: No such channel.").arg(parameterList[1]));
                 }
                 break;
             }
@@ -1036,7 +1036,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                         server->obtainNickInfo(server->getNickname()) ;
                         server->renameNick(server->getNickname(), newNick);
                         // Show message
-                        server->appendMessageToFrontmost(i18n("Nick"), i18n("Nickname already in use. Trying %1.").tqarg(newNick));
+                        server->appendMessageToFrontmost(i18n("Nick"), i18n("Nickname already in use. Trying %1.").arg(newNick));
                         // Send nickchange request to the server
                         server->queue("NICK "+newNick);
                     }
@@ -1062,7 +1062,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                     {
                         server->obtainNickInfo(server->getNickname()) ;
                         server->renameNick(server->getNickname(), newNick);
-                        server->appendMessageToFrontmost(i18n("Nick"), i18n("Erroneus nickname. Changing nick to %1." ).tqarg(newNick)) ;
+                        server->appendMessageToFrontmost(i18n("Nick"), i18n("Erroneus nickname. Changing nick to %1." ).arg(newNick)) ;
                         server->queue("NICK "+newNick);
                     }
                 }
@@ -1070,7 +1070,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
             }
             case ERR_NOTONCHANNEL:
             {
-                server->appendMessageToFrontmost(i18n("Error"),i18n("You are not on %1.").tqarg(parameterList[1]));
+                server->appendMessageToFrontmost(i18n("Error"),i18n("You are not on %1.").arg(parameterList[1]));
 
                 break;
             }
@@ -1115,14 +1115,14 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
             {
                 TQString current(trailing.section(' ',3));
                 //TQString max(trailing.section(' ',5,5));
-                server->appendStatusMessage(i18n("Users"),i18n("Current users on the network: %1").tqarg(current));
+                server->appendStatusMessage(i18n("Users"),i18n("Current users on the network: %1").arg(current));
                 break;
             }
             case RPL_LOCALUSERS:                  // Current local users: 589 Max: 845
             {
                 TQString current(trailing.section(' ',3));
                 //TQString max(trailing.section(' ',5,5));
-                server->appendStatusMessage(i18n("Users"),i18n("Current users on %1: %2.").tqarg(prefix).tqarg(current));
+                server->appendStatusMessage(i18n("Users"),i18n("Current users on %1: %2.").arg(prefix).arg(current));
                 break;
             }
             case RPL_ISON:
@@ -1145,7 +1145,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 if(getAutomaticRequest("WHOIS",parameterList[1])==0)
                 {
                     server->appendMessageToFrontmost(i18n("Away"),i18n("%1 is away: %2")
-                        .tqarg(parameterList[1]).tqarg(trailing)
+                        .arg(parameterList[1]).arg(trailing)
                         );
                 }
 
@@ -1155,7 +1155,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
             {
                 server->appendMessageToFrontmost(i18n("Invite"),
                     i18n("You invited %1 to channel %2.")
-                    .tqarg(parameterList[1]).tqarg(parameterList[2])
+                    .arg(parameterList[1]).arg(parameterList[2])
                     );
                 break;
             }
@@ -1173,7 +1173,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 NickInfo* nickInfo = server->getNickInfo(parameterList[1]);
                 if(nickInfo)
                 {
-                    nickInfo->setHostmask(i18n("%1@%2").tqarg(parameterList[2]).tqarg(parameterList[3]));
+                    nickInfo->setHostmask(i18n("%1@%2").arg(parameterList[2]).arg(parameterList[3]));
                     nickInfo->setRealName(trailing);
                 }
                 // Display message only if this was not an automatic request.
@@ -1184,10 +1184,10 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                     escapedRealName.replace("<","&lt;").replace(">","&gt;");
                     server->appendMessageToFrontmost(i18n("Whois"),
                         i18n("%1 is %2@%3 (%4)")
-                        .tqarg(parameterList[1])
-                        .tqarg(parameterList[2])
-                        .tqarg(parameterList[3])
-                        .tqarg(escapedRealName), false);   // Don't parse any urls
+                        .arg(parameterList[1])
+                        .arg(parameterList[2])
+                        .arg(parameterList[3])
+                        .arg(escapedRealName), false);   // Don't parse any urls
                 }
                 else
                 {
@@ -1200,17 +1200,17 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                             TQString ip = resolved.first().address().nodeName();
                             server->appendMessageToFrontmost(i18n("DNS"),
                                 i18n("Resolved %1 (%2) to address: %3")
-                                .tqarg(parameterList[1])
-                                .tqarg(parameterList[3])
-                                .tqarg(ip)
+                                .arg(parameterList[1])
+                                .arg(parameterList[3])
+                                .arg(ip)
                                 );
                         }
                         else
                         {
                             server->appendMessageToFrontmost(i18n("Error"),
                                 i18n("Unable to resolve address for %1 (%2)")
-                                .tqarg(parameterList[1])
-                                .tqarg(parameterList[3])
+                                .arg(parameterList[1])
+                                .arg(parameterList[3])
                                 );
                         }
 
@@ -1235,7 +1235,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                     // Prints "psn is an identified user"
                     //server->appendStatusMessage(i18n("Whois"),parameterList.join(" ").section(' ',1)+' '+trailing);
                     // The above line works fine, but can't be i18n'ised. So use the below instead.. I hope this is okay.
-                    server->appendMessageToFrontmost(i18n("Whois"), i18n("%1 is an identified user.").tqarg(parameterList[1]));
+                    server->appendMessageToFrontmost(i18n("Whois"), i18n("%1 is an identified user.").arg(parameterList[1]));
                 }
                 break;
             }
@@ -1250,7 +1250,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 bool bAway = parameterList[6].upper().startsWith("G");
                 if(nickInfo)
                 {
-                    nickInfo->setHostmask(i18n("%1@%2").tqarg(parameterList[2]).tqarg(parameterList[3]));
+                    nickInfo->setHostmask(i18n("%1@%2").arg(parameterList[2]).arg(parameterList[3]));
                                                   //Strip off the "0 "
                     nickInfo->setRealName(trailing.section(" ", 1));
                     nickInfo->setAway(bAway);
@@ -1265,11 +1265,11 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                     if(getAutomaticRequest("WHO",whoRequestList.front())==0)
                     {
                         server->appendMessageToFrontmost(i18n("Who"),
-                            i18n("%1 is %2@%3 (%4)%5").tqarg(parameterList[5])
-                            .tqarg(parameterList[2])
-                            .tqarg(parameterList[3])
-                            .tqarg(trailing.section(" ", 1))
-                            .tqarg(bAway?i18n(" (Away)"):TQString())
+                            i18n("%1 is %2@%3 (%4)%5").arg(parameterList[5])
+                            .arg(parameterList[2])
+                            .arg(parameterList[3])
+                            .arg(trailing.section(" ", 1))
+                            .arg(bAway?i18n(" (Away)"):TQString())
                             , false); // Don't parse as url
                     }
                 }
@@ -1287,7 +1287,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                         {
                             server->appendMessageToFrontmost(i18n("Who"),
                                 i18n("End of /WHO list for %1")
-                                .tqarg(parameterList[1]));
+                                .arg(parameterList[1]));
                         }
                         else
                         {
@@ -1372,43 +1372,43 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                     {
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 is a user on channels: %2")
-                            .tqarg(parameterList[1])
-                            .tqarg(userChannels.join(" "))
+                            .arg(parameterList[1])
+                            .arg(userChannels.join(" "))
                             );
                     }
                     if(voiceChannels.count())
                     {
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 has voice on channels: %2")
-                            .tqarg(parameterList[1]).tqarg(voiceChannels.join(" "))
+                            .arg(parameterList[1]).arg(voiceChannels.join(" "))
                             );
                     }
                     if(halfopChannels.count())
                     {
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 is a halfop on channels: %2")
-                            .tqarg(parameterList[1]).tqarg(halfopChannels.join(" "))
+                            .arg(parameterList[1]).arg(halfopChannels.join(" "))
                             );
                     }
                     if(opChannels.count())
                     {
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 is an operator on channels: %2")
-                            .tqarg(parameterList[1]).tqarg(opChannels.join(" "))
+                            .arg(parameterList[1]).arg(opChannels.join(" "))
                             );
                     }
                     if(ownerChannels.count())
                     {
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 is owner of channels: %2")
-                            .tqarg(parameterList[1]).tqarg(ownerChannels.join(" "))
+                            .arg(parameterList[1]).arg(ownerChannels.join(" "))
                             );
                     }
                     if(adminChannels.count())
                     {
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 is admin on channels: %2")
-                            .tqarg(parameterList[1]).tqarg(adminChannels.join(" "))
+                            .arg(parameterList[1]).arg(adminChannels.join(" "))
                             );
                     }
                 }
@@ -1430,8 +1430,8 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 if(getAutomaticRequest("WHOIS",parameterList[1])==0)
                 {
                     server->appendMessageToFrontmost(i18n("Whois"),
-                        i18n("%1 is online via %2 (%3).").tqarg(parameterList[1])
-                        .tqarg(parameterList[2]).tqarg(trailing)
+                        i18n("%1 is online via %2 (%3).").arg(parameterList[1])
+                        .arg(parameterList[2]).arg(trailing)
                         );
                 }
                 break;
@@ -1443,7 +1443,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 {
                     server->appendMessageToFrontmost(i18n("Whois"),
                         i18n("%1 is available for help.")
-                        .tqarg(parameterList[1])
+                        .arg(parameterList[1])
                         );
                 }
                 break;
@@ -1454,9 +1454,9 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 if(getAutomaticRequest("WHOIS",parameterList[1])==0)
                 {
                     if (trailing.lower().simplifyWhiteSpace().startsWith("is an irc operator"))
-                        server->appendMessageToFrontmost(i18n("Whois"),i18n("%1 is an IRC Operator.").tqarg(parameterList[1]));
+                        server->appendMessageToFrontmost(i18n("Whois"),i18n("%1 is an IRC Operator.").arg(parameterList[1]));
                     else
-                        server->appendMessageToFrontmost(i18n("Whois"),TQString("%1 %2").tqarg(parameterList[1]).tqarg(trailing));
+                        server->appendMessageToFrontmost(i18n("Whois"),TQString("%1 %2").arg(parameterList[1]).arg(trailing));
                 }
                 break;
             }
@@ -1482,8 +1482,8 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 = name of person, %2 = (x days), %3 = (x hours), %4 = (x minutes), %5 = (x seconds)",
                             "%1 has been idle for %2, %3, %4, and %5.")
-                            .tqarg(parameterList[1])
-                            .tqarg(daysString).tqarg(hoursString).tqarg(minutesString).tqarg(secondsString)
+                            .arg(parameterList[1])
+                            .arg(daysString).arg(hoursString).arg(minutesString).arg(secondsString)
                             );
                         // or longer than an hour
                     }
@@ -1495,8 +1495,8 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 = name of person, %2 = (x hours), %3 = (x minutes), %4 = (x seconds)",
                             "%1 has been idle for %2, %3, and %4.")
-                            .tqarg(parameterList[1])
-                            .tqarg(hoursString).tqarg(minutesString).tqarg(secondsString)
+                            .arg(parameterList[1])
+                            .arg(hoursString).arg(minutesString).arg(secondsString)
                             );
                         // or longer than a minute
                     }
@@ -1507,8 +1507,8 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 = name of person, %2 = (x minutes), %3 = (x seconds)",
                             "%1 has been idle for %2 and %3.")
-                            .tqarg(parameterList[1])
-                            .tqarg(minutesString).tqarg(secondsString)
+                            .arg(parameterList[1])
+                            .arg(minutesString).arg(secondsString)
                             );
                         // or just some seconds
                     }
@@ -1516,7 +1516,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                     {
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 has been idle for 1 second.", "%1 has been idle for %n seconds.", seconds)
-                            .tqarg(parameterList[1])
+                            .arg(parameterList[1])
                             );
                     }
                 }
@@ -1535,7 +1535,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                     {
                         server->appendMessageToFrontmost(i18n("Whois"),
                             i18n("%1 has been online since %2.")
-                            .tqarg(parameterList[1]).tqarg(when.toString(Qt::LocalDate))
+                            .arg(parameterList[1]).arg(when.toString(Qt::LocalDate))
                             );
                     }
                 }
@@ -1586,10 +1586,10 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                     {
                         server->appendMessageToFrontmost(i18n("Userhost"),
                             i18n("%1 = nick, %2 = shows if nick is op, %3 = hostmask, %4 = shows away", "%1%2 is %3%4.")
-                            .tqarg(nick)
-                            .tqarg((ircOp) ? i18n(" (IRC Operator)") : TQString())
-                            .tqarg(mask)
-                            .tqarg((away) ? i18n(" (away)") : TQString()));
+                            .arg(nick)
+                            .arg((ircOp) ? i18n(" (IRC Operator)") : TQString())
+                            .arg(mask)
+                            .arg((away) ? i18n(" (away)") : TQString()));
                     }
 
                     // was this an automatic request?
@@ -1614,7 +1614,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 {
                     TQString message;
                     message=i18n("%1 (%n user): %2", "%1 (%n users): %2", parameterList[2].toInt());
-                    server->appendMessageToFrontmost(i18n("List"),message.tqarg(parameterList[1]).tqarg(trailing));
+                    server->appendMessageToFrontmost(i18n("List"),message.arg(parameterList[1]).arg(trailing));
                 }
                 else                              // send them to /LIST window
                 {
@@ -1668,7 +1668,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                     TQDateTime when;
                     when.setTime_t(parameterList[4].toUInt());
 
-                    server->appendMessageToFrontmost(i18n("BanList:%1").tqarg(parameterList[1]), i18n("BanList message: e.g. *!*@aol.com set by MrGrim on <date>", "%1 set by %2 on %3").tqarg(parameterList[2]).tqarg(parameterList[3].section('!', 0, 0)).tqarg(when.toString(Qt::LocalDate)));
+                    server->appendMessageToFrontmost(i18n("BanList:%1").arg(parameterList[1]), i18n("BanList message: e.g. *!*@aol.com set by MrGrim on <date>", "%1 set by %2 on %3").arg(parameterList[2]).arg(parameterList[3].section('!', 0, 0)).arg(when.toString(Qt::LocalDate)));
                 }
                 break;
             }
@@ -1678,7 +1678,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
                 {
                     setAutomaticRequest("BANLIST", parameterList[1], false);
                 } else {
-                    server->appendMessageToFrontmost(i18n("BanList:%1").tqarg(parameterList[1]), i18n("End of Ban List."));
+                    server->appendMessageToFrontmost(i18n("BanList:%1").arg(parameterList[1]), i18n("End of Ban List."));
                 }
                 break;
             }
@@ -1706,7 +1706,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
             }
             case ERR_UNAVAILRESOURCE:
             {
-                server->appendMessageToFrontmost(i18n("Error"),i18n("%1 is currently unavailable.").tqarg(parameterList[1]));
+                server->appendMessageToFrontmost(i18n("Error"),i18n("%1 is currently unavailable.").arg(parameterList[1]));
 
                 break;
             }
@@ -1722,7 +1722,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
             }
             case ERR_UNKNOWNCOMMAND:
             {
-                server->appendMessageToFrontmost(i18n("Error"),i18n("%1: Unknown command.").tqarg(parameterList[1]));
+                server->appendMessageToFrontmost(i18n("Error"),i18n("%1: Unknown command.").arg(parameterList[1]));
 
                 break;
             }
@@ -1734,7 +1734,7 @@ void InputFilter::parseServerCommand(const TQString &prefix, const TQString &com
             }
             case ERR_NEEDMOREPARAMS:
             {
-                server->appendMessageToFrontmost(i18n("Error"),i18n("%1: This command requires more parameters.").tqarg(parameterList[1]));
+                server->appendMessageToFrontmost(i18n("Error"),i18n("%1: This command requires more parameters.").arg(parameterList[1]));
 
                 break;
             }
@@ -1776,7 +1776,7 @@ void InputFilter::parseModes(const TQString &sourceNick, const TQStringList &par
             }
             else
             {   //XXX someone might care about the potentially unnecessary plural here
-                message = TQString("%1 %2 %3").tqarg(sourceNick).tqarg(i18n("has changed your personal modes:")).tqarg(modestring);
+                message = TQString("%1 %2 %3").arg(sourceNick).arg(i18n("has changed your personal modes:")).arg(modestring);
             }
         }
         if (!message.isEmpty())
diff --git a/konversation/src/irccolorchooserui.ui b/konversation/src/irccolorchooserui.ui
index 00a3cae..3bfd4f7 100644
--- a/konversation/src/irccolorchooserui.ui
+++ b/konversation/src/irccolorchooserui.ui
@@ -32,7 +32,7 @@
             <property name="text">
                 <string>Preview</string>
             </property>
-            <property name="tqalignment">
+            <property name="alignment">
                 <set>AlignCenter</set>
             </property>
             <property name="toolTip" stdset="0">
diff --git a/konversation/src/ircinput.cpp b/konversation/src/ircinput.cpp
index 20d3edf..e76b032 100644
--- a/konversation/src/ircinput.cpp
+++ b/konversation/src/ircinput.cpp
@@ -476,7 +476,7 @@ bool IRCInput::checkPaste(TQString& text)
             (this,
             i18n("<qt>You are attempting to paste a large portion of text (%1 bytes or %2 lines) into "
             "the chat. This can cause connection resets or flood kills. "
-            "Do you really want to continue?</qt>").tqarg(text.length()).tqarg(lines+1),
+            "Do you really want to continue?</qt>").arg(text.length()).arg(lines+1),
             i18n("Large Paste Warning"),
             i18n("Paste"),
             i18n("&Edit..."),
diff --git a/konversation/src/ircview.cpp b/konversation/src/ircview.cpp
index fb57094..94a10b5 100644
--- a/konversation/src/ircview.cpp
+++ b/konversation/src/ircview.cpp
@@ -267,7 +267,7 @@ void IRCView::highlightedSlot(const TQString& _link)
         m_currentNick = link.mid(1);
         m_nickPopup->changeTitle(m_nickPopupId,m_currentNick);
         m_isOnNick = true;
-        emit setStatusBarTempText(i18n("Open a query with %1").tqarg(m_currentNick));
+        emit setStatusBarTempText(i18n("Open a query with %1").arg(m_currentNick));
     }
     else
     {
@@ -284,7 +284,7 @@ void IRCView::highlightedSlot(const TQString& _link)
 
         m_channelPopup->changeTitle(m_channelPopupId,prettyId);
         m_isOnChannel = true;
-        emit setStatusBarTempText(i18n("Join the channel %1").tqarg(m_currentChannel));
+        emit setStatusBarTempText(i18n("Join the channel %1").arg(m_currentChannel));
     }
 }
 
@@ -353,7 +353,7 @@ void IRCView::replaceDecoration(TQString& line, char decoration, char replacemen
 
     while((pos=line.find(decoration))!=-1)
     {
-        line.replace(pos,1,(decorated) ? TQString("</%1>").tqarg(replacement) : TQString("<%1>").tqarg(replacement));
+        line.replace(pos,1,(decorated) ? TQString("</%1>").arg(replacement) : TQString("<%1>").arg(replacement));
         decorated = !decorated;
     }
 }
@@ -573,7 +573,7 @@ bool doHighlight, bool parseURL, bool self)
                 // replace %0 - %9 in regex groups
                 for(unsigned int capture=0;capture<captures.count();capture++)
                 {
-                  m_autoTextToSend.replace(TQString("%%1").tqarg(capture),captures[capture]);
+                  m_autoTextToSend.replace(TQString("%%1").arg(capture),captures[capture]);
                 }
                 m_autoTextToSend.replace(TQRegExp("%[0-9]"),TQString());
             }
@@ -692,9 +692,9 @@ void IRCView::append(const TQString& nick,const TQString& message)
         line = "<p><font color=\"" + channelColor + "\">%1" + nickLine + " %3</font></p>\n";
     }
 
-    line = line.tqarg(timeStamp(), nick, filter(message, channelColor, nick, true));
+    line = line.arg(timeStamp(), nick, filter(message, channelColor, nick, true));
 
-    emit textToLog(TQString("<%1>\t%2").tqarg(nick).tqarg(message));
+    emit textToLog(TQString("<%1>\t%2").arg(nick).arg(message));
 
     doAppend(line);
 }
@@ -874,9 +874,9 @@ void IRCView::appendQuery(const TQString& nick, const TQString& message, bool in
         line = "<p><font color=\"" + queryColor + "\">%1 " + nickLine + " %3</font></p>\n";
     }
 
-    line = line.tqarg(timeStamp(), nick, filter(message, queryColor, nick, true));
+    line = line.arg(timeStamp(), nick, filter(message, queryColor, nick, true));
 
-    emit textToLog(TQString("<%1>\t%2").tqarg(nick).tqarg(message));
+    emit textToLog(TQString("<%1>\t%2").arg(nick).arg(message));
 
     doAppend(line);
 }
@@ -917,9 +917,9 @@ void IRCView::appendAction(const TQString& nick,const TQString& message)
         line = "<p><font color=\"" + actionColor + "\">%1 * " + nickLine + " %3</font></p>\n";
     }
 
-    line = line.tqarg(timeStamp(), nick, filter(message, actionColor, nick, true));
+    line = line.arg(timeStamp(), nick, filter(message, actionColor, nick, true));
 
-    emit textToLog(TQString("\t * %1 %2").tqarg(nick).tqarg(message));
+    emit textToLog(TQString("\t * %1 %2").arg(nick).arg(message));
 
     doAppend(line);
 }
@@ -951,11 +951,11 @@ void IRCView::appendServerMessage(const TQString& type, const TQString& message,
     }
 
     if(type != i18n("Notify"))
-        line = line.tqarg(timeStamp(), type, filter(message, serverColor, 0 , true, parseURL));
+        line = line.arg(timeStamp(), type, filter(message, serverColor, 0 , true, parseURL));
     else
-        line = "<font color=\"" + serverColor + "\">"+line.tqarg(timeStamp(), type, message)+"</font>";
+        line = "<font color=\"" + serverColor + "\">"+line.arg(timeStamp(), type, message)+"</font>";
 
-    emit textToLog(TQString("%1\t%2").tqarg(type).tqarg(message));
+    emit textToLog(TQString("%1\t%2").arg(type).arg(message));
 
     doAppend(line);
 }
@@ -993,9 +993,9 @@ void IRCView::appendCommandMessage(const TQString& type,const TQString& message,
         line = "<p><font color=\"" + commandColor + "\">%1 %2 %3</font></p>\n";
     }
 
-    line = line.tqarg(timeStamp(), prefix, filter(message, commandColor, 0, true, parseURL, self));
+    line = line.arg(timeStamp(), prefix, filter(message, commandColor, 0, true, parseURL, self));
 
-    emit textToLog(TQString("%1\t%2").tqarg(type).tqarg(message));
+    emit textToLog(TQString("%1\t%2").arg(type).arg(message));
 
     doAppend(line, self);
 }
@@ -1031,7 +1031,7 @@ void IRCView::appendBacklogMessage(const TQString& firstColumn,const TQString& r
         line = "<p><font color=\"" + backlogColor + "\">%1 %2 %3</font></p>\n";
     }
 
-    line = line.tqarg(time, nick, filter(message, backlogColor, NULL, false, false));
+    line = line.arg(time, nick, filter(message, backlogColor, NULL, false, false));
 
     doAppend(line);
 }
@@ -1251,7 +1251,7 @@ void IRCView::contentsMouseMoveEvent(TQMouseEvent* ev)
         if (m_server && m_urlToDrag.startsWith("##"))
         {
             //FIXME consistent IRC URL serialization
-            ux = TQString("irc://%1:%2/%3").tqarg(m_server->getServerName()).tqarg(m_server->getPort()).tqarg(m_urlToDrag.mid(2));
+            ux = TQString("irc://%1:%2/%3").arg(m_server->getServerName()).arg(m_server->getPort()).arg(m_urlToDrag.mid(2));
         }
         else if (m_urlToDrag.startsWith("#"))
         {
@@ -1545,7 +1545,7 @@ void IRCView::searchAgain()
 
         if(!find(m_pattern, m_caseSensitive, m_wholeWords, m_forward, &m_findParagraph, &m_findIndex))
         {
-            KMessageBox::information(this,i18n("No matches found for \"%1\".").tqarg(m_pattern),i18n("Information"));
+            KMessageBox::information(this,i18n("No matches found for \"%1\".").arg(m_pattern),i18n("Information"));
         }
 
     }
@@ -1705,14 +1705,14 @@ TQString IRCView::timeStamp()
 
         if(!Preferences::showDate())
         {
-            timeString = TQString("<font color=\"" + timeColor + "\">[%1]</font> ").tqarg(time.toString(timeFormat));
+            timeString = TQString("<font color=\"" + timeColor + "\">[%1]</font> ").arg(time.toString(timeFormat));
         }
         else
         {
             TQDate date = TQDate::currentDate();
             timeString = TQString("<font color=\"" +
                 timeColor + "\">[%1 %2]</font> ")
-                    .tqarg(KGlobal::locale()->formatDate(date, true /*short format*/),
+                    .arg(KGlobal::locale()->formatDate(date, true /*short format*/),
                          time.toString(timeFormat));
         }
 
diff --git a/konversation/src/joinchanneldialog.cpp b/konversation/src/joinchanneldialog.cpp
index 63ad6c3..d50eb8c 100644
--- a/konversation/src/joinchanneldialog.cpp
+++ b/konversation/src/joinchanneldialog.cpp
@@ -26,7 +26,7 @@ namespace Konversation
 {
 
     JoinChannelDialog::JoinChannelDialog(Server* server, TQWidget *parent, const char *name)
-        : KDialogBase(parent, name, true, i18n("Join Channel on %1").tqarg(server->getDisplayName()), Ok|Cancel, Ok)
+        : KDialogBase(parent, name, true, i18n("Join Channel on %1").arg(server->getDisplayName()), Ok|Cancel, Ok)
     {
         m_server = server;
         m_widget = new JoinChannelUI(this);
diff --git a/konversation/src/konvdcop.cpp b/konversation/src/konvdcop.cpp
index b6e4b2a..e0054af 100644
--- a/konversation/src/konvdcop.cpp
+++ b/konversation/src/konvdcop.cpp
@@ -128,13 +128,13 @@ void KonvDCOP::info(const TQString& string)
 void KonvDCOP::debug(const TQString& string)
 {
     kdDebug() << "KonvDCOP::debug()" << endl;
-    emit dcopInfo(TQString("Debug: %1").tqarg(string));
+    emit dcopInfo(TQString("Debug: %1").arg(string));
 }
 
 void KonvDCOP::error(const TQString& string)
 {
     kdDebug() << "KonvDCOP::error()" << endl;
-    emit dcopInfo(TQString("Error: %1").tqarg(string));
+    emit dcopInfo(TQString("Error: %1").arg(string));
 }
 
 void KonvDCOP::insertMarkerLine()
@@ -153,7 +153,7 @@ TQString KonvDCOP::getNickname(const TQString& serverName)
 
     if (!server)
     {
-        error( i18n( "getNickname: Server %1 is not found." ).tqarg( serverName ) );
+        error( i18n( "getNickname: Server %1 is not found." ).arg( serverName ) );
         return TQString();
     }
 
diff --git a/konversation/src/konversationapplication.cpp b/konversation/src/konversationapplication.cpp
index 083a1ee..c1a489f 100644
--- a/konversation/src/konversationapplication.cpp
+++ b/konversation/src/konversationapplication.cpp
@@ -446,9 +446,9 @@ void KonversationApplication::readOptions()
     TQStringList buttonList(Preferences::quickButtonList());
     // Read all quick buttons
     int index=0;
-    while(config->hasKey(TQString("Button%1").tqarg(index)))
+    while(config->hasKey(TQString("Button%1").arg(index)))
     {
-      buttonList.append(config->readEntry(TQString("Button%1").tqarg(index++)));
+      buttonList.append(config->readEntry(TQString("Button%1").arg(index++)));
     } // while
     // Put back the changed button list
     Preferences::setQuickButtonList(buttonList);
@@ -462,10 +462,10 @@ void KonversationApplication::readOptions()
     TQStringList autoreplaceList(Preferences::autoreplaceList());
     // Read all entries
     index=0;
-    while(config->hasKey(TQString("Autoreplace%1").tqarg(index)))
+    while(config->hasKey(TQString("Autoreplace%1").arg(index)))
     {
       // read entry and get length of the string
-      TQString entry=config->readEntry(TQString("Autoreplace%1").tqarg(index++));
+      TQString entry=config->readEntry(TQString("Autoreplace%1").arg(index++));
       unsigned int length=entry.length()-1;
       // if there's a "#" in the end, strip it (used to preserve blanks at the end of the replacement text)
       // there should always be one, but older versions did not do it, so we check first
@@ -494,9 +494,9 @@ void KonversationApplication::readOptions()
     {
         int i = 0;
 
-        while(config->hasGroup(TQString("Highlight%1").tqarg(i)))
+        while(config->hasGroup(TQString("Highlight%1").arg(i)))
         {
-            config->setGroup(TQString("Highlight%1").tqarg(i));
+            config->setGroup(TQString("Highlight%1").arg(i));
             Preferences::addHighlight(config->readEntry("Pattern"),
                 config->readBoolEntry("RegExp"),
                 config->readColorEntry("Color"),
@@ -512,9 +512,9 @@ void KonversationApplication::readOptions()
     if(config->hasKey("Ignore0")) Preferences::clearIgnoreList();
     // Read all ignores
     index=0;
-    while(config->hasKey(TQString("Ignore%1").tqarg(index)))
+    while(config->hasKey(TQString("Ignore%1").arg(index)))
     {
-        Preferences::addIgnore(config->readEntry(TQString("Ignore%1").tqarg(index++)));
+        Preferences::addIgnore(config->readEntry(TQString("Ignore%1").arg(index++)));
     }
 
     // Aliases
@@ -563,7 +563,7 @@ void KonversationApplication::saveOptions(bool updateGUI)
     for(IdentityList::ConstIterator it = identityList.begin(); it != identityList.end(); ++it)
     {
         IdentityPtr identity = (*it);
-        config->setGroup(TQString("Identity %1").tqarg(index));
+        config->setGroup(TQString("Identity %1").arg(index));
 
         config->writeEntry("Name",identity->getName());
         config->writeEntry("Ident",identity->getIdent());
@@ -643,7 +643,7 @@ void KonversationApplication::saveOptions(bool updateGUI)
 
         for(it2 = serverlist.begin(); it2 != serverlist.end(); ++it2)
         {
-            groupName = TQString("Server %1").tqarg(index2);
+            groupName = TQString("Server %1").arg(index2);
             servers.append(groupName);
             config->setGroup(groupName);
             config->writeEntry("Server", (*it2).host());
@@ -658,7 +658,7 @@ void KonversationApplication::saveOptions(bool updateGUI)
 
         for(it3 = channelList.begin(); it3 != channelList.end(); ++it3)
         {
-            groupName = TQString("Channel %1").tqarg(index3);
+            groupName = TQString("Channel %1").arg(index3);
             channels.append(groupName);
             config->setGroup(groupName);
             config->writeEntry("Name", (*it3).name());
@@ -671,7 +671,7 @@ void KonversationApplication::saveOptions(bool updateGUI)
 
         for(it3 = channelList.begin(); it3 != channelList.end(); ++it3)
         {
-            groupName = TQString("Channel %1").tqarg(index3);
+            groupName = TQString("Channel %1").arg(index3);
             channelHistory.append(groupName);
             config->setGroup(groupName);
             config->writeEntry("Name", (*it3).name());
@@ -680,7 +680,7 @@ void KonversationApplication::saveOptions(bool updateGUI)
             index3++;
         }
 
-        config->setGroup(TQString("ServerGroup %1").tqarg(TQString::number(index).rightJustify(width,'0')));
+        config->setGroup(TQString("ServerGroup %1").arg(TQString::number(index).rightJustify(width,'0')));
         config->writeEntry("Name", (*it)->name());
         config->writeEntry("Identity", (*it)->identity()->getName());
         config->writeEntry("ServerList", servers);
@@ -704,7 +704,7 @@ void KonversationApplication::saveOptions(bool updateGUI)
     index=0;
     while(item)
     {
-        config->writeEntry(TQString("Ignore%1").tqarg(index),TQString("%1,%2").tqarg(item->getName()).tqarg(item->getFlags()));
+        config->writeEntry(TQString("Ignore%1").arg(index),TQString("%1,%2").arg(item->getName()).arg(item->getFlags()));
         item=ignoreList.next();
         index++;
     }
@@ -861,7 +861,7 @@ TQString KonversationApplication::doAutoreplace(const TQString& text,bool output
                         // replace %0 - %9 in regex groups
                         for(unsigned int capture=0;capture<captures.count();capture++)
                         {
-                            replacement.replace(TQString("%%1").tqarg(capture),captures[capture]);
+                            replacement.replace(TQString("%%1").arg(capture),captures[capture]);
                         }
                         replacement.replace(TQRegExp("%[0-9]"),TQString());
                         // replace input with replacement
diff --git a/konversation/src/konversationmainwindow.cpp b/konversation/src/konversationmainwindow.cpp
index 7ca3837..b42a742 100644
--- a/konversation/src/konversationmainwindow.cpp
+++ b/konversation/src/konversationmainwindow.cpp
@@ -246,8 +246,8 @@ KonversationMainWindow::KonversationMainWindow() : KMainWindow(0,"main_window",
 
     for (uint i = 1; i <= 10; ++i)
     {
-        KAction* tabSelectionAction = new KAction(i18n("Go to Tab %1").tqarg(i), 0, KShortcut(TQString("Alt+%1").tqarg(i%10)),
-            tabSelectionMapper, TQT_SLOT(map()), actionCollection(), TQString("go_to_tab_%1").tqarg(i).local8Bit());
+        KAction* tabSelectionAction = new KAction(i18n("Go to Tab %1").arg(i), 0, KShortcut(TQString("Alt+%1").arg(i%10)),
+            tabSelectionMapper, TQT_SLOT(map()), actionCollection(), TQString("go_to_tab_%1").arg(i).local8Bit());
         tabSelectionMapper->setMapping( tabSelectionAction, i-1);
     }
 
@@ -487,7 +487,7 @@ void KonversationMainWindow::toggleMenubar(bool dontShowWarning)
         {
             TQString accel = hideMenuBarAction->shortcut().toString();
             KMessageBox::information(this,
-                i18n("<qt>This will hide the menu bar completely. You can show it again by typing %1.</qt>").tqarg(accel),
+                i18n("<qt>This will hide the menu bar completely. You can show it again by typing %1.</qt>").arg(accel),
                 "Hide menu bar","HideMenuBarWarning");
         }
         menuBar()->hide();
diff --git a/konversation/src/konversationstatusbar.cpp b/konversation/src/konversationstatusbar.cpp
index bd8e61e..bdfc9ca 100644
--- a/konversation/src/konversationstatusbar.cpp
+++ b/konversation/src/konversationstatusbar.cpp
@@ -148,9 +148,9 @@ void KonversationStatusBar::updateLagLabel(Server* lagServer, int msec)
         if (msec == -1)
             lagString += i18n("Lag: Unknown");
         else if (msec < 1000)
-            lagString += i18n("Lag: %1 ms").tqarg(msec);
+            lagString += i18n("Lag: %1 ms").arg(msec);
         else
-            lagString += i18n("Lag: %1 s").tqarg(msec / 1000);
+            lagString += i18n("Lag: %1 s").arg(msec / 1000);
 
         m_lagLabel->setText(lagString);
 
@@ -179,8 +179,8 @@ void KonversationStatusBar::setTooLongLag(Server* lagServer, int msec)
             const TQString hoursString = i18n("1 hour", "%n hours", (hours % 24));
             const TQString minutesString = i18n("1 minute", "%n minutes", (minutes % 60));
             const TQString secondsString = i18n("1 second", "%n seconds", (seconds % 60));
-            lagString = i18n("%1 = name of server, %2 = (x days), %3 = (x hours), %4 = (x minutes), %5 = (x seconds)", "No answer from server %1 for more than %2, %3, %4, and %5.").tqarg(lagServer->getServerName())
-                .tqarg(daysString).tqarg(hoursString).tqarg(minutesString).tqarg(secondsString);
+            lagString = i18n("%1 = name of server, %2 = (x days), %3 = (x hours), %4 = (x minutes), %5 = (x seconds)", "No answer from server %1 for more than %2, %3, %4, and %5.").arg(lagServer->getServerName())
+                .arg(daysString).arg(hoursString).arg(minutesString).arg(secondsString);
             // or longer than an hour
         }
         else if (hours)
@@ -188,21 +188,21 @@ void KonversationStatusBar::setTooLongLag(Server* lagServer, int msec)
             const TQString hoursString = i18n("1 hour", "%n hours", hours);
             const TQString minutesString = i18n("1 minute", "%n minutes", (minutes % 60));
             const TQString secondsString = i18n("1 second", "%n seconds", (seconds % 60));
-            lagString = i18n("%1 = name of server, %2 = (x hours), %3 = (x minutes), %4 = (x seconds)", "No answer from server %1 for more than %2, %3, and %4.").tqarg(lagServer->getServerName())
-                .tqarg(hoursString).tqarg(minutesString).tqarg(secondsString);
+            lagString = i18n("%1 = name of server, %2 = (x hours), %3 = (x minutes), %4 = (x seconds)", "No answer from server %1 for more than %2, %3, and %4.").arg(lagServer->getServerName())
+                .arg(hoursString).arg(minutesString).arg(secondsString);
             // or longer than a minute
         }
         else if (minutes)
         {
             const TQString minutesString = i18n("1 minute", "%n minutes", minutes);
             const TQString secondsString = i18n("1 second", "%n seconds", (seconds % 60));
-            lagString = i18n("%1 = name of server, %2 = (x minutes), %3 = (x seconds)", "No answer from server %1 for more than %2 and %3.").tqarg(lagServer->getServerName())
-                .tqarg(minutesString).tqarg(secondsString);
+            lagString = i18n("%1 = name of server, %2 = (x minutes), %3 = (x seconds)", "No answer from server %1 for more than %2 and %3.").arg(lagServer->getServerName())
+                .arg(minutesString).arg(secondsString);
             // or just some seconds
         }
         else
         {
-            lagString = i18n("No answer from server %1 for more than 1 second.", "No answer from server %1 for more than %n seconds.", seconds).tqarg(lagServer->getServerName());
+            lagString = i18n("No answer from server %1 for more than 1 second.", "No answer from server %1 for more than %n seconds.", seconds).arg(lagServer->getServerName());
         }
 
         setMainLabelText(lagString);
@@ -211,7 +211,7 @@ void KonversationStatusBar::setTooLongLag(Server* lagServer, int msec)
     if (lagServer==m_window->getViewContainer()->getFrontServer())
     {
         TQString lagString = lagServer->getServerName() + " - ";
-        lagString.append(i18n("Lag: %1 s").tqarg(msec/1000));
+        lagString.append(i18n("Lag: %1 s").arg(msec/1000));
 
         if (m_lagLabel->isHidden()) m_lagLabel->show();
         m_lagLabel->setText(lagString);
diff --git a/konversation/src/linkaddressbook/addressbook.cpp b/konversation/src/linkaddressbook/addressbook.cpp
index 7d09c49..1b8f4cb 100644
--- a/konversation/src/linkaddressbook/addressbook.cpp
+++ b/konversation/src/linkaddressbook/addressbook.cpp
@@ -226,7 +226,7 @@ namespace Konversation
         {
             TQString user = addressee.fullEmail();
             if(!user.isEmpty()) user = " (" + user + ')';
-            focusAndShowErrorMessage(i18n("Another KDE application tried to use Konversation for instant messaging, but the requested user%1 is not online.").tqarg(user));
+            focusAndShowErrorMessage(i18n("Another KDE application tried to use Konversation for instant messaging, but the requested user%1 is not online.").arg(user));
             return;
         }
 
@@ -286,7 +286,7 @@ void Addressbook::sendFile(const TQString &uid, const KURL &sourceURL, const TQS
     {
         TQString user = addressee.fullEmail();
         if(!user.isEmpty()) user = " (" + user + ')';
-        focusAndShowErrorMessage(i18n("Another KDE application tried to use Konversation to send a file to a contact, but the requested user%1 is not currently online.").tqarg(user));
+        focusAndShowErrorMessage(i18n("Another KDE application tried to use Konversation to send a file to a contact, but the requested user%1 is not currently online.").arg(user));
         return;
     }
     nickInfo->getServer()->addDccSend(nickInfo->getNickname(), sourceURL, altFileName, fileSize);
diff --git a/konversation/src/linkaddressbook/addressbook_base.cpp b/konversation/src/linkaddressbook/addressbook_base.cpp
index 91cdba2..48f6973 100644
--- a/konversation/src/linkaddressbook/addressbook_base.cpp
+++ b/konversation/src/linkaddressbook/addressbook_base.cpp
@@ -463,9 +463,9 @@ namespace Konversation
                 else
                 {
                     if(nicksWithoutAddressee.count() > 1)
-                        message = i18n("Some of the contacts (%1) that you have selected are not associated with addressbook contacts. ").tqarg(nicksWithoutAddressee.join(", "));
+                        message = i18n("Some of the contacts (%1) that you have selected are not associated with addressbook contacts. ").arg(nicksWithoutAddressee.join(", "));
                     else
-                        message = i18n("One of the contacts (%1) that you have selected is not associated with an addressbook contact. ").tqarg(nicksWithoutAddressee.join(", "));
+                        message = i18n("One of the contacts (%1) that you have selected is not associated with an addressbook contact. ").arg(nicksWithoutAddressee.join(", "));
                 }
                 message += i18n("You can right click on a contact, and choose to edit the Addressbook Associations to link them to a contact in your addressbook.");
             }
@@ -481,15 +481,15 @@ namespace Konversation
                 else
                 {
                     if(nicksWithoutEmails.count() > 1)
-                        message = i18n("Some of the contacts (%1) that you have selected do not have an email address associated with them. ").tqarg(nicksWithoutEmails.join(", "));
+                        message = i18n("Some of the contacts (%1) that you have selected do not have an email address associated with them. ").arg(nicksWithoutEmails.join(", "));
                     else
-                        message = i18n("One of the contacts (%1) that you have selected does not have an email address associated with them. ").tqarg(nicksWithoutEmails.join(", "));
+                        message = i18n("One of the contacts (%1) that you have selected does not have an email address associated with them. ").arg(nicksWithoutEmails.join(", "));
                 }
                 message += i18n("You can right click on a contact, and choose to edit the addressbook contact, adding an email for them.");
             }
             else
             {
-                message = i18n("Some of the contacts (%1) that you have selected are not associated with addressbook contacts, and some of the contacts (%2) do not have an email address associated with them.  ").tqarg(nicksWithoutAddressee.join(", ").tqarg(nicksWithoutEmails.join(", ")));
+                message = i18n("Some of the contacts (%1) that you have selected are not associated with addressbook contacts, and some of the contacts (%2) do not have an email address associated with them.  ").arg(nicksWithoutAddressee.join(", ").arg(nicksWithoutEmails.join(", ")));
                 message += i18n("You can right click on a contact, and choose to edit the Addressbook Associations to link them to a contact in your addressbook, and choose to edit the addressbook contact, adding an email for them.");
             }
             if(nicksWithEmails.isEmpty())
diff --git a/konversation/src/linkaddressbook/linkaddressbookui.cpp b/konversation/src/linkaddressbook/linkaddressbookui.cpp
index 6968f4d..e6fe29e 100644
--- a/konversation/src/linkaddressbook/linkaddressbookui.cpp
+++ b/konversation/src/linkaddressbook/linkaddressbookui.cpp
@@ -115,13 +115,13 @@ void LinkAddressbookUI::slotLoadAddressees()
     /*AddresseeItem *item =*/ new AddresseeItem( m_mainWidget->addresseeListView, (*it));
 
     if(num_contacts_with_nick == 0)
-        m_mainWidget->lblHeader->setText(i18n("Choose the person who '%1' is.").tqarg(m_ircnick));
+        m_mainWidget->lblHeader->setText(i18n("Choose the person who '%1' is.").arg(m_ircnick));
     else if(num_contacts_with_nick == 1 && realname.isEmpty())
-        m_mainWidget->lblHeader->setText(i18n("Currently '%1' is associated with a contact.").tqarg(m_ircnick));
+        m_mainWidget->lblHeader->setText(i18n("Currently '%1' is associated with a contact.").arg(m_ircnick));
     else if(num_contacts_with_nick == 1 && !realname.isEmpty())
-        m_mainWidget->lblHeader->setText(i18n("Currently '%1' is associated with contact '%2'.").tqarg(m_ircnick).tqarg(realname));
+        m_mainWidget->lblHeader->setText(i18n("Currently '%1' is associated with contact '%2'.").arg(m_ircnick).arg(realname));
     else
-        m_mainWidget->lblHeader->setText(i18n("<qt><b>Warning:</b> '%1' is currently being listed as belonging to multiple contacts.  Please select the correct contact.</qt>").tqarg(m_ircnick));
+        m_mainWidget->lblHeader->setText(i18n("<qt><b>Warning:</b> '%1' is currently being listed as belonging to multiple contacts.  Please select the correct contact.</qt>").arg(m_ircnick));
 
 }
 
diff --git a/konversation/src/logfilereader.cpp b/konversation/src/logfilereader.cpp
index 74ea0e8..5e14f64 100644
--- a/konversation/src/logfilereader.cpp
+++ b/konversation/src/logfilereader.cpp
@@ -111,8 +111,8 @@ void LogfileReader::updateView()
         stream.setEncoding(TQTextStream::UnicodeUTF8);
 
         // Set file pointer to <pos> bytes from the end
-        if(stream.tqdevice()->size()>pos)
-            stream.tqdevice()->at(stream.tqdevice()->size()-pos);
+        if(stream.device()->size()>pos)
+            stream.device()->at(stream.device()->size()-pos);
         // Skip first line, since it may be incomplete
         stream.readLine();
         TQString str;
diff --git a/konversation/src/nick.cpp b/konversation/src/nick.cpp
index 3226d2e..640003a 100644
--- a/konversation/src/nick.cpp
+++ b/konversation/src/nick.cpp
@@ -124,7 +124,7 @@ void Nick::refresh()
     }
 
     setText(2, calculateLabel2());
-    tqrepaint();
+    repaint();
 
     if(m_flags != flags)
     {
diff --git a/konversation/src/nicksonline.cpp b/konversation/src/nicksonline.cpp
index 1dd88f2..47a79e8 100644
--- a/konversation/src/nicksonline.cpp
+++ b/konversation/src/nicksonline.cpp
@@ -249,12 +249,12 @@ bool& needWhois)
             niInfo += " (" + nickInfo->getRealName() + ')';
         if (!nickInfo->getNetServer().isEmpty())
         {
-            niInfo += i18n( " online via %1" ).tqarg( nickInfo->getNetServer() );
+            niInfo += i18n( " online via %1" ).arg( nickInfo->getNetServer() );
             if (!nickInfo->getNetServerInfo().isEmpty())
                 niInfo += " (" + nickInfo->getNetServerInfo() + ')';
         }
         if (!nickInfo->getOnlineSince().isNull())
-            niInfo += i18n( " since %1" ).tqarg( nickInfo->getPrettyOnlineSince() );
+            niInfo += i18n( " since %1" ).arg( nickInfo->getPrettyOnlineSince() );
     }
     needWhois = niInfo.isEmpty();
     if (!info.isEmpty() && !needWhois) info += ' ';
diff --git a/konversation/src/notificationhandler.cpp b/konversation/src/notificationhandler.cpp
index ea5c8ef..7b615e0 100644
--- a/konversation/src/notificationhandler.cpp
+++ b/konversation/src/notificationhandler.cpp
@@ -50,7 +50,7 @@ namespace Konversation
         TQString cleanedMessage = TQStyleSheet::escape(Konversation::removeIrcMarkup(message));
         TQString cutup = addLineBreaks(cleanedMessage);
 
-        KNotifyClient::event(m_mainWindow->winId(), "message", TQString("<qt>&lt;%1&gt; %2</qt>").tqarg(fromNick).tqarg(cutup));
+        KNotifyClient::event(m_mainWindow->winId(), "message", TQString("<qt>&lt;%1&gt; %2</qt>").arg(fromNick).arg(cutup));
 
         if(!Preferences::trayNotifyOnlyOwnNick())
         {
@@ -76,7 +76,7 @@ namespace Konversation
         TQString cleanedMessage = TQStyleSheet::escape(Konversation::removeIrcMarkup(message));
         TQString cutup = addLineBreaks(cleanedMessage);
 
-        KNotifyClient::event(m_mainWindow->winId(), "nick", TQString("<qt>&lt;%1&gt; %2</qt>").tqarg(fromNick).tqarg(cutup));
+        KNotifyClient::event(m_mainWindow->winId(), "nick", TQString("<qt>&lt;%1&gt; %2</qt>").arg(fromNick).arg(cutup));
 
         startTrayNotification(chatWin);
 
@@ -86,7 +86,7 @@ namespace Konversation
             (!m_mainWindow->isActiveWindow() ||
             (chatWin != m_mainWindow->getViewContainer()->getFrontView())))
         {
-            konvApp->osd->showOSD(i18n("[HighLight] (%1) <%2> %3").tqarg(chatWin->getName()).tqarg(fromNick).tqarg(cleanedMessage));
+            konvApp->osd->showOSD(i18n("[HighLight] (%1) <%2> %3").arg(chatWin->getName()).arg(fromNick).arg(cleanedMessage));
         }
     }
 
@@ -102,7 +102,7 @@ namespace Konversation
         TQString cleanedMessage = TQStyleSheet::escape(Konversation::removeIrcMarkup(message));
         TQString cutup = addLineBreaks(cleanedMessage);
 
-        KNotifyClient::event(m_mainWindow->winId(), "queryMessage", TQString("<qt>&lt;%1&gt; %2</qt>").tqarg(fromNick).tqarg(cutup));
+        KNotifyClient::event(m_mainWindow->winId(), "queryMessage", TQString("<qt>&lt;%1&gt; %2</qt>").arg(fromNick).arg(cutup));
 
         startTrayNotification(chatWin);
 
@@ -111,7 +111,7 @@ namespace Konversation
         if(Preferences::oSDShowQuery() && (!m_mainWindow->isActiveWindow() ||
            (chatWin != m_mainWindow->getViewContainer()->getFrontView())))
         {
-            konvApp->osd->showOSD(i18n("[Query] <%1> %2").tqarg(fromNick).tqarg(cleanedMessage));
+            konvApp->osd->showOSD(i18n("[Query] <%1> %2").arg(fromNick).arg(cleanedMessage));
         }
     }
 
@@ -135,14 +135,14 @@ namespace Konversation
         if (Preferences::disableNotifyWhileAway() && chatWin->getServer() && chatWin->getServer()->isAway())
             return;
 
-        KNotifyClient::event(m_mainWindow->winId(), "join", i18n("%1 joined %2").tqarg(nick, chatWin->getName()));
+        KNotifyClient::event(m_mainWindow->winId(), "join", i18n("%1 joined %2").arg(nick, chatWin->getName()));
 
         // OnScreen Message
         if(Preferences::oSDShowChannelEvent() &&
             (!m_mainWindow->isActiveWindow() || (chatWin != m_mainWindow->getViewContainer()->getFrontView())))
         {
             KonversationApplication* konvApp = static_cast<KonversationApplication*>(kapp);
-            konvApp->osd->showOSD(i18n("%1 joined %2").tqarg(nick, chatWin->getName()));
+            konvApp->osd->showOSD(i18n("%1 joined %2").arg(nick, chatWin->getName()));
         }
     }
 
@@ -154,14 +154,14 @@ namespace Konversation
         if (Preferences::disableNotifyWhileAway() && chatWin->getServer() && chatWin->getServer()->isAway())
             return;
 
-        KNotifyClient::event(m_mainWindow->winId(), "part", i18n("%1 parted %2").tqarg(nick, chatWin->getName()));
+        KNotifyClient::event(m_mainWindow->winId(), "part", i18n("%1 parted %2").arg(nick, chatWin->getName()));
 
         // OnScreen Message
         if(Preferences::oSDShowChannelEvent() &&
             (!m_mainWindow->isActiveWindow() || (chatWin != m_mainWindow->getViewContainer()->getFrontView())))
         {
             KonversationApplication* konvApp = static_cast<KonversationApplication*>(kapp);
-            konvApp->osd->showOSD(i18n("%1 parted %2").tqarg(nick, chatWin->getName()));
+            konvApp->osd->showOSD(i18n("%1 parted %2").arg(nick, chatWin->getName()));
         }
     }
 
@@ -173,7 +173,7 @@ namespace Konversation
         if (Preferences::disableNotifyWhileAway() && chatWin->getServer() && chatWin->getServer()->isAway())
             return;
 
-        KNotifyClient::event(m_mainWindow->winId(), "part", i18n("%1 quit %2").tqarg(nick, chatWin->getServer()->getServerName()));
+        KNotifyClient::event(m_mainWindow->winId(), "part", i18n("%1 quit %2").arg(nick, chatWin->getServer()->getServerName()));
     }
 
     void NotificationHandler::nickChange(ChatWindow* chatWin, const TQString& oldNick, const TQString& newNick)
@@ -184,7 +184,7 @@ namespace Konversation
         if (Preferences::disableNotifyWhileAway() && chatWin->getServer() && chatWin->getServer()->isAway())
             return;
 
-        KNotifyClient::event(m_mainWindow->winId(), "nickchange", i18n("%1 changed nickname to %2").tqarg(oldNick, newNick));
+        KNotifyClient::event(m_mainWindow->winId(), "nickchange", i18n("%1 changed nickname to %2").arg(oldNick, newNick));
     }
 
     void NotificationHandler::dccIncoming(ChatWindow* chatWin, const TQString& fromNick)
@@ -195,7 +195,7 @@ namespace Konversation
         if (Preferences::disableNotifyWhileAway() && chatWin->getServer() && chatWin->getServer()->isAway())
             return;
 
-        KNotifyClient::event(m_mainWindow->winId(), "dcc_incoming", i18n("%1 wants to send a file to you").tqarg(fromNick));
+        KNotifyClient::event(m_mainWindow->winId(), "dcc_incoming", i18n("%1 wants to send a file to you").arg(fromNick));
     }
 
     void NotificationHandler::mode(ChatWindow* chatWin, const TQString& /*nick*/)
@@ -220,7 +220,7 @@ namespace Konversation
         startTrayNotification(chatWin);
 
         KNotifyClient::event(m_mainWindow->winId(), "query",
-            i18n("%1 has started a conversation (query) with you.").tqarg(fromNick));
+            i18n("%1 has started a conversation (query) with you.").arg(fromNick));
     }
 
     void NotificationHandler::nickOnline(ChatWindow* chatWin, const TQString& nick)
@@ -232,7 +232,7 @@ namespace Konversation
             return;
 
         KNotifyClient::event(m_mainWindow->winId(), "notify",
-            i18n("%1 is online (%2).").tqarg(nick).tqarg(chatWin->getServer()->getServerName()));
+            i18n("%1 is online (%2).").arg(nick).arg(chatWin->getServer()->getServerName()));
     }
 
     void NotificationHandler::nickOffline(ChatWindow* chatWin, const TQString& nick)
@@ -244,7 +244,7 @@ namespace Konversation
             return;
 
         KNotifyClient::event(m_mainWindow->winId(), "notify",
-            i18n("%1 went offline (%2).").tqarg(nick).tqarg(chatWin->getServer()->getServerName()));
+            i18n("%1 went offline (%2).").arg(nick).arg(chatWin->getServer()->getServerName()));
     }
 
     void NotificationHandler::kick(ChatWindow* chatWin, const TQString& channel,const TQString& nick)
@@ -256,7 +256,7 @@ namespace Konversation
             return;
 
         KNotifyClient::event(m_mainWindow->winId(), "kick",
-            i18n("You are kicked by %1 from %2").tqarg(nick).tqarg(channel));
+            i18n("You are kicked by %1 from %2").arg(nick).arg(channel));
     }
 
     void NotificationHandler::dccChat(ChatWindow* chatWin, const TQString& nick)
@@ -268,7 +268,7 @@ namespace Konversation
             return;
 
         KNotifyClient::event(m_mainWindow->winId(), "dccChat",
-            i18n("%1 started a dcc chat with you").tqarg(nick));
+            i18n("%1 started a dcc chat with you").arg(nick));
     }
 
     void NotificationHandler::highlight(ChatWindow* chatWin, const TQString& fromNick, const TQString& message)
@@ -288,10 +288,10 @@ namespace Konversation
             // if there was no nick associated, this must be a command message, so don't try displaying
             // an empty nick in <>
             if(fromNick.isEmpty())
-                konvApp->osd->showOSD(i18n("[HighLight] (%1) *** %2").tqarg(chatWin->getName()).tqarg(message));
+                konvApp->osd->showOSD(i18n("[HighLight] (%1) *** %2").arg(chatWin->getName()).arg(message));
             // normal highlight message
             else
-                konvApp->osd->showOSD(i18n("[HighLight] (%1) <%2> %3").tqarg(chatWin->getName()).tqarg(fromNick).tqarg(message));
+                konvApp->osd->showOSD(i18n("[HighLight] (%1) <%2> %3").arg(chatWin->getName()).arg(fromNick).arg(message));
         }
     }
 
@@ -301,7 +301,7 @@ namespace Konversation
             return;
 
         KNotifyClient::event(m_mainWindow->winId(), "connectionFailure",
-            i18n("Failed to connect to %1").tqarg(server));
+            i18n("Failed to connect to %1").arg(server));
     }
 
     void NotificationHandler::channelJoin(ChatWindow* chatWin, const TQString& channel)
@@ -312,7 +312,7 @@ namespace Konversation
         if (Preferences::disableNotifyWhileAway() && chatWin->getServer() && chatWin->getServer()->isAway())
             return;
 
-        KNotifyClient::event(m_mainWindow->winId(), "channelJoin", i18n("You have joined %1.").tqarg(channel));
+        KNotifyClient::event(m_mainWindow->winId(), "channelJoin", i18n("You have joined %1.").arg(channel));
     }
 
     TQString NotificationHandler::addLineBreaks(const TQString& string)
diff --git a/konversation/src/osd.cpp b/konversation/src/osd.cpp
index 8bd1745..9935576 100644
--- a/konversation/src/osd.cpp
+++ b/konversation/src/osd.cpp
@@ -34,7 +34,7 @@ OSDWidget::OSDWidget( const TQString &appName, TQWidget *parent, const char *nam
 , m_appName( appName )
 , m_duration( 5000 )
 , m_shadow( true )
-, m_tqalignment( Middle )
+, m_alignment( Middle )
 , m_screen( 0 )
 , m_y( MARGIN )
 , m_dirty( false )
@@ -208,7 +208,7 @@ void OSDWidget::setOffset( int /*x*/, int y )
 
 void OSDWidget::setAlignment( Alignment a )
 {
-    m_tqalignment = a;
+    m_alignment = a;
     reposition();
 }
 
@@ -277,7 +277,7 @@ void OSDWidget::reposition( TQSize newSize )
 
     //TODO m_y is the middle of the OSD, and don't exceed screen margins
 
-    switch ( m_tqalignment )
+    switch ( m_alignment )
     {
         case Left:
             break;
@@ -371,12 +371,12 @@ void OSDPreviewWidget::mouseMoveEvent( TQMouseEvent *e )
 
         if( eGlobalPosX < (hcenter-snapZone) )
         {
-            m_tqalignment = Left;
+            m_alignment = Left;
             destination.rx() = MARGIN;
         }
         else if( eGlobalPosX > (hcenter+snapZone) )
         {
-            m_tqalignment = Right;
+            m_alignment = Right;
             destination.rx() = screen.width() - MARGIN - width();
         }
         else
@@ -388,10 +388,10 @@ void OSDPreviewWidget::mouseMoveEvent( TQMouseEvent *e )
 
             if( eGlobalPosY >= (vcenter-snapZone) && eGlobalPosY <= (vcenter+snapZone) )
             {
-                m_tqalignment = Center;
+                m_alignment = Center;
                 destination.ry() = vcenter - height()/2;
             }
-            else m_tqalignment = Middle;
+            else m_alignment = Middle;
         }
 
         destination += screen.topLeft();
diff --git a/konversation/src/osd.h b/konversation/src/osd.h
index f71f1d7..9dac20a 100644
--- a/konversation/src/osd.h
+++ b/konversation/src/osd.h
@@ -48,7 +48,7 @@ class OSDWidget : public TQWidget
         void unsetColors();
 
         int screen()    { return m_screen; }
-        int tqalignment() { return m_tqalignment; }
+        int alignment() { return m_alignment; }
         int y()         { return m_y; }
 
     signals:
@@ -93,7 +93,7 @@ class OSDWidget : public TQWidget
         TQString     m_currentText;
         bool        m_shadow;
 
-        Alignment   m_tqalignment;
+        Alignment   m_alignment;
         int         m_screen;
         uint        m_y;
 
diff --git a/konversation/src/osd_preferences.cpp b/konversation/src/osd_preferences.cpp
index 7a765ef..61e8115 100644
--- a/konversation/src/osd_preferences.cpp
+++ b/konversation/src/osd_preferences.cpp
@@ -143,7 +143,7 @@ void OSD_Config::slotPositionChanged()
 {
     kcfg_OSDScreen->setCurrentItem(m_pOSDPreview->screen());
 
-    kcfg_OSDAlignment->setValue( m_pOSDPreview->tqalignment() );
+    kcfg_OSDAlignment->setValue( m_pOSDPreview->alignment() );
     kcfg_OSDOffsetX->setValue( m_pOSDPreview->x());
     kcfg_OSDOffsetY->setValue( m_pOSDPreview->y());
 }
diff --git a/konversation/src/outputfilter.cpp b/konversation/src/outputfilter.cpp
index 749e278..46dee2f 100644
--- a/konversation/src/outputfilter.cpp
+++ b/konversation/src/outputfilter.cpp
@@ -334,7 +334,7 @@ namespace Konversation
         else if(parameter == "off")
             konvApp->showQueueTuner(false);
         else
-            result = usage(i18n("Usage: %1queuetuner [on | off]").tqarg(commandChar));
+            result = usage(i18n("Usage: %1queuetuner [on | off]").arg(commandChar));
 
         return result;
     }
@@ -380,7 +380,7 @@ namespace Konversation
         if (channelName.isEmpty())
         {
             if (destination.isEmpty() || !isAChannel(destination))
-                return usage(i18n("Usage: %1JOIN <channel> [password]").tqarg(commandChar));
+                return usage(i18n("Usage: %1JOIN <channel> [password]").arg(commandChar));
             channelName=destination;
         }
         else if (!isAChannel(channelName))
@@ -413,7 +413,7 @@ namespace Konversation
 
             if(victim.isEmpty())
             {
-                result = usage(i18n("Usage: %1KICK <nick> [reason]").tqarg(commandChar));
+                result = usage(i18n("Usage: %1KICK <nick> [reason]").arg(commandChar));
             }
             else
             {
@@ -431,7 +431,7 @@ namespace Konversation
         }
         else
         {
-            result = error(i18n("%1KICK only works from within channels.").tqarg(commandChar));
+            result = error(i18n("%1KICK only works from within channels.").arg(commandChar));
         }
 
         return result;
@@ -451,7 +451,7 @@ namespace Konversation
             }
             else
             {
-                result = error(i18n("%1PART without parameters only works from within a channel or a query.").tqarg(commandChar));
+                result = error(i18n("%1PART without parameters only works from within a channel or a query.").arg(commandChar));
             }
         }
         else
@@ -481,7 +481,7 @@ namespace Konversation
                 }
                 else
                 {
-                    result = error(i18n("%1PART without channel name only works from within a channel.").tqarg(commandChar));
+                    result = error(i18n("%1PART without channel name only works from within a channel.").arg(commandChar));
                 }
             }
         }
@@ -503,7 +503,7 @@ namespace Konversation
             }
             else
             {
-                result = error(i18n("%1TOPIC without parameters only works from within a channel.").tqarg(commandChar));
+                result = error(i18n("%1TOPIC without parameters only works from within a channel.").arg(commandChar));
             }
         }
         else
@@ -545,7 +545,7 @@ namespace Konversation
                 }
                 else
                 {
-                    result = error(i18n("%1TOPIC without channel name only works from within a channel.").tqarg(commandChar));
+                    result = error(i18n("%1TOPIC without channel name only works from within a channel.").arg(commandChar));
                 }
             }
         }
@@ -572,7 +572,7 @@ namespace Konversation
         result.toServer = "NAMES ";
         if (parameter.isNull())
         {
-            return error(i18n("%1NAMES with no target may disconnect you from the server. Specify '*' if you really want this.").tqarg(commandChar));
+            return error(i18n("%1NAMES with no target may disconnect you from the server. Specify '*' if you really want this.").arg(commandChar));
         }
         else if (parameter != TQChar('*'))
         {
@@ -593,7 +593,7 @@ namespace Konversation
         else if (parm.isEmpty()) // this can only mean one thing.. we're in the Server tab
             m_server->closeYourself(false);
         else
-            return usage(i18n("Usage: %1close [window] closes the named channel or query tab, or the current tab if none specified.").tqarg(commandChar));
+            return usage(i18n("Usage: %1close [window] closes the named channel or query tab, or the current tab if none specified.").arg(commandChar));
         return OutputFilterResult();
     }
 
@@ -619,13 +619,13 @@ namespace Konversation
 
         if(parameter.isEmpty() || message.isEmpty())
         {
-            result = usage(i18n("Usage: %1NOTICE <recipient> <message>").tqarg(commandChar));
+            result = usage(i18n("Usage: %1NOTICE <recipient> <message>").arg(commandChar));
         }
         else
         {
             result.typeString = i18n("Notice");
             result.toServer = "NOTICE " + recipient + " :" + message;
-            result.output=i18n("%1 is the message, %2 the recipient nickname","Sending notice \"%2\" to %1.").tqarg(recipient).tqarg(message);
+            result.output=i18n("%1 is the message, %2 the recipient nickname","Sending notice \"%2\" to %1.").arg(recipient).arg(message);
             result.type = Program;
         }
 
@@ -644,7 +644,7 @@ namespace Konversation
         }
         else
         {
-            result = usage(i18n("Usage: %1ME text").tqarg(commandChar));
+            result = usage(i18n("Usage: %1ME text").arg(commandChar));
         }
 
         return result;
@@ -681,7 +681,7 @@ namespace Konversation
         else if (message.startsWith(commandChar+"me"))
         {
             result.toServer = "PRIVMSG " + recipient + " :" + '\x01' + "ACTION " + message.mid(4) + '\x01';
-            output = TQString("* %1 %2").tqarg(myNick).tqarg(message.mid(4));
+            output = TQString("* %1 %2").arg(myNick).arg(message.mid(4));
         }
         else
         {
@@ -763,13 +763,13 @@ namespace Konversation
         if (request == "PING")
         {
             unsigned int time_t = TQDateTime::currentDateTime().toTime_t();
-            result.toServer = TQString("PRIVMSG %1 :\x01PING %2\x01").tqarg(recipient).tqarg(time_t);
-            result.output = i18n("Sending CTCP-%1 request to %2.").tqarg("PING").tqarg(recipient);
+            result.toServer = TQString("PRIVMSG %1 :\x01PING %2\x01").arg(recipient).arg(time_t);
+            result.output = i18n("Sending CTCP-%1 request to %2.").arg("PING").arg(recipient);
         }
         else
         {
             result.toServer = "PRIVMSG " + recipient + " :" + '\x01' + out + '\x01';
-            result.output = i18n("Sending CTCP-%1 request to %2.").tqarg(out).tqarg(recipient);
+            result.output = i18n("Sending CTCP-%1 request to %2.").arg(out).arg(recipient);
         }
 
         result.typeString = i18n("CTCP");
@@ -863,7 +863,7 @@ namespace Konversation
                 else if(parameterList.count()>2)
                 {
                     // TODO: make sure this will work:
-                    //output=i18n("Usage: %1DCC SEND nickname [fi6lename] [filename] ...").tqarg(commandChar);
+                    //output=i18n("Usage: %1DCC SEND nickname [fi6lename] [filename] ...").arg(commandChar);
                     KURL fileURL(parameterList[2]);
 
                     //We could easily check if the remote file exists, but then we might
@@ -874,12 +874,12 @@ namespace Konversation
                     }
                     else
                     {
-                        result = error(i18n("File \"%1\" does not exist.").tqarg(parameterList[2]));
+                        result = error(i18n("File \"%1\" does not exist.").arg(parameterList[2]));
                     }
                 }
                 else                              // Don't know how this should happen, but ...
                 {
-                    result = usage(i18n("Usage: %1DCC [SEND nickname filename]").tqarg(commandChar));
+                    result = usage(i18n("Usage: %1DCC [SEND nickname filename]").arg(commandChar));
                 }
             }
             // TODO: DCC Chat etc. comes here
@@ -891,12 +891,12 @@ namespace Konversation
                 }
                 else
                 {
-                    result = usage(i18n("Usage: %1DCC [CHAT nickname]").tqarg(commandChar));
+                    result = usage(i18n("Usage: %1DCC [CHAT nickname]").arg(commandChar));
                 }
             }
             else
             {
-                result = error(i18n("Unrecognized command %1DCC %2. Possible commands are SEND, CHAT, CLOSE.").tqarg(commandChar).tqarg(parameterList[0]));
+                result = error(i18n("Unrecognized command %1DCC %2. Possible commands are SEND, CHAT, CLOSE.").arg(commandChar).arg(parameterList[0]));
             }
         }
 
@@ -993,7 +993,7 @@ namespace Konversation
 
         if(parameter.isEmpty())
         {
-            result = usage(i18n("Usage: %1INVITE <nick> [channel]").tqarg(commandChar));
+            result = usage(i18n("Usage: %1INVITE <nick> [channel]").arg(commandChar));
         }
         else
         {
@@ -1008,7 +1008,7 @@ namespace Konversation
                 }
                 else
                 {
-                    result = error(i18n("%1INVITE without channel name works only from within channels.").tqarg(commandChar));
+                    result = error(i18n("%1INVITE without channel name works only from within channels.").arg(commandChar));
                 }
             }
 
@@ -1020,7 +1020,7 @@ namespace Konversation
                 }
                 else
                 {
-                    result = error(i18n("%1 is not a channel.").tqarg(channel));
+                    result = error(i18n("%1 is not a channel.").arg(channel));
                 }
             }
         }
@@ -1034,7 +1034,7 @@ namespace Konversation
 
         if(parameter.isEmpty())
         {
-            result = usage(i18n("Usage: %1EXEC <script> [parameter list]").tqarg(commandChar));
+            result = usage(i18n("Usage: %1EXEC <script> [parameter list]").arg(commandChar));
         }
         else
         {
@@ -1067,7 +1067,7 @@ namespace Konversation
         }
         else
         {
-            result = usage(i18n("Usage: %1RAW [OPEN | CLOSE]").tqarg(commandChar));
+            result = usage(i18n("Usage: %1RAW [OPEN | CLOSE]").arg(commandChar));
         }
 
         return result;
@@ -1110,7 +1110,7 @@ namespace Konversation
         if(list.isEmpty())
             result.output = i18n("Current notify list is empty.");
         else
-            result.output = i18n("Current notify list: %1").tqarg(list);
+            result.output = i18n("Current notify list: %1").arg(list);
 
         result.type = Program;
         return result;
@@ -1191,9 +1191,9 @@ namespace Konversation
                 {
                     // destination is no channel => error
                     if (!kick)
-                        result = error(i18n("%1BAN without channel name works only from inside a channel.").tqarg(commandChar));
+                        result = error(i18n("%1BAN without channel name works only from inside a channel.").arg(commandChar));
                     else
-                        result = error(i18n("%1KICKBAN without channel name works only from inside a channel.").tqarg(commandChar));
+                        result = error(i18n("%1KICKBAN without channel name works only from inside a channel.").arg(commandChar));
 
                     // no usage information after error
                     showUsage = false;
@@ -1226,9 +1226,9 @@ namespace Konversation
         if (showUsage)
         {
             if (!kick)
-                result = usage(i18n("Usage: %1BAN [-HOST | -DOMAIN | -USERHOST | -USERDOMAIN] [channel] <user|mask>").tqarg(commandChar));
+                result = usage(i18n("Usage: %1BAN [-HOST | -DOMAIN | -USERHOST | -USERDOMAIN] [channel] <user|mask>").arg(commandChar));
             else
-                result = usage(i18n("Usage: %1KICKBAN [-HOST | -DOMAIN | -USERHOST | -USERDOMAIN] [channel] <user|mask> [reason]").tqarg(commandChar));
+                result = usage(i18n("Usage: %1KICKBAN [-HOST | -DOMAIN | -USERHOST | -USERDOMAIN] [channel] <user|mask> [reason]").arg(commandChar));
         }
 
         return result;
@@ -1268,7 +1268,7 @@ namespace Konversation
             else
             {
                 // destination is no channel => error
-                result = error(i18n("%1UNBAN without channel name works only from inside a channel.").tqarg(commandChar));
+                result = error(i18n("%1UNBAN without channel name works only from inside a channel.").arg(commandChar));
                 // no usage information after error
                 showUsage = false;
             }
@@ -1283,7 +1283,7 @@ namespace Konversation
 
         if(showUsage)
         {
-            result = usage(i18n("Usage: %1UNBAN [channel] pattern").tqarg(commandChar));
+            result = usage(i18n("Usage: %1UNBAN [channel] pattern").arg(commandChar));
         }
 
         return result;
@@ -1331,7 +1331,7 @@ namespace Konversation
                     Preferences::addIgnore(parameterList[index] + ',' + TQString::number(value));
                 }
 
-                result.output = i18n("Added %1 to your ignore list.").tqarg(parameterList.join(", "));
+                result.output = i18n("Added %1 to your ignore list.").arg(parameterList.join(", "));
                 result.typeString = i18n("Ignore");
                 result.type = Program;
 
@@ -1342,7 +1342,7 @@ namespace Konversation
 
         if(showUsage)
         {
-            result = usage(i18n("Usage: %1IGNORE [ -ALL ] <user 1> <user 2> ... <user n>").tqarg(commandChar));
+            result = usage(i18n("Usage: %1IGNORE [ -ALL ] <user 1> <user 2> ... <user n>").arg(commandChar));
         }
 
         return result;
@@ -1354,7 +1354,7 @@ namespace Konversation
 
         if(parameter.isEmpty())
         {
-            result = usage(i18n("Usage: %1UNIGNORE <user 1> <user 2> ... <user n>").tqarg(commandChar));
+            result = usage(i18n("Usage: %1UNIGNORE <user 1> <user 2> ... <user n>").arg(commandChar));
         }
         else
         {
@@ -1404,19 +1404,19 @@ namespace Konversation
             // Print all successful unignores, in case there were any
             if (succeeded.count()>=1)
             {
-                m_server->appendMessageToFrontmost(i18n("Ignore"),i18n("Removed %1 from your ignore list.").tqarg(succeeded.join(", ")));
+                m_server->appendMessageToFrontmost(i18n("Ignore"),i18n("Removed %1 from your ignore list.").arg(succeeded.join(", ")));
             }
 
             // One failed unignore
             if (failed.count()==1)
             {
-                m_server->appendMessageToFrontmost(i18n("Error"),i18n("No such ignore: %1").tqarg(failed.join(", ")));
+                m_server->appendMessageToFrontmost(i18n("Error"),i18n("No such ignore: %1").arg(failed.join(", ")));
             }
 
             // Multiple failed unignores
             if (failed.count()>1)
             {
-                m_server->appendMessageToFrontmost(i18n("Error"),i18n("No such ignores: %1").tqarg(failed.join(", ")));
+                m_server->appendMessageToFrontmost(i18n("Error"),i18n("No such ignores: %1").arg(failed.join(", ")));
             }
         }
 
@@ -1429,7 +1429,7 @@ namespace Konversation
 
         if(parameter.isEmpty())
         {
-            result = usage(i18n("Usage: %1TQUOTE command list").tqarg(commandChar));
+            result = usage(i18n("Usage: %1TQUOTE command list").arg(commandChar));
         }
         else
         {
@@ -1445,7 +1445,7 @@ namespace Konversation
 
         if(parameter.isEmpty())
         {
-            result = usage(i18n("Usage: %1SAY text").tqarg(commandChar));
+            result = usage(i18n("Usage: %1SAY text").arg(commandChar));
         }
         else
         {
@@ -1507,7 +1507,7 @@ namespace Konversation
 
         if(parameter.isEmpty())
         {
-            result = usage(i18n("Usage: %1AME text").tqarg(commandChar));
+            result = usage(i18n("Usage: %1AME text").arg(commandChar));
         }
 
         emit multiServerCommand("me", parameter);
@@ -1520,7 +1520,7 @@ namespace Konversation
 
         if(parameter.isEmpty())
         {
-            result = usage(i18n("Usage: %1AMSG text").tqarg(commandChar));
+            result = usage(i18n("Usage: %1AMSG text").arg(commandChar));
         }
 
         emit multiServerCommand("msg", parameter);
@@ -1562,7 +1562,7 @@ namespace Konversation
         }
         else
         {
-            result = usage(i18n("Usage: %1OMSG text").tqarg(commandChar));
+            result = usage(i18n("Usage: %1OMSG text").arg(commandChar));
         }
 
         return result;
@@ -1577,11 +1577,11 @@ namespace Konversation
             result.toServer = "NOTICE @"+destination+" :"+parameter;
             result.typeString = i18n("Notice");
             result.type = Program;
-            result.output = i18n("Sending notice \"%1\" to %2.").tqarg(parameter, destination);
+            result.output = i18n("Sending notice \"%1\" to %2.").arg(parameter, destination);
         }
         else
         {
-            result = usage(i18n("Usage: %1ONOTICE text").tqarg(commandChar));
+            result = usage(i18n("Usage: %1ONOTICE text").arg(commandChar));
         }
 
         return result;
@@ -1594,7 +1594,7 @@ namespace Konversation
         if (charset.isEmpty ())
         {
             result = info (i18n("Current encoding is: %1")
-                    .tqarg(m_server->getIdentity()->getCodec()->name()));
+                    .arg(m_server->getIdentity()->getCodec()->name()));
             return result;
         }
 
@@ -1604,7 +1604,7 @@ namespace Konversation
         {
             m_server->getIdentity()->setCodecName(shortName);
             emit encodingChanged();
-            result = info (i18n("Switched to %1 encoding.").tqarg(shortName));
+            result = info (i18n("Switched to %1 encoding.").arg(shortName));
         }
         else
         {
@@ -1620,7 +1620,7 @@ namespace Konversation
         TQStringList parms = TQStringList::split(" ", parameter);
 
         if (parms.count() == (0 >> parms.count() > 2))
-            return usage(i18n("Usage: %1setkey [<nick|channel>] <key> sets the encryption key for nick or channel. %2setkey <key> when in a channel or query tab to set the key for it.").tqarg(commandChar).tqarg(commandChar) );
+            return usage(i18n("Usage: %1setkey [<nick|channel>] <key> sets the encryption key for nick or channel. %2setkey <key> when in a channel or query tab to set the key for it.").arg(commandChar).arg(commandChar) );
         else if (parms.count() == 1)
             parms.prepend(destination);
 
@@ -1631,7 +1631,7 @@ namespace Konversation
         else if (m_server->getQueryByName(parms[0]))
             m_server->getQueryByName(parms[0])->setEncryptedOutput(true);
 
-        return info(i18n("The key for %1 has been set.").tqarg(parms[0]));
+        return info(i18n("The key for %1 has been set.").arg(parms[0]));
     }
 
     OutputFilterResult OutputFilter::parseDelKey(const TQString& prametr)
@@ -1639,7 +1639,7 @@ namespace Konversation
         TQString parameter(prametr.isEmpty()?destination:prametr);
 
         if(parameter.isEmpty() || parameter.contains(' '))
-            return usage(i18n("Usage: %1delkey <nick> or <channel> deletes the encryption key for nick or channel").tqarg(commandChar));
+            return usage(i18n("Usage: %1delkey <nick> or <channel> deletes the encryption key for nick or channel").arg(commandChar));
 
         m_server->setKeyForRecipient(parameter, "");
 
@@ -1648,7 +1648,7 @@ namespace Konversation
         else if (m_server->getQueryByName(parameter))
             m_server->getQueryByName(parameter)->setEncryptedOutput(false);
 
-        return info(i18n("The key for %1 has been deleted.").tqarg(parameter));
+        return info(i18n("The key for %1 has been deleted.").arg(parameter));
     }
 
     OutputFilterResult OutputFilter::parseShowKey(const TQString& prametr)
@@ -1657,9 +1657,9 @@ namespace Konversation
         TQString key(m_server->getKeyForRecipient(parameter));
         TQWidget *mw=KonversationApplication::instance()->getMainWindow();
         if (!key.isEmpty())
-            KMessageBox::information(mw, i18n("The key for %1 is \"%2\".").tqarg(parameter).tqarg(key), i18n("Blowfish"));
+            KMessageBox::information(mw, i18n("The key for %1 is \"%2\".").arg(parameter).arg(key), i18n("Blowfish"));
         else
-            KMessageBox::information(mw, i18n("No key has been set for %1.").tqarg(parameter));
+            KMessageBox::information(mw, i18n("No key has been set for %1.").arg(parameter));
         OutputFilterResult result;
         return result;
     }
@@ -1679,7 +1679,7 @@ namespace Konversation
 
         if(parameter.isEmpty())
         {
-            result = usage(i18n("Usage: %1DNS <nick>").tqarg(commandChar));
+            result = usage(i18n("Usage: %1DNS <nick>").arg(commandChar));
         }
         else
         {
@@ -1702,12 +1702,12 @@ namespace Konversation
                 if (KNetwork::KReverseResolver::resolve(socketAddress,resolvedTarget,serv))
                 {
                     result.typeString = i18n("DNS");
-                    result.output = i18n("Resolved %1 to: %2").tqarg(target).tqarg(resolvedTarget);
+                    result.output = i18n("Resolved %1 to: %2").arg(target).arg(resolvedTarget);
                     result.type = Program;
                 }
                 else
                 {
-                    result = error(i18n("Unable to resolve %1").tqarg(target));
+                    result = error(i18n("Unable to resolve %1").arg(target));
                 }
 #else
                 result = error(i18n("Reverse-resolving requires KDE version 3.5.1 or higher."));
@@ -1724,12 +1724,12 @@ namespace Konversation
                 {
                     TQString resolvedTarget = resolved.first().address().nodeName();
                     result.typeString = i18n("DNS");
-                    result.output = i18n("Resolved %1 to: %2").tqarg(target).tqarg(resolvedTarget);
+                    result.output = i18n("Resolved %1 to: %2").arg(target).arg(resolvedTarget);
                     result.type = Program;
                 }
                 else
                 {
-                    result = error(i18n("Unable to resolve %1").tqarg(target));
+                    result = error(i18n("Unable to resolve %1").arg(target));
                 }
             }
             // Parameter is either host nor IP, so request a lookup from server, which in
@@ -1773,7 +1773,7 @@ namespace Konversation
 
         if(parameter.isEmpty())
         {
-            result = usage(i18n("Usage: %1KILL <nick> [comment]").tqarg(commandChar));
+            result = usage(i18n("Usage: %1KILL <nick> [comment]").arg(commandChar));
         }
         else
         {
diff --git a/konversation/src/query.cpp b/konversation/src/query.cpp
index b04c703..685dc8f 100644
--- a/konversation/src/query.cpp
+++ b/konversation/src/query.cpp
@@ -385,7 +385,7 @@ void Query::popup(int id)
 
         case Konversation::IgnoreNick:
         {
-            if (KMessageBox::warningContinueCancel(this, i18n("Do you want to ignore %1?").tqarg(name),
+            if (KMessageBox::warningContinueCancel(this, i18n("Do you want to ignore %1?").arg(name),
                 i18n("Ignore"), i18n("Ignore"), "IgnoreNick") == KMessageBox::Continue)
             {
                 sendQueryText(Preferences::commandChar()+"IGNORE -ALL "+name);
@@ -405,7 +405,7 @@ void Query::popup(int id)
         }
         case Konversation::UnignoreNick:
         {
-            TQString question = i18n("Do you want to stop ignoring %1?").tqarg(name);
+            TQString question = i18n("Do you want to stop ignoring %1?").arg(name);
 
             if (KMessageBox::warningContinueCancel(this, question, i18n("Unignore"), i18n("Unignore"), "UnignoreNick") ==
                 KMessageBox::Continue)
@@ -590,14 +590,14 @@ TQString Query::getChannelEncoding()               // virtual
 
 TQString Query::getChannelEncodingDefaultDesc()    // virtual
 {
-    return i18n("Identity Default ( %1 )").tqarg(getServer()->getIdentity()->getCodecName());
+    return i18n("Identity Default ( %1 )").arg(getServer()->getIdentity()->getCodecName());
 }
 
 bool Query::closeYourself(bool confirm)
 {
     int result = KMessageBox::Continue;
     if (confirm)
-        result=KMessageBox::warningContinueCancel(this, i18n("Do you want to close your query with %1?").tqarg(getName()), i18n("Close Query"), i18n("Close"), "QuitQueryTab");
+        result=KMessageBox::warningContinueCancel(this, i18n("Do you want to close your query with %1?").arg(getName()), i18n("Close Query"), i18n("Close"), "QuitQueryTab");
 
     if (result == KMessageBox::Continue)
     {
@@ -659,14 +659,14 @@ void Query::quitNick(const TQString& reason)
 
     if (displayReason.isEmpty())
     {
-        appendCommandMessage(i18n("Quit"),i18n("%1 has left this server.").tqarg(getName()),false);
+        appendCommandMessage(i18n("Quit"),i18n("%1 has left this server.").arg(getName()),false);
     }
     else
     {
         if (displayReason.find(TQRegExp("[\\0000-\\0037]"))!=-1)
             displayReason+="\017";
 
-        appendCommandMessage(i18n("Quit"),i18n("%1 has left this server (%2).").tqarg(getName()).tqarg(displayReason),false);
+        appendCommandMessage(i18n("Quit"),i18n("%1 has left this server (%2).").arg(getName()).arg(displayReason),false);
     }
 }
 
diff --git a/konversation/src/quickbuttons_preferences.cpp b/konversation/src/quickbuttons_preferences.cpp
index 6c84c9d..564e1ee 100644
--- a/konversation/src/quickbuttons_preferences.cpp
+++ b/konversation/src/quickbuttons_preferences.cpp
@@ -98,7 +98,7 @@ void QuickButtons_Config::saveSettings()
     for(unsigned int index=0;index<newList.count();index++)
     {
       // write the current button's name and definition
-      config->writeEntry(TQString("Button%1").tqarg(index),newList[index]);
+      config->writeEntry(TQString("Button%1").arg(index),newList[index]);
     } // for
   }
   // if there were no buttons at all, write a dummy entry to prevent KConfigXT from "optimizing"
diff --git a/konversation/src/server.cpp b/konversation/src/server.cpp
index f6cf5ad..d65d24f 100644
--- a/konversation/src/server.cpp
+++ b/konversation/src/server.cpp
@@ -413,8 +413,8 @@ void Server::connectToIRCServer()
         // set up the connection details
         setPrefixes(m_serverNickPrefixModes, m_serverNickPrefixes);
         getStatusView()->appendServerMessage(i18n("Info"),i18n("Looking for server %1:%2...")
-            .tqarg(getConnectionSettings().server().host())
-            .tqarg(getConnectionSettings().server().port()));
+            .arg(getConnectionSettings().server().host())
+            .arg(getConnectionSettings().server().port()));
         // reset InputFilter (auto request info, /WHO request info)
         m_inputFilter.reset();
     }
@@ -534,8 +534,8 @@ void Server::lookupFinished()
     {
         // inform user about the error
         getStatusView()->appendServerMessage(i18n("Error"),i18n("Server %1 not found: %2")
-            .tqarg(getConnectionSettings().server().host())
-            .tqarg(m_socket->KSocketBase::errorString(m_socket->error())));
+            .arg(getConnectionSettings().server().host())
+            .arg(m_socket->KSocketBase::errorString(m_socket->error())));
 
         m_socket->resetStatus();
 
@@ -607,8 +607,8 @@ void Server::broken(int state)
         static_cast<KonversationApplication*>(kapp)->notificationHandler()->connectionFailure(getStatusView(), getServerName());
 
         TQString error = i18n("Connection to Server %1 lost: %2.")
-            .tqarg(getConnectionSettings().server().host())
-            .tqarg(KNetwork::KSocketBase::errorString((KNetwork::KSocketBase::SocketError)state));
+            .arg(getConnectionSettings().server().host())
+            .arg(KNetwork::KSocketBase::errorString((KNetwork::KSocketBase::SocketError)state));
 
         getStatusView()->appendServerMessage(i18n("Error"), error);
 
@@ -619,9 +619,9 @@ void Server::broken(int state)
 void Server::sslError(const TQString& reason)
 {
     TQString error = i18n("Could not connect to %1:%2 using SSL encryption.Maybe the server does not support SSL, or perhaps you have the wrong port? %3")
-        .tqarg(getConnectionSettings().server().host())
-        .tqarg(getConnectionSettings().server().port())
-        .tqarg(reason);
+        .arg(getConnectionSettings().server().host())
+        .arg(getConnectionSettings().server().port())
+        .arg(reason);
     getStatusView()->appendServerMessage(i18n("SSL Connection Error"),error);
 
     updateConnectionState(Konversation::SSDeliberatelyDisconnected);
@@ -707,7 +707,7 @@ void Server::quitServer()
 
     m_socket->close();
 
-    getStatusView()->appendServerMessage(i18n("Info"), i18n("Disconnected from %1.").tqarg(getConnectionSettings().server().host()));
+    getStatusView()->appendServerMessage(i18n("Info"), i18n("Disconnected from %1.").arg(getConnectionSettings().server().host()));
 }
 
 void Server::notifyAction(const TQString& nick)
@@ -857,7 +857,7 @@ TQString Server::getNextNickname()
 
     if (newNick.isNull())
     {
-        TQString inputText = i18n("No nicknames from the \"%1\" identity were accepted by the connection \"%2\".\nPlease enter a new one or press Cancel to disconnect:").tqarg(getIdentity()->getName()).tqarg(getDisplayName());
+        TQString inputText = i18n("No nicknames from the \"%1\" identity were accepted by the connection \"%2\".\nPlease enter a new one or press Cancel to disconnect:").arg(getIdentity()->getName()).arg(getDisplayName());
         newNick = KInputDialog::getText(i18n("Nickname error"), inputText,
                                         TQString(), 0, getStatusView(), "NickChangeDialog");
     }
@@ -908,7 +908,7 @@ void Server::incoming()
     {
         getStatusView()->appendServerMessage(i18n("Error"),
             i18n("There was an error reading the data from the server: %1").
-            tqarg(m_socket->KSocketBase::errorString()));
+            arg(m_socket->KSocketBase::errorString()));
 
         broken(m_socket->error());
         return;
@@ -1633,7 +1633,7 @@ void Server::requestDccSend(const TQString &a_recipient)
             ":lastDccDir",
             TQString(),
             getViewContainer()->getWindow(),
-            i18n("Select File(s) to Send to %1").tqarg(recipient)
+            i18n("Select File(s) to Send to %1").arg(recipient)
         );
         KURL::List::iterator it;
         for ( it = fileURLs.begin() ; it != fileURLs.end() ; ++it )
@@ -1709,7 +1709,7 @@ void Server::addDccGet(const TQString &sourceNick, const TQStringList &dccArgume
 
         appendMessageToFrontmost( i18n( "DCC" ),
                                   i18n( "%1 offers to send you \"%2\" (%3)..." )
-                                  .tqarg( newDcc->getPartnerNick(),
+                                  .arg( newDcc->getPartnerNick(),
                                         showfile,
                                         ( newDcc->getFileSize() == 0 ) ? i18n( "unknown size" ) : KIO::convertSize( newDcc->getFileSize() ) ) );
 
@@ -1725,7 +1725,7 @@ void Server::openDccChat(const TQString& nickname)
 
 void Server::requestDccChat(const TQString& partnerNick, const TQString& numericalOwnIp, const TQString& ownPort)
 {
-    queue(TQString("PRIVMSG %1 :\001DCC CHAT chat %2 %3\001").tqarg(partnerNick).tqarg(numericalOwnIp).tqarg(ownPort));
+    queue(TQString("PRIVMSG %1 :\001DCC CHAT chat %2 %3\001").arg(partnerNick).arg(numericalOwnIp).arg(ownPort));
 }
 
 void Server::dccSendRequest(const TQString &partner, const TQString &fileName, const TQString &address, const TQString &port, unsigned long size)
@@ -1740,7 +1740,7 @@ void Server::dccSendRequest(const TQString &partner, const TQString &fileName, c
 
     appendMessageToFrontmost( i18n( "DCC" ),
                               i18n( "Asking %1 to accept upload of \"%2\" (%3)..." )
-                              .tqarg( partner,
+                              .arg( partner,
                                     showfile,
                                     ( size == 0 ) ? i18n( "unknown size" ) : KIO::convertSize( size ) ) );
 }
@@ -1790,7 +1790,7 @@ void Server::startReverseDccSendTransfer(const TQString& sourceNick,const TQStri
         appendMessageToFrontmost( i18n( "Error" ),
                                   i18n( "%1 = file name, %2 = nickname",
                                         "Received invalid passive DCC send acceptance message for \"%1\" from %2." )
-                                  .tqarg( showfile,
+                                  .arg( showfile,
                                         sourceNick ) );
 
     }
@@ -1817,7 +1817,7 @@ void Server::resumeDccGetTransfer(const TQString &sourceNick, const TQStringList
         appendMessageToFrontmost( i18n( "DCC" ),
                                   i18n( "%1 = file name, %2 = nickname of sender, %3 = percentage of file size, %4 = file size",
                                         "Resuming download of \"%1\" from %2 starting at %3% of %4..." )
-                                  .tqarg( showfile,
+                                  .arg( showfile,
                                         sourceNick,
                                         TQString::number( dccTransfer->getProgress() ),
                                         ( dccTransfer->getFileSize() == 0 ) ? i18n( "unknown size" ) : KIO::convertSize( dccTransfer->getFileSize() ) ) );
@@ -1827,7 +1827,7 @@ void Server::resumeDccGetTransfer(const TQString &sourceNick, const TQStringList
         appendMessageToFrontmost( i18n( "Error" ),
                                   i18n( "%1 = file name, %2 = nickname",
                                         "Received invalid resume acceptance message for \"%1\" from %2." )
-                                  .tqarg( showfile,
+                                  .arg( showfile,
                                         sourceNick ) );
     }
 }
@@ -1852,7 +1852,7 @@ void Server::resumeDccSendTransfer(const TQString &sourceNick, const TQStringLis
         appendMessageToFrontmost( i18n( "DCC" ),
                                   i18n( "%1 = file name, %2 = nickname of recipient, %3 = percentage of file size, %4 = file size",
                                         "Resuming upload of \"%1\" to %2 starting at %3% of %4...")
-                                  .tqarg( showfile,
+                                  .arg( showfile,
                                         sourceNick,
                                         TQString::number(dccTransfer->getProgress()),
                                         ( dccTransfer->getFileSize() == 0 ) ? i18n( "unknown size" ) : KIO::convertSize( dccTransfer->getFileSize() ) ) );
@@ -1867,7 +1867,7 @@ void Server::resumeDccSendTransfer(const TQString &sourceNick, const TQStringLis
         appendMessageToFrontmost( i18n( "Error" ),
                                   i18n( "%1 = file name, %2 = nickname",
                                         "Received invalid resume request for \"%1\" from %2." )
-                                  .tqarg( showfile,
+                                  .arg( showfile,
                                         sourceNick ) );
     }
 }
@@ -1884,10 +1884,10 @@ void Server::dccGetDone(DccTransfer* item)
 
     if(item->getStatus()==DccTransfer::Done)
         appendMessageToFrontmost(i18n("DCC"),i18n("%1 = file name, %2 = nickname of sender",
-            "Download of \"%1\" from %2 finished.").tqarg(showfile, item->getPartnerNick()));
+            "Download of \"%1\" from %2 finished.").arg(showfile, item->getPartnerNick()));
     else if(item->getStatus()==DccTransfer::Failed)
         appendMessageToFrontmost(i18n("DCC"),i18n("%1 = file name, %2 = nickname of sender",
-            "Download of \"%1\" from %2 failed. Reason: %3.").tqarg(showfile,
+            "Download of \"%1\" from %2 failed. Reason: %3.").arg(showfile,
             item->getPartnerNick(), item->getStatusDetail()));
 }
 
@@ -1903,10 +1903,10 @@ void Server::dccSendDone(DccTransfer* item)
 
     if(item->getStatus()==DccTransfer::Done)
         appendMessageToFrontmost(i18n("DCC"),i18n("%1 = file name, %2 = nickname of recipient",
-            "Upload of \"%1\" to %2 finished.").tqarg(showfile, item->getPartnerNick()));
+            "Upload of \"%1\" to %2 finished.").arg(showfile, item->getPartnerNick()));
     else if(item->getStatus()==DccTransfer::Failed)
         appendMessageToFrontmost(i18n("DCC"),i18n("%1 = file name, %2 = nickname of recipient",
-            "Upload of \"%1\" to %2 failed. Reason: %3.").tqarg(showfile, item->getPartnerNick(),
+            "Upload of \"%1\" to %2 failed. Reason: %3.").arg(showfile, item->getPartnerNick(),
             item->getStatusDetail()));
 }
 
@@ -1925,7 +1925,7 @@ void Server::dccStatusChanged(DccTransfer *item, int newStatus, int oldStatus)
         // when resuming, a message about the receiver's acceptance has been shown already, so suppress this message
         if ( newStatus == DccTransfer::Transferring && oldStatus == DccTransfer::WaitingRemote && !item->isResumed() )
             appendMessageToFrontmost( i18n( "DCC" ), i18n( "%1 = file name, %2 nickname of recipient",
-                "Sending \"%1\" to %2...").tqarg( showfile, item->getPartnerNick() ) );
+                "Sending \"%1\" to %2...").arg( showfile, item->getPartnerNick() ) );
     }
     else  // type == Receive
     {
@@ -1933,7 +1933,7 @@ void Server::dccStatusChanged(DccTransfer *item, int newStatus, int oldStatus)
         {
             appendMessageToFrontmost( i18n( "DCC" ),
                                         i18n( "%1 = file name, %2 = file size, %3 = nickname of sender", "Downloading \"%1\" (%2) from %3...")
-                                        .tqarg( showfile,
+                                        .arg( showfile,
                                             ( item->getFileSize() == 0 ) ? i18n( "unknown size" ) : KIO::convertSize( item->getFileSize() ),
                                             item->getPartnerNick() ) );
         }
@@ -2068,7 +2068,7 @@ void Server::updateChannelMode(const TQString &updater, const TQString &channelN
         if (plus)
         {
             TQDateTime when;
-            addBan(channelName, TQString("%1 %2 %3").tqarg(parameter).tqarg(updater).tqarg(TQDateTime::currentDateTime().toTime_t()));
+            addBan(channelName, TQString("%1 %2 %3").arg(parameter).arg(updater).arg(TQDateTime::currentDateTime().toTime_t()));
         } else {
             removeBan(channelName, parameter);
         }
@@ -2299,7 +2299,7 @@ NickInfoPtr Server::setWatchedNickOnline(const TQString& nickname)
     if (!addressee.isEmpty()) Konversation::Addressbook::self()->emitContactPresenceChanged(addressee.uid());
 
     appendMessageToFrontmost(i18n("Notify"),"<a href=\"#"+nickname+"\">"+
-        i18n("%1 is online (%2).").tqarg(nickname).tqarg(getServerName())+"</a>", getStatusView());
+        i18n("%1 is online (%2).").arg(nickname).arg(getServerName())+"</a>", getStatusView());
 
     static_cast<KonversationApplication*>(kapp)->notificationHandler()->nickOnline(getStatusView(), nickname);
 
@@ -2316,7 +2316,7 @@ void Server::setWatchedNickOffline(const TQString& nickname, const NickInfoPtr n
 
     emit watchedNickChanged(this, nickname, false);
 
-    appendMessageToFrontmost(i18n("Notify"), i18n("%1 went offline (%2).").tqarg(nickname).tqarg(getServerName()), getStatusView());
+    appendMessageToFrontmost(i18n("Notify"), i18n("%1 went offline (%2).").arg(nickname).arg(getServerName()), getStatusView());
 
     static_cast<KonversationApplication*>(kapp)->notificationHandler()->nickOffline(getStatusView(), nickname);
 
@@ -2727,7 +2727,7 @@ void Server::appendCommandMessageToChannel(const TQString& channel,const TQStrin
     }
     else
     {
-        appendStatusMessage(command, TQString("%1 %2").tqarg(channel).tqarg(message));
+        appendStatusMessage(command, TQString("%1 %2").arg(channel).arg(message));
     }
 }
 
@@ -2895,7 +2895,7 @@ void Server::invitation(const TQString& nick,const TQString& channel)
 {
     if(KMessageBox::questionYesNo(getViewContainer()->getWindow(),
         i18n("You were invited by %1 to join channel %2. "
-        "Do you accept the invitation?").tqarg(nick).tqarg(channel),
+        "Do you accept the invitation?").arg(nick).arg(channel),
         i18n("Invitation"),
         i18n("Join"),
         i18n("Ignore"),
@@ -2907,12 +2907,12 @@ void Server::invitation(const TQString& nick,const TQString& channel)
 
 void Server::scriptNotFound(const TQString& name)
 {
-    appendMessageToFrontmost(i18n("DCOP"),i18n("Error: Could not find script \"%1\".").tqarg(name));
+    appendMessageToFrontmost(i18n("DCOP"),i18n("Error: Could not find script \"%1\".").arg(name));
 }
 
 void Server::scriptExecutionError(const TQString& name)
 {
-    appendMessageToFrontmost(i18n("DCOP"),i18n("Error: Could not execute script \"%1\". Check file permissions.").tqarg(name));
+    appendMessageToFrontmost(i18n("DCOP"),i18n("Error: Could not execute script \"%1\". Check file permissions.").arg(name));
 }
 
 bool Server::isAChannel(const TQString &channel) const
diff --git a/konversation/src/serverlistdialog.cpp b/konversation/src/serverlistdialog.cpp
index e8b739b..38ad8f4 100644
--- a/konversation/src/serverlistdialog.cpp
+++ b/konversation/src/serverlistdialog.cpp
@@ -287,12 +287,12 @@ namespace Konversation
 
                 if (parent && parent->childCount() == 1)
                 {
-                    KMessageBox::error(this, i18n("You cannot delete %1.\n\nThe network %2 needs to have at least one server.").tqarg(item->name()).tqarg(parent->name()));
+                    KMessageBox::error(this, i18n("You cannot delete %1.\n\nThe network %2 needs to have at least one server.").arg(item->name()).arg(parent->name()));
                     return;
                 }
                 else if (parent && parent->childCount() == parent->selectedChildrenCount())
                 {
-                    KMessageBox::error(this, i18n("You cannot delete the selected servers.\n\nThe network %1 needs to have at least one server.").tqarg(parent->name()));
+                    KMessageBox::error(this, i18n("You cannot delete the selected servers.\n\nThe network %1 needs to have at least one server.").arg(parent->name()));
                     return;
                 }
             }
@@ -309,7 +309,7 @@ namespace Konversation
         if (selectedItems.count()>1)
             question = i18n("Do you really want to delete the selected entries?");
         else
-            question = i18n("Do you really want to delete %1?").tqarg(item->name());
+            question = i18n("Do you really want to delete %1?").arg(item->name());
 
         if (KMessageBox::warningContinueCancel(this,question) == KMessageBox::Cancel)
         {
@@ -483,7 +483,7 @@ namespace Konversation
         }
 
         m_serverList->setUpdatesEnabled(true);
-        m_serverList->tqrepaint();
+        m_serverList->repaint();
     }
 
     TQListViewItem* ServerListDialog::insertServerGroup(ServerGroupSettingsPtr serverGroup)
diff --git a/konversation/src/sslsocket.cpp b/konversation/src/sslsocket.cpp
index de6c4c4..1f0e4b3 100644
--- a/konversation/src/sslsocket.cpp
+++ b/konversation/src/sslsocket.cpp
@@ -91,7 +91,7 @@ const TQString SSLSocket::details()
 {
     int strength = d->kssl->connectionInfo().getCipherUsedBits();
 
-    TQString details = i18n("Connection is secured with %1 bit SSL.").tqarg(strength);
+    TQString details = i18n("Connection is secured with %1 bit SSL.").arg(strength);
 
     return details;
 }
@@ -228,7 +228,7 @@ int SSLSocket::verifyCertificate()
                     "does not match the one the "
                     "certificate was issued to.");
                 result = KMessageBox::warningYesNoCancel( m_serverParent,
-                    msg.tqarg(hostname),
+                    msg.arg(hostname),
                     i18n("Server Authentication"),
                     KGuiItem(i18n("Details")),
                     KGuiItem(i18n("Continue")),
@@ -265,7 +265,7 @@ int SSLSocket::verifyCertificate()
                             "does not match the one the "
                             "certificate was issued to.");
                         result = KMessageBox::warningYesNoCancel( m_serverParent,
-                            msg.tqarg(hostname),
+                            msg.arg(hostname),
                             i18n("Server Authentication"),
                             KGuiItem(i18n("Details")),
                             KGuiItem(i18n("Continue")),
@@ -277,7 +277,7 @@ int SSLSocket::verifyCertificate()
                         TQString msg = i18n("The server (%1) certificate failed the "
                             "authenticity test.");
                         result = KMessageBox::warningYesNoCancel( m_serverParent,
-                            msg.tqarg(hostname),
+                            msg.arg(hostname),
                             i18n("Server Authentication"),
                             KGuiItem(i18n("Details")),
                             KGuiItem(i18n("Continue")),
diff --git a/konversation/src/statuspanel.cpp b/konversation/src/statuspanel.cpp
index e2ff9f1..9915731 100644
--- a/konversation/src/statuspanel.cpp
+++ b/konversation/src/statuspanel.cpp
@@ -270,14 +270,14 @@ bool StatusPanel::closeYourself(bool confirm)
     // that due to string freeze at the moment.
     if (confirm && !m_server->isConnected())
     {
-        result = KMessageBox::warningContinueCancel(this, i18n("Do you really want to close '%1'?\n\n All associated tabs will be closed as well.").tqarg(getName()),
+        result = KMessageBox::warningContinueCancel(this, i18n("Do you really want to close '%1'?\n\n All associated tabs will be closed as well.").arg(getName()),
             i18n("Close Tab"), i18n("Close"), "QuitServerTab");
     }
     else
     {
         result = KMessageBox::warningContinueCancel(
             this,
-            i18n("Do you want to disconnect from '%1'?\n\n All associated tabs will be closed as well.").tqarg(m_server->getServerName()),
+            i18n("Do you want to disconnect from '%1'?\n\n All associated tabs will be closed as well.").arg(m_server->getServerName()),
             i18n("Disconnect From Server"),
             i18n("Disconnect"),
             "QuitServerTab");
@@ -347,7 +347,7 @@ TQString StatusPanel::getChannelEncoding()         // virtual
                                                   // virtual
 TQString StatusPanel::getChannelEncodingDefaultDesc()
 {
-    return i18n("Identity Default ( %1 )").tqarg(getServer()->getIdentity()->getCodecName());
+    return i18n("Identity Default ( %1 )").arg(getServer()->getIdentity()->getCodecName());
 }
 
 //Used to disable functions when not connected
diff --git a/konversation/src/theme_preferences.cpp b/konversation/src/theme_preferences.cpp
index ba5c246..1b052fd 100644
--- a/konversation/src/theme_preferences.cpp
+++ b/konversation/src/theme_preferences.cpp
@@ -245,7 +245,7 @@ void Theme_Config::removeTheme()
     dir = m_dirs[iconThemeIndex->currentItem()];
 
     int remove = KMessageBox::warningContinueCancel(0L,
-        i18n("Do you want to remove %1 ?").tqarg(themeName),
+        i18n("Do you want to remove %1 ?").arg(themeName),
         i18n("Remove Theme"),
         KStdGuiItem::del(),
         "warningRemoveTheme"
diff --git a/konversation/src/theme_preferencesui.ui b/konversation/src/theme_preferencesui.ui
index 44c01e8..90c3a2b 100644
--- a/konversation/src/theme_preferencesui.ui
+++ b/konversation/src/theme_preferencesui.ui
@@ -103,7 +103,7 @@
                     <property name="text">
                         <string></string>
                     </property>
-                    <property name="tqalignment">
+                    <property name="alignment">
                         <set>AlignCenter</set>
                     </property>
                     <property name="toolTip" stdset="0">
@@ -117,7 +117,7 @@
                     <property name="text">
                         <string></string>
                     </property>
-                    <property name="tqalignment">
+                    <property name="alignment">
                         <set>AlignCenter</set>
                     </property>
                     <property name="toolTip" stdset="0">
@@ -131,7 +131,7 @@
                     <property name="text">
                         <string></string>
                     </property>
-                    <property name="tqalignment">
+                    <property name="alignment">
                         <set>AlignCenter</set>
                     </property>
                     <property name="toolTip" stdset="0">
@@ -145,7 +145,7 @@
                     <property name="text">
                         <string></string>
                     </property>
-                    <property name="tqalignment">
+                    <property name="alignment">
                         <set>AlignCenter</set>
                     </property>
                     <property name="toolTip" stdset="0">
@@ -159,7 +159,7 @@
                     <property name="text">
                         <string></string>
                     </property>
-                    <property name="tqalignment">
+                    <property name="alignment">
                         <set>AlignCenter</set>
                     </property>
                     <property name="toolTip" stdset="0">
@@ -173,7 +173,7 @@
                     <property name="text">
                         <string></string>
                     </property>
-                    <property name="tqalignment">
+                    <property name="alignment">
                         <set>AlignCenter</set>
                     </property>
                     <property name="toolTip" stdset="0">
@@ -187,7 +187,7 @@
                     <property name="text">
                         <string></string>
                     </property>
-                    <property name="tqalignment">
+                    <property name="alignment">
                         <set>AlignCenter</set>
                     </property>
                     <property name="toolTip" stdset="0">
diff --git a/konversation/src/topiclabel.cpp b/konversation/src/topiclabel.cpp
index 0fdbe18..c618026 100644
--- a/konversation/src/topiclabel.cpp
+++ b/konversation/src/topiclabel.cpp
@@ -114,8 +114,8 @@ namespace Konversation
             removeSelection();
             KURL ux = KURL::fromPathOrURL(urlToDrag);
             //FIXME consistent IRC URL serialization
-            if (urlToDrag.startsWith("##")) ux=TQString("irc://%1:%2/%3").tqarg(m_server->getServerName()).
-                    tqarg(m_server->getPort()).tqarg(urlToDrag.mid(2));
+            if (urlToDrag.startsWith("##")) ux=TQString("irc://%1:%2/%3").arg(m_server->getServerName()).
+                    arg(m_server->getPort()).arg(urlToDrag.mid(2));
             KURLDrag* u=new KURLDrag(ux,viewport());
             u->drag();
         }
@@ -377,7 +377,7 @@ namespace Konversation
 
             m_channelPopup->changeTitle(m_channelPopupId,prettyId);
             m_isOnChannel = true;
-            emit setStatusBarTempText(i18n("Join the channel %1").tqarg(m_currentChannel));
+            emit setStatusBarTempText(i18n("Join the channel %1").arg(m_currentChannel));
         }
     }
 }
diff --git a/konversation/src/viewcontainer.cpp b/konversation/src/viewcontainer.cpp
index 04d6635..7b92a86 100644
--- a/konversation/src/viewcontainer.cpp
+++ b/konversation/src/viewcontainer.cpp
@@ -542,7 +542,7 @@ void ViewContainer::updateViewActions(int index)
                     name = name.replace('&', "&&");
                     channelListAction->setEnabled(true);
                     channelListAction->setChecked(m_frontServer->getChannelListPanel());
-                    channelListAction->setText(i18n("Channel &List for %1").tqarg(name));
+                    channelListAction->setText(i18n("Channel &List for %1").arg(name));
                 }
                 else
                 {
@@ -562,7 +562,7 @@ void ViewContainer::updateViewActions(int index)
                 {
                     TQString name = view->getName();
                     name = name.replace('&', "&&");
-                    action->setText(i18n("&Open Logfile for %1").tqarg(name));
+                    action->setText(i18n("&Open Logfile for %1").arg(name));
                 }
             }
 
@@ -573,7 +573,7 @@ void ViewContainer::updateViewActions(int index)
             if (action && view->getType() == ChatWindow::Channel)
             {
                 action->setEnabled(true);
-                action->setText(i18n("&Channel Settings for %1...").tqarg(view->getName()));
+                action->setText(i18n("&Channel Settings for %1...").arg(view->getName()));
             }
             else if (action)
             {
@@ -1631,7 +1631,7 @@ void ViewContainer::updateViewEncoding(ChatWindow* view)
 
                 if(m_frontServer)
                 {
-                    codecAction->changeItem(0, i18n("Default encoding", "Default ( %1 )").tqarg(m_frontServer->getIdentity()->getCodecName()));
+                    codecAction->changeItem(0, i18n("Default encoding", "Default ( %1 )").arg(m_frontServer->getIdentity()->getCodecName()));
                 }
 
                 if(encoding.isEmpty())
@@ -1969,7 +1969,7 @@ void ViewContainer::openLogFile(const TQString& caption, const TQString& file)
     if (!file.isEmpty())
     {
         LogfileReader* logReader = new LogfileReader(m_tabWidget, file);
-        addView(logReader, i18n("Logfile of %1").tqarg(caption));
+        addView(logReader, i18n("Logfile of %1").arg(caption));
         logReader->setServer(0);
     }
 }
diff --git a/konversation/src/viewtreeitem.cpp b/konversation/src/viewtreeitem.cpp
index f831fbb..2839366 100644
--- a/konversation/src/viewtreeitem.cpp
+++ b/konversation/src/viewtreeitem.cpp
@@ -173,7 +173,7 @@ void ViewTreeItem::setColor(TQColor color)
     {
         m_color = color;
         m_customColorSet = true;
-        tqrepaint();
+        repaint();
     }
 }
 
@@ -201,7 +201,7 @@ void ViewTreeItem::setHighlighted(bool highlight)
     if (m_isHighlighted != highlight)
     {
         m_isHighlighted = highlight;
-        tqrepaint();
+        repaint();
     }
 }
 
