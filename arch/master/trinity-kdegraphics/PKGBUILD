# $Id$
# Maintainer: David C. Rankin <drankinatty@gmail.com>
#
# All modifications and uses of this file are licensed under
# the software for which this file was made for, should the software
# be under an Open Source License, at least version 1.9, defined
# by the Open Source Initiative. In other cases, this file is automatically
# released to the Public Domain.
#

pkgbase=trinity
pkgname=trinity-kdegraphics
pkgver=12345
pkgrel=1.0
arch=('i686' 'x86_64')
url='http://www.kde.org'
license=('GPL')
groups=('trinity')
pkgdesc="Trinity - kdegraphics"
depends=('trinity-kdebase' 'libart-lgpl' 'libgphoto2' 'libtiff' 'openexr' 't1lib')
makedepends=('pkgconfig' 'cmake' 'autoconf' 'subversion' 'imake' 'fribidi')
# 'poppler-qt'
optdepends=('xscreensaver: Screen saver and locker for the X Window System')
provides=('trinity-kdegraphics')
conflicts=('trinity-kdegraphics')
replaces=('trinity-kdegraphics')
options=('libtool' '!strip')
source=('GSmartPointer.h.patch')
md5sums=('7b93c9bdf1208df453c9838519fab109')

_svnmod=kdegraphics
_svntrunk="svn://anonsvn.kde.org/home/kde/branches/trinity/${_svnmod}"

trinity_prefix="/opt/trinity"

build() {

  cd ${srcdir}

  msg "Connecting to SVN server to update or checkout ${_svnmod}...."
  if [ -d ${_svnmod}/.svn ]; then
    (cd ${_svnmod} && svn up)
    [[ $? -eq 0 ]] || _co_failed=1
  else
    (svn co $_svntrunk ${_svnmod})
    [[ $? -eq 0 ]] || _co_failed=1
  fi

  # if update or checkout failed - bail...
  if [[ $_co_failed -ne 1 ]]; then
    msg "SVN checkout of revision $pkgver -- Complete."
  else
    msg "SVN checkout of revision $pkgver -- Failed or server timeout."
    exit 1
  fi

  # patch for gcc-4.6
  if grep -q cstddef  ${srcdir}/kdegraphics/kviewshell/plugins/djvu/libdjvu/GSmartPointer.h; then
    msg "Patch for GCC 4.6 - Previously Applied"
  else
    msg "Applying Patch for GCC 4.6"
    patch -p0 -i ${srcdir}/GSmartPointer.h.patch || return 1
  fi

  msg "Setting PATH, CMAKE and Trinity Environment variables"
  export CMAKE_PREFIX_PATH=/opt/qt:/opt/trinity
  if [[ -r /etc/profile.d/qt3.sh ]]; then
    . /etc/profile.d/qt3.sh
    [[ -n $QTDIR ]] && _qtdir=$QTDIR
  else
    [[ ${PATH%%:*} =~ ${_qtdir}/bin ]] || export PATH=${_qtdir}/bin:$PATH
  fi

#   export CMAKE_INCLUDE_PATH=/opt/qt/include:\
# /opt/qt/include/tqt:\
# /usr/include/dbus-1.0:\
# /opt/trinity/include:\
# /opt/trinity/include/libkrandr:\
# /usr/include
#   export LD_LIBRARY_PATH=/opt/trinity/lib:/opt/trinity/lib/kde3:$LD_LIBRARY_PATH
#   export PKG_CONFIG_PATH=:/opt/trinity/lib/pkgconfig:/opt/qt/lib/pkgconfig

#   cd ${srcdir}/${_svnmod}

  cd $srcdir
  msg "Creating out-of-source build directory: ${srcdir}/build"
  mkdir -p build
  cd build

  msg "Starting cmake..."
  cmake ${srcdir}/${_svnmod} \
    -DCMAKE_INSTALL_PREFIX=${trinity_prefix} \
    -DCMAKE_VERBOSE_MAKEFILE=ON \
    -DQT_VERSION=3 \
    -DCMAKE_CXX_FLAGS="-fpermissive" \
    -DWITH_T1LIB=ON \
    -DWITH_LIBPAPER=ON \
    -DWITH_TIFF=ON \
    -DWITH_OPENEXR=ON \
    -DWITH_PAM=ON \
    -DBUILD_ALL=ON
  make

#     -DWITH_PDF=ON \ (waiting on poppler-qt3)

#     -DWITH_QT3=ON \
#     -DQTDIR=/opt/qt \
#     -DQT_LIBRARY_DIRS=/opt/qt/lib \
}

package() {
  msg "Packaging - $pkgname-$pkgver"
#   cd ${srcdir}/${_svnmod}
  cd ${srcdir}/build

  make DESTDIR="$pkgdir/" install

  cd ${startdir}

#
#   cd ${startdir}

#   rm -r ${srcdir}/${_svnmod}
}
