Index: b/Makefile.in
===================================================================
--- a/Makefile.in
+++ b/Makefile.in
@@ -136,7 +136,6 @@
 ACLOCAL = @ACLOCAL@
 AMTAR = @AMTAR@
 AR = @AR@
-ARCH = @ARCH@
 AUTOCONF = @AUTOCONF@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
Index: b/configure
===================================================================
--- a/configure
+++ b/configure
@@ -746,7 +746,6 @@
 am__EXEEXT_TRUE
 LTLIBOBJS
 LIBOBJS
-ARCH
 BACKEND_PKG
 LIBR_BACKEND
 BACKEND_NAME
@@ -13062,44 +13061,6 @@
 
 
 
-## Handle target architecture configuration
-UNAMEM=`uname -m`;
-if test "$UNAMEM" = "i386" ; then
-	ARCH="i386";
-elif test "$UNAMEM" = "i486" ; then
-	ARCH="i386";
-elif test "$UNAMEM" = "i586" ; then
-	ARCH="i386";
-elif test "$UNAMEM" = "i686" ; then
-	ARCH="i386";
-elif test "$UNAMEM" = "armv5tejl" ; then
-	ARCH="armel";
-elif test "$UNAMEM" = "armv6l" ; then
-	ARCH="armhf";
-elif test "$UNAMEM" = "x86_64"; then
-	ARCH="amd64";
-fi
-if test "$ARCH" = "i386" ; then
-	CFLAGS="$CFLAGS -m32";
-	{ $as_echo "$as_me:${as_lineno-$LINENO}: Ready for 32-bit compilation." >&5
-$as_echo "$as_me: Ready for 32-bit compilation." >&6;};
-elif test "$ARCH" = "amd64" ; then
-	CFLAGS="$CFLAGS -m64";
-	{ $as_echo "$as_me:${as_lineno-$LINENO}: Ready for 64-bit compilation." >&5
-$as_echo "$as_me: Ready for 64-bit compilation." >&6;};
-elif test "$ARCH" = "armel" ; then
-	CFLAGS="$CFLAGS";
-	{ $as_echo "$as_me:${as_lineno-$LINENO}: Ready for armel compilation." >&5
-$as_echo "$as_me: Ready for armel compilation." >&6;};
-elif test "$ARCH" = "armhf" ; then
-	CFLAGS="$CFLAGS";
-	{ $as_echo "$as_me:${as_lineno-$LINENO}: Ready for armhf compilation." >&5
-$as_echo "$as_me: Ready for armhf compilation." >&6;};
-else
-	as_fn_error $? "Target architecture ${ARCH} is invalid!" "$LINENO" 5 ;
-fi
-
-## END Handle target architecture configuration
 
 ac_config_headers="$ac_config_headers config.h"
 
Index: b/configure.ac
===================================================================
--- a/configure.ac
+++ b/configure.ac
@@ -71,40 +71,6 @@
 AC_SUBST(LIBR_BACKEND)
 AC_SUBST(BACKEND_PKG)
 
-## Handle target architecture configuration
-UNAMEM=`uname -m`;
-if test "$UNAMEM" = "i386" ; then
-	ARCH="i386";
-elif test "$UNAMEM" = "i486" ; then
-	ARCH="i386";
-elif test "$UNAMEM" = "i586" ; then
-	ARCH="i386";
-elif test "$UNAMEM" = "i686" ; then
-	ARCH="i386";
-elif test "$UNAMEM" = "armv5tejl" ; then
-	ARCH="armel";
-elif test "$UNAMEM" = "armv6l" ; then
-	ARCH="armhf";
-elif test "$UNAMEM" = "x86_64"; then
-	ARCH="amd64";
-fi
-if test "$ARCH" = "i386" ; then
-	CFLAGS="$CFLAGS -m32";
-	AC_MSG_NOTICE([Ready for 32-bit compilation.]);
-elif test "$ARCH" = "amd64" ; then
-	CFLAGS="$CFLAGS -m64";
-	AC_MSG_NOTICE([Ready for 64-bit compilation.]);
-elif test "$ARCH" = "armel" ; then
-	CFLAGS="$CFLAGS";
-	AC_MSG_NOTICE([Ready for armel compilation.]);
-elif test "$ARCH" = "armhf" ; then
-	CFLAGS="$CFLAGS";
-	AC_MSG_NOTICE([Ready for armhf compilation.]);
-else
-	AC_MSG_ERROR([Target architecture ${ARCH} is invalid!]);
-fi
-AC_SUBST(ARCH)
-## END Handle target architecture configuration
 
 AC_CONFIG_HEADERS(config.h)
 AC_OUTPUT(
Index: b/man/Makefile.in
===================================================================
--- a/man/Makefile.in
+++ b/man/Makefile.in
@@ -81,7 +81,6 @@
 ACLOCAL = @ACLOCAL@
 AMTAR = @AMTAR@
 AR = @AR@
-ARCH = @ARCH@
 AUTOCONF = @AUTOCONF@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
Index: b/src/Makefile.in
===================================================================
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -103,7 +103,6 @@
 ACLOCAL = @ACLOCAL@
 AMTAR = @AMTAR@
 AR = @AR@
-ARCH = @ARCH@
 AUTOCONF = @AUTOCONF@
 AUTOHEADER = @AUTOHEADER@
 AUTOMAKE = @AUTOMAKE@
